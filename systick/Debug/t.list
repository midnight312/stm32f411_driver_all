
t.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000334  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004cc  080004cc  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004cc  080004cc  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  080004cc  080004cc  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004cc  080004cc  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004cc  080004cc  000104cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004d0  080004d0  000104d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  080004d4  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000004  080004d8  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  080004d8  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a60  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000219  00000000  00000000  00020a94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000080  00000000  00000000  00020cb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000068  00000000  00000000  00020d30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dbb3  00000000  00000000  00020d98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000062e  00000000  00000000  0002e94b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004f8bb  00000000  00000000  0002ef79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007e834  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000158  00000000  00000000  0007e888  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000004 	.word	0x20000004
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080004b4 	.word	0x080004b4

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000008 	.word	0x20000008
 80001d4:	080004b4 	.word	0x080004b4

080001d8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	4603      	mov	r3, r0
 80001e0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80001e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001e6:	2b00      	cmp	r3, #0
 80001e8:	db0b      	blt.n	8000202 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80001ea:	79fb      	ldrb	r3, [r7, #7]
 80001ec:	f003 021f 	and.w	r2, r3, #31
 80001f0:	4907      	ldr	r1, [pc, #28]	; (8000210 <__NVIC_EnableIRQ+0x38>)
 80001f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001f6:	095b      	lsrs	r3, r3, #5
 80001f8:	2001      	movs	r0, #1
 80001fa:	fa00 f202 	lsl.w	r2, r0, r2
 80001fe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000202:	bf00      	nop
 8000204:	370c      	adds	r7, #12
 8000206:	46bd      	mov	sp, r7
 8000208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	e000e100 	.word	0xe000e100

08000214 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000214:	b480      	push	{r7}
 8000216:	b083      	sub	sp, #12
 8000218:	af00      	add	r7, sp, #0
 800021a:	4603      	mov	r3, r0
 800021c:	6039      	str	r1, [r7, #0]
 800021e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000220:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000224:	2b00      	cmp	r3, #0
 8000226:	db0a      	blt.n	800023e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000228:	683b      	ldr	r3, [r7, #0]
 800022a:	b2da      	uxtb	r2, r3
 800022c:	490c      	ldr	r1, [pc, #48]	; (8000260 <__NVIC_SetPriority+0x4c>)
 800022e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000232:	0112      	lsls	r2, r2, #4
 8000234:	b2d2      	uxtb	r2, r2
 8000236:	440b      	add	r3, r1
 8000238:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800023c:	e00a      	b.n	8000254 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800023e:	683b      	ldr	r3, [r7, #0]
 8000240:	b2da      	uxtb	r2, r3
 8000242:	4908      	ldr	r1, [pc, #32]	; (8000264 <__NVIC_SetPriority+0x50>)
 8000244:	79fb      	ldrb	r3, [r7, #7]
 8000246:	f003 030f 	and.w	r3, r3, #15
 800024a:	3b04      	subs	r3, #4
 800024c:	0112      	lsls	r2, r2, #4
 800024e:	b2d2      	uxtb	r2, r2
 8000250:	440b      	add	r3, r1
 8000252:	761a      	strb	r2, [r3, #24]
}
 8000254:	bf00      	nop
 8000256:	370c      	adds	r7, #12
 8000258:	46bd      	mov	sp, r7
 800025a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800025e:	4770      	bx	lr
 8000260:	e000e100 	.word	0xe000e100
 8000264:	e000ed00 	.word	0xe000ed00

08000268 <init_all>:
		asm("nop");

	}
}
void init_all(void)
{
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0
	//init led
	RCC->AHB1ENR = (1u << 3);  //enable clock for port D
 800026c:	4b3a      	ldr	r3, [pc, #232]	; (8000358 <init_all+0xf0>)
 800026e:	2208      	movs	r2, #8
 8000270:	631a      	str	r2, [r3, #48]	; 0x30
	GPIOD->MODER &= ~GPIO_MODER_MODER12_Msk;          //mode output
 8000272:	4b3a      	ldr	r3, [pc, #232]	; (800035c <init_all+0xf4>)
 8000274:	681b      	ldr	r3, [r3, #0]
 8000276:	4a39      	ldr	r2, [pc, #228]	; (800035c <init_all+0xf4>)
 8000278:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 800027c:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= 1u << GPIO_MODER_MODER12_Pos;
 800027e:	4b37      	ldr	r3, [pc, #220]	; (800035c <init_all+0xf4>)
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	4a36      	ldr	r2, [pc, #216]	; (800035c <init_all+0xf4>)
 8000284:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000288:	6013      	str	r3, [r2, #0]

	GPIOD->MODER &= ~GPIO_MODER_MODER13_Msk;          //mode output
 800028a:	4b34      	ldr	r3, [pc, #208]	; (800035c <init_all+0xf4>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	4a33      	ldr	r2, [pc, #204]	; (800035c <init_all+0xf4>)
 8000290:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8000294:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= 1u << GPIO_MODER_MODER13_Pos;
 8000296:	4b31      	ldr	r3, [pc, #196]	; (800035c <init_all+0xf4>)
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	4a30      	ldr	r2, [pc, #192]	; (800035c <init_all+0xf4>)
 800029c:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80002a0:	6013      	str	r3, [r2, #0]

	GPIOD->MODER &= ~GPIO_MODER_MODER14_Msk;          //mode output
 80002a2:	4b2e      	ldr	r3, [pc, #184]	; (800035c <init_all+0xf4>)
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	4a2d      	ldr	r2, [pc, #180]	; (800035c <init_all+0xf4>)
 80002a8:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 80002ac:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= 1u << GPIO_MODER_MODER14_Pos;
 80002ae:	4b2b      	ldr	r3, [pc, #172]	; (800035c <init_all+0xf4>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	4a2a      	ldr	r2, [pc, #168]	; (800035c <init_all+0xf4>)
 80002b4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80002b8:	6013      	str	r3, [r2, #0]

	GPIOD->MODER &= ~GPIO_MODER_MODER15_Msk;          //mode output
 80002ba:	4b28      	ldr	r3, [pc, #160]	; (800035c <init_all+0xf4>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	4a27      	ldr	r2, [pc, #156]	; (800035c <init_all+0xf4>)
 80002c0:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 80002c4:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= 1u << GPIO_MODER_MODER15_Pos;
 80002c6:	4b25      	ldr	r3, [pc, #148]	; (800035c <init_all+0xf4>)
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	4a24      	ldr	r2, [pc, #144]	; (800035c <init_all+0xf4>)
 80002cc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80002d0:	6013      	str	r3, [r2, #0]

	//CONFIG PAO INPUT PULL DOWN
	RCC->AHB1ENR |= (1UL << 0);
 80002d2:	4b21      	ldr	r3, [pc, #132]	; (8000358 <init_all+0xf0>)
 80002d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d6:	4a20      	ldr	r2, [pc, #128]	; (8000358 <init_all+0xf0>)
 80002d8:	f043 0301 	orr.w	r3, r3, #1
 80002dc:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->MODER &= ~GPIO_MODER_MODER0_Msk;
 80002de:	4b20      	ldr	r3, [pc, #128]	; (8000360 <init_all+0xf8>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	4a1f      	ldr	r2, [pc, #124]	; (8000360 <init_all+0xf8>)
 80002e4:	f023 0303 	bic.w	r3, r3, #3
 80002e8:	6013      	str	r3, [r2, #0]
	GPIOA->PUPDR &= ~GPIO_PUPDR_PUPD0_Msk;
 80002ea:	4b1d      	ldr	r3, [pc, #116]	; (8000360 <init_all+0xf8>)
 80002ec:	68db      	ldr	r3, [r3, #12]
 80002ee:	4a1c      	ldr	r2, [pc, #112]	; (8000360 <init_all+0xf8>)
 80002f0:	f023 0303 	bic.w	r3, r3, #3
 80002f4:	60d3      	str	r3, [r2, #12]
	GPIOA->PUPDR |= 0x2UL << GPIO_PUPDR_PUPD0_Pos;
 80002f6:	4b1a      	ldr	r3, [pc, #104]	; (8000360 <init_all+0xf8>)
 80002f8:	68db      	ldr	r3, [r3, #12]
 80002fa:	4a19      	ldr	r2, [pc, #100]	; (8000360 <init_all+0xf8>)
 80002fc:	f043 0302 	orr.w	r3, r3, #2
 8000300:	60d3      	str	r3, [r2, #12]
	//exti0
	__NVIC_SetPriority(EXTI0_IRQn, 10);
 8000302:	210a      	movs	r1, #10
 8000304:	2006      	movs	r0, #6
 8000306:	f7ff ff85 	bl	8000214 <__NVIC_SetPriority>
	__NVIC_EnableIRQ(EXTI0_IRQn);
 800030a:	2006      	movs	r0, #6
 800030c:	f7ff ff64 	bl	80001d8 <__NVIC_EnableIRQ>

	//RCC->APB2ENR |= 1 << 14;
	SYSCFG->EXTICR[0] &= ~SYSCFG_EXTICR1_EXTI0;
 8000310:	4b14      	ldr	r3, [pc, #80]	; (8000364 <init_all+0xfc>)
 8000312:	689b      	ldr	r3, [r3, #8]
 8000314:	4a13      	ldr	r2, [pc, #76]	; (8000364 <init_all+0xfc>)
 8000316:	f023 030f 	bic.w	r3, r3, #15
 800031a:	6093      	str	r3, [r2, #8]
	SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI0_PA;
 800031c:	4b11      	ldr	r3, [pc, #68]	; (8000364 <init_all+0xfc>)
 800031e:	4a11      	ldr	r2, [pc, #68]	; (8000364 <init_all+0xfc>)
 8000320:	689b      	ldr	r3, [r3, #8]
 8000322:	6093      	str	r3, [r2, #8]
	EXTI->IMR &= ~EXTI_IMR_MR0;
 8000324:	4b10      	ldr	r3, [pc, #64]	; (8000368 <init_all+0x100>)
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	4a0f      	ldr	r2, [pc, #60]	; (8000368 <init_all+0x100>)
 800032a:	f023 0301 	bic.w	r3, r3, #1
 800032e:	6013      	str	r3, [r2, #0]
	EXTI->IMR |= 1UL << EXTI_IMR_MR0_Pos;
 8000330:	4b0d      	ldr	r3, [pc, #52]	; (8000368 <init_all+0x100>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	4a0c      	ldr	r2, [pc, #48]	; (8000368 <init_all+0x100>)
 8000336:	f043 0301 	orr.w	r3, r3, #1
 800033a:	6013      	str	r3, [r2, #0]
	EXTI->RTSR &= ~EXTI_RTSR_TR0;
 800033c:	4b0a      	ldr	r3, [pc, #40]	; (8000368 <init_all+0x100>)
 800033e:	689b      	ldr	r3, [r3, #8]
 8000340:	4a09      	ldr	r2, [pc, #36]	; (8000368 <init_all+0x100>)
 8000342:	f023 0301 	bic.w	r3, r3, #1
 8000346:	6093      	str	r3, [r2, #8]
	EXTI->RTSR |= 1UL << EXTI_RTSR_TR0_Pos;
 8000348:	4b07      	ldr	r3, [pc, #28]	; (8000368 <init_all+0x100>)
 800034a:	689b      	ldr	r3, [r3, #8]
 800034c:	4a06      	ldr	r2, [pc, #24]	; (8000368 <init_all+0x100>)
 800034e:	f043 0301 	orr.w	r3, r3, #1
 8000352:	6093      	str	r3, [r2, #8]

}
 8000354:	bf00      	nop
 8000356:	bd80      	pop	{r7, pc}
 8000358:	40023800 	.word	0x40023800
 800035c:	40020c00 	.word	0x40020c00
 8000360:	40020000 	.word	0x40020000
 8000364:	40013800 	.word	0x40013800
 8000368:	40013c00 	.word	0x40013c00

0800036c <led_on>:
void led_on(unsigned int led_number)
{
 800036c:	b480      	push	{r7}
 800036e:	b083      	sub	sp, #12
 8000370:	af00      	add	r7, sp, #0
 8000372:	6078      	str	r0, [r7, #4]

	GPIOD->BSRR |= 0x1UL << led_number;
 8000374:	4b07      	ldr	r3, [pc, #28]	; (8000394 <led_on+0x28>)
 8000376:	699a      	ldr	r2, [r3, #24]
 8000378:	2101      	movs	r1, #1
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	fa01 f303 	lsl.w	r3, r1, r3
 8000380:	4904      	ldr	r1, [pc, #16]	; (8000394 <led_on+0x28>)
 8000382:	4313      	orrs	r3, r2
 8000384:	618b      	str	r3, [r1, #24]
}
 8000386:	bf00      	nop
 8000388:	370c      	adds	r7, #12
 800038a:	46bd      	mov	sp, r7
 800038c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000390:	4770      	bx	lr
 8000392:	bf00      	nop
 8000394:	40020c00 	.word	0x40020c00

08000398 <led_off>:
void led_off(unsigned int led_number)
{
 8000398:	b480      	push	{r7}
 800039a:	b083      	sub	sp, #12
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]

	GPIOD->BSRR |= 0x1UL << led_number + 16u;
 80003a0:	4b07      	ldr	r3, [pc, #28]	; (80003c0 <led_off+0x28>)
 80003a2:	699a      	ldr	r2, [r3, #24]
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	3310      	adds	r3, #16
 80003a8:	2101      	movs	r1, #1
 80003aa:	fa01 f303 	lsl.w	r3, r1, r3
 80003ae:	4904      	ldr	r1, [pc, #16]	; (80003c0 <led_off+0x28>)
 80003b0:	4313      	orrs	r3, r2
 80003b2:	618b      	str	r3, [r1, #24]
}
 80003b4:	bf00      	nop
 80003b6:	370c      	adds	r7, #12
 80003b8:	46bd      	mov	sp, r7
 80003ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003be:	4770      	bx	lr
 80003c0:	40020c00 	.word	0x40020c00

080003c4 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler()
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	af00      	add	r7, sp, #0
	if(statusLed == 0)
 80003c8:	4b0f      	ldr	r3, [pc, #60]	; (8000408 <EXTI0_IRQHandler+0x44>)
 80003ca:	781b      	ldrb	r3, [r3, #0]
 80003cc:	2b00      	cmp	r3, #0
 80003ce:	d109      	bne.n	80003e4 <EXTI0_IRQHandler+0x20>
	{
		statusLed = 1;
 80003d0:	4b0d      	ldr	r3, [pc, #52]	; (8000408 <EXTI0_IRQHandler+0x44>)
 80003d2:	2201      	movs	r2, #1
 80003d4:	701a      	strb	r2, [r3, #0]
		led_on(LED4);
 80003d6:	200c      	movs	r0, #12
 80003d8:	f7ff ffc8 	bl	800036c <led_on>
		led_off(LED5);
 80003dc:	200e      	movs	r0, #14
 80003de:	f7ff ffdb 	bl	8000398 <led_off>
 80003e2:	e008      	b.n	80003f6 <EXTI0_IRQHandler+0x32>
	}
	else
	{
		statusLed = 0;
 80003e4:	4b08      	ldr	r3, [pc, #32]	; (8000408 <EXTI0_IRQHandler+0x44>)
 80003e6:	2200      	movs	r2, #0
 80003e8:	701a      	strb	r2, [r3, #0]
		led_off(LED4);
 80003ea:	200c      	movs	r0, #12
 80003ec:	f7ff ffd4 	bl	8000398 <led_off>
		led_on(LED5);
 80003f0:	200e      	movs	r0, #14
 80003f2:	f7ff ffbb 	bl	800036c <led_on>
	}
	EXTI->PR |= 1UL<<0U;
 80003f6:	4b05      	ldr	r3, [pc, #20]	; (800040c <EXTI0_IRQHandler+0x48>)
 80003f8:	695b      	ldr	r3, [r3, #20]
 80003fa:	4a04      	ldr	r2, [pc, #16]	; (800040c <EXTI0_IRQHandler+0x48>)
 80003fc:	f043 0301 	orr.w	r3, r3, #1
 8000400:	6153      	str	r3, [r2, #20]
}
 8000402:	bf00      	nop
 8000404:	bd80      	pop	{r7, pc}
 8000406:	bf00      	nop
 8000408:	20000000 	.word	0x20000000
 800040c:	40013c00 	.word	0x40013c00

08000410 <main>:

void main(void)
{
 8000410:	b580      	push	{r7, lr}
 8000412:	af00      	add	r7, sp, #0
	init_all();
 8000414:	f7ff ff28 	bl	8000268 <init_all>
	//led_on(LED5);
	while(1)
 8000418:	e7fe      	b.n	8000418 <main+0x8>
	...

0800041c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 800041c:	f8df d030 	ldr.w	sp, [pc, #48]	; 8000450 <LoopFillZerobss+0xe>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000420:	480c      	ldr	r0, [pc, #48]	; (8000454 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8000422:	490d      	ldr	r1, [pc, #52]	; (8000458 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8000424:	4a0d      	ldr	r2, [pc, #52]	; (800045c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8000426:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000428:	e002      	b.n	8000430 <LoopCopyDataInit>

0800042a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800042a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800042c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800042e:	3304      	adds	r3, #4

08000430 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000430:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000432:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000434:	d3f9      	bcc.n	800042a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000436:	4a0a      	ldr	r2, [pc, #40]	; (8000460 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8000438:	4c0a      	ldr	r4, [pc, #40]	; (8000464 <LoopFillZerobss+0x22>)
  movs r3, #0
 800043a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800043c:	e001      	b.n	8000442 <LoopFillZerobss>

0800043e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800043e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000440:	3204      	adds	r2, #4

08000442 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000442:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000444:	d3fb      	bcc.n	800043e <FillZerobss>

/* Call the clock system intitialization function.*/
//  bl  SystemInit
/* Call static constructors */
    bl __libc_init_array
 8000446:	f000 f811 	bl	800046c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800044a:	f7ff ffe1 	bl	8000410 <main>
  bx  lr    
 800044e:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8000450:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000454:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000458:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 800045c:	080004d4 	.word	0x080004d4
  ldr r2, =_sbss
 8000460:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000464:	20000020 	.word	0x20000020

08000468 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000468:	e7fe      	b.n	8000468 <ADC_IRQHandler>
	...

0800046c <__libc_init_array>:
 800046c:	b570      	push	{r4, r5, r6, lr}
 800046e:	4d0d      	ldr	r5, [pc, #52]	; (80004a4 <__libc_init_array+0x38>)
 8000470:	4c0d      	ldr	r4, [pc, #52]	; (80004a8 <__libc_init_array+0x3c>)
 8000472:	1b64      	subs	r4, r4, r5
 8000474:	10a4      	asrs	r4, r4, #2
 8000476:	2600      	movs	r6, #0
 8000478:	42a6      	cmp	r6, r4
 800047a:	d109      	bne.n	8000490 <__libc_init_array+0x24>
 800047c:	4d0b      	ldr	r5, [pc, #44]	; (80004ac <__libc_init_array+0x40>)
 800047e:	4c0c      	ldr	r4, [pc, #48]	; (80004b0 <__libc_init_array+0x44>)
 8000480:	f000 f818 	bl	80004b4 <_init>
 8000484:	1b64      	subs	r4, r4, r5
 8000486:	10a4      	asrs	r4, r4, #2
 8000488:	2600      	movs	r6, #0
 800048a:	42a6      	cmp	r6, r4
 800048c:	d105      	bne.n	800049a <__libc_init_array+0x2e>
 800048e:	bd70      	pop	{r4, r5, r6, pc}
 8000490:	f855 3b04 	ldr.w	r3, [r5], #4
 8000494:	4798      	blx	r3
 8000496:	3601      	adds	r6, #1
 8000498:	e7ee      	b.n	8000478 <__libc_init_array+0xc>
 800049a:	f855 3b04 	ldr.w	r3, [r5], #4
 800049e:	4798      	blx	r3
 80004a0:	3601      	adds	r6, #1
 80004a2:	e7f2      	b.n	800048a <__libc_init_array+0x1e>
 80004a4:	080004cc 	.word	0x080004cc
 80004a8:	080004cc 	.word	0x080004cc
 80004ac:	080004cc 	.word	0x080004cc
 80004b0:	080004d0 	.word	0x080004d0

080004b4 <_init>:
 80004b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004b6:	bf00      	nop
 80004b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004ba:	bc08      	pop	{r3}
 80004bc:	469e      	mov	lr, r3
 80004be:	4770      	bx	lr

080004c0 <_fini>:
 80004c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004c2:	bf00      	nop
 80004c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004c6:	bc08      	pop	{r3}
 80004c8:	469e      	mov	lr, r3
 80004ca:	4770      	bx	lr
