
STM32F411_CMSIS_.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004874  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003f8  08004a18  08004a18  00014a18  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004e10  08004e10  000201d0  2**0
                  CONTENTS
  4 .ARM          00000000  08004e10  08004e10  000201d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004e10  08004e10  000201d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004e10  08004e10  00014e10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004e14  08004e14  00014e14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d0  20000000  08004e18  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000044  200001d0  08004fe8  000201d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000214  08004fe8  00020214  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008fa9  00000000  00000000  000201fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000016a4  00000000  00000000  000291a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000310  00000000  00000000  0002a850  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000278  00000000  00000000  0002ab60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00010601  00000000  00000000  0002add8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00005411  00000000  00000000  0003b3d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005507c  00000000  00000000  000407ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00095866  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001b30  00000000  00000000  000958bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         000000b4  00000000  00000000  000973ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      00000183  00000000  00000000  000974a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d0 	.word	0x200001d0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080049fc 	.word	0x080049fc

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d4 	.word	0x200001d4
 80001dc:	080049fc 	.word	0x080049fc

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8000bb8:	b480      	push	{r7}
 8000bba:	b083      	sub	sp, #12
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	db0c      	blt.n	8000be4 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000bca:	79fb      	ldrb	r3, [r7, #7]
 8000bcc:	f003 021f 	and.w	r2, r3, #31
 8000bd0:	4907      	ldr	r1, [pc, #28]	; (8000bf0 <__NVIC_ClearPendingIRQ+0x38>)
 8000bd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bd6:	095b      	lsrs	r3, r3, #5
 8000bd8:	2001      	movs	r0, #1
 8000bda:	fa00 f202 	lsl.w	r2, r0, r2
 8000bde:	3360      	adds	r3, #96	; 0x60
 8000be0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000be4:	bf00      	nop
 8000be6:	370c      	adds	r7, #12
 8000be8:	46bd      	mov	sp, r7
 8000bea:	bc80      	pop	{r7}
 8000bec:	4770      	bx	lr
 8000bee:	bf00      	nop
 8000bf0:	e000e100 	.word	0xe000e100

08000bf4 <main>:
extern const unsigned char gImage_d[230400];
extern const unsigned char hhh[153600];
extern const unsigned char gImage_vvv[153600];

int main(void)
{
 8000bf4:	b580      	push	{r7, lr}
 8000bf6:	b082      	sub	sp, #8
 8000bf8:	af00      	add	r7, sp, #0
	//MAX 100 MHZ
	rcc_HSE_Config();
 8000bfa:	f000 faf3 	bl	80011e4 <rcc_HSE_Config>
	rcc_SYSTICk_config(100000);
 8000bfe:	4815      	ldr	r0, [pc, #84]	; (8000c54 <main+0x60>)
 8000c00:	f000 fbde 	bl	80013c0 <rcc_SYSTICk_config>
	//Printf to usart1
	usart_USART1_GPIO_config();
 8000c04:	f000 ff02 	bl	8001a0c <usart_USART1_GPIO_config>
	usart_USART1_config();
 8000c08:	f000 ff54 	bl	8001ab4 <usart_USART1_config>
	usart_USART1_DMA_config();
 8000c0c:	f000 fffe 	bl	8001c0c <usart_USART1_DMA_config>
	//LED config
	gpio_LED_config();
 8000c10:	f000 f9ec 	bl	8000fec <gpio_LED_config>
	//BUTTON config
	gpio_BUTTON_config();
 8000c14:	f000 fa66 	bl	80010e4 <gpio_BUTTON_config>
	//EXTI PB1 config
	exti_BP_EXTI();
 8000c18:	f000 f9c6 	bl	8000fa8 <exti_BP_EXTI>
	//crc_reset();
	//crc_accumulate(0x00112233);
	//crc_accumulate(0x11223344);
	//__IO uint32_t crcVal = crc_read();
	//SPI config
	spi_SPI1_GPIO_config();
 8000c1c:	f000 fc82 	bl	8001524 <spi_SPI1_GPIO_config>
	spi_SPI1_DMA_config();
 8000c20:	f000 fd50 	bl	80016c4 <spi_SPI1_DMA_config>
	//ILI9341_printNumb(3121999, 120, 120, COLOR_RED, COLOR_NAVY, 2);


	//ILI9341_printImage(0,0,320,240,qqq, 76800*2);

	printf("Program starting ...\n");
 8000c24:	480c      	ldr	r0, [pc, #48]	; (8000c58 <main+0x64>)
 8000c26:	f001 fee5 	bl	80029f4 <puts>

	uint8_t tBuff[3];
	uint8_t rBuff = 0x00;
 8000c2a:	2300      	movs	r3, #0
 8000c2c:	71fb      	strb	r3, [r7, #7]
	tBuff[0] = 0x11;
 8000c2e:	2311      	movs	r3, #17
 8000c30:	713b      	strb	r3, [r7, #4]
	tBuff[1] = 0x22;
 8000c32:	2322      	movs	r3, #34	; 0x22
 8000c34:	717b      	strb	r3, [r7, #5]
	tBuff[2] = 0x33;
 8000c36:	2333      	movs	r3, #51	; 0x33
 8000c38:	71bb      	strb	r3, [r7, #6]

	while(1)
	{
		usart_USART1_DMA_transmit(tBuff,3);
 8000c3a:	1d3b      	adds	r3, r7, #4
 8000c3c:	2103      	movs	r1, #3
 8000c3e:	4618      	mov	r0, r3
 8000c40:	f001 f8e6 	bl	8001e10 <usart_USART1_DMA_transmit>

		gpio_LED_display();
 8000c44:	f000 fa22 	bl	800108c <gpio_LED_display>
		rcc_msDelay(3000);
 8000c48:	f640 30b8 	movw	r0, #3000	; 0xbb8
 8000c4c:	f000 fc00 	bl	8001450 <rcc_msDelay>
		usart_USART1_DMA_transmit(tBuff,3);
 8000c50:	e7f3      	b.n	8000c3a <main+0x46>
 8000c52:	bf00      	nop
 8000c54:	000186a0 	.word	0x000186a0
 8000c58:	08004a18 	.word	0x08004a18

08000c5c <EXTI0_IRQHandler>:
	}
}


void EXTI0_IRQHandler(void)
{
 8000c5c:	b580      	push	{r7, lr}
 8000c5e:	af00      	add	r7, sp, #0
	NVIC_ClearPendingIRQ(EXTI0_IRQn);
 8000c60:	2006      	movs	r0, #6
 8000c62:	f7ff ffa9 	bl	8000bb8 <__NVIC_ClearPendingIRQ>

	//Application
	EXTI->IMR &= ~EXTI_IMR_IM0;
 8000c66:	4b0b      	ldr	r3, [pc, #44]	; (8000c94 <EXTI0_IRQHandler+0x38>)
 8000c68:	681b      	ldr	r3, [r3, #0]
 8000c6a:	4a0a      	ldr	r2, [pc, #40]	; (8000c94 <EXTI0_IRQHandler+0x38>)
 8000c6c:	f023 0301 	bic.w	r3, r3, #1
 8000c70:	6013      	str	r3, [r2, #0]
	extiFlag = true;
 8000c72:	4b09      	ldr	r3, [pc, #36]	; (8000c98 <EXTI0_IRQHandler+0x3c>)
 8000c74:	2201      	movs	r2, #1
 8000c76:	701a      	strb	r2, [r3, #0]
	//gpio_LED_display();
	//rcc_msDelay(20);
	EXTI->PR |= EXTI_PR_PR0;
 8000c78:	4b06      	ldr	r3, [pc, #24]	; (8000c94 <EXTI0_IRQHandler+0x38>)
 8000c7a:	695b      	ldr	r3, [r3, #20]
 8000c7c:	4a05      	ldr	r2, [pc, #20]	; (8000c94 <EXTI0_IRQHandler+0x38>)
 8000c7e:	f043 0301 	orr.w	r3, r3, #1
 8000c82:	6153      	str	r3, [r2, #20]
	EXTI->IMR |= EXTI_IMR_IM0;
 8000c84:	4b03      	ldr	r3, [pc, #12]	; (8000c94 <EXTI0_IRQHandler+0x38>)
 8000c86:	681b      	ldr	r3, [r3, #0]
 8000c88:	4a02      	ldr	r2, [pc, #8]	; (8000c94 <EXTI0_IRQHandler+0x38>)
 8000c8a:	f043 0301 	orr.w	r3, r3, #1
 8000c8e:	6013      	str	r3, [r2, #0]
}
 8000c90:	bf00      	nop
 8000c92:	bd80      	pop	{r7, pc}
 8000c94:	40013c00 	.word	0x40013c00
 8000c98:	200001ec 	.word	0x200001ec

08000c9c <DMA2_Stream5_IRQHandler>:

//UART DMA RX
void DMA2_Stream5_IRQHandler(void)
{
 8000c9c:	b580      	push	{r7, lr}
 8000c9e:	af00      	add	r7, sp, #0
	NVIC_ClearPendingIRQ(DMA2_Stream5_IRQn);
 8000ca0:	2044      	movs	r0, #68	; 0x44
 8000ca2:	f7ff ff89 	bl	8000bb8 <__NVIC_ClearPendingIRQ>

	if(DMA2->HISR & DMA_HISR_TCIF5)
 8000ca6:	4b11      	ldr	r3, [pc, #68]	; (8000cec <DMA2_Stream5_IRQHandler+0x50>)
 8000ca8:	685b      	ldr	r3, [r3, #4]
 8000caa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	d00e      	beq.n	8000cd0 <DMA2_Stream5_IRQHandler+0x34>
	{
		//Disaable DMA
		DMA2_Stream5->CR &= ~DMA_SxCR_EN;
 8000cb2:	4b0f      	ldr	r3, [pc, #60]	; (8000cf0 <DMA2_Stream5_IRQHandler+0x54>)
 8000cb4:	681b      	ldr	r3, [r3, #0]
 8000cb6:	4a0e      	ldr	r2, [pc, #56]	; (8000cf0 <DMA2_Stream5_IRQHandler+0x54>)
 8000cb8:	f023 0301 	bic.w	r3, r3, #1
 8000cbc:	6013      	str	r3, [r2, #0]
		//Clear Flag
		DMA2->HIFCR |= 0xFUL << 8;
 8000cbe:	4b0b      	ldr	r3, [pc, #44]	; (8000cec <DMA2_Stream5_IRQHandler+0x50>)
 8000cc0:	68db      	ldr	r3, [r3, #12]
 8000cc2:	4a0a      	ldr	r2, [pc, #40]	; (8000cec <DMA2_Stream5_IRQHandler+0x50>)
 8000cc4:	f443 6370 	orr.w	r3, r3, #3840	; 0xf00
 8000cc8:	60d3      	str	r3, [r2, #12]
		//Notify application
		uartDmaRxFlag = true;
 8000cca:	4b0a      	ldr	r3, [pc, #40]	; (8000cf4 <DMA2_Stream5_IRQHandler+0x58>)
 8000ccc:	2201      	movs	r2, #1
 8000cce:	701a      	strb	r2, [r3, #0]

	}
	//Tranfer error
	if(DMA2->HISR & DMA_HISR_TEIF5)
 8000cd0:	4b06      	ldr	r3, [pc, #24]	; (8000cec <DMA2_Stream5_IRQHandler+0x50>)
 8000cd2:	685b      	ldr	r3, [r3, #4]
 8000cd4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000cd8:	2b00      	cmp	r3, #0
 8000cda:	d005      	beq.n	8000ce8 <DMA2_Stream5_IRQHandler+0x4c>
	{
		DMA2->HIFCR |= DMA_HIFCR_CTEIF5;
 8000cdc:	4b03      	ldr	r3, [pc, #12]	; (8000cec <DMA2_Stream5_IRQHandler+0x50>)
 8000cde:	68db      	ldr	r3, [r3, #12]
 8000ce0:	4a02      	ldr	r2, [pc, #8]	; (8000cec <DMA2_Stream5_IRQHandler+0x50>)
 8000ce2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000ce6:	60d3      	str	r3, [r2, #12]
	}
}
 8000ce8:	bf00      	nop
 8000cea:	bd80      	pop	{r7, pc}
 8000cec:	40026400 	.word	0x40026400
 8000cf0:	40026488 	.word	0x40026488
 8000cf4:	200001ed 	.word	0x200001ed

08000cf8 <DMA2_Stream7_IRQHandler>:

//UART DMA TX
void DMA2_Stream7_IRQHandler(void)
{
 8000cf8:	b580      	push	{r7, lr}
 8000cfa:	af00      	add	r7, sp, #0
	NVIC_ClearPendingIRQ(DMA2_Stream7_IRQn);
 8000cfc:	2046      	movs	r0, #70	; 0x46
 8000cfe:	f7ff ff5b 	bl	8000bb8 <__NVIC_ClearPendingIRQ>

	if(DMA2->HISR & DMA_HISR_TCIF7)
 8000d02:	4b11      	ldr	r3, [pc, #68]	; (8000d48 <DMA2_Stream7_IRQHandler+0x50>)
 8000d04:	685b      	ldr	r3, [r3, #4]
 8000d06:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8000d0a:	2b00      	cmp	r3, #0
 8000d0c:	d00e      	beq.n	8000d2c <DMA2_Stream7_IRQHandler+0x34>
	{
		//Disaable DMA
		DMA2_Stream7->CR &= ~DMA_SxCR_EN;
 8000d0e:	4b0f      	ldr	r3, [pc, #60]	; (8000d4c <DMA2_Stream7_IRQHandler+0x54>)
 8000d10:	681b      	ldr	r3, [r3, #0]
 8000d12:	4a0e      	ldr	r2, [pc, #56]	; (8000d4c <DMA2_Stream7_IRQHandler+0x54>)
 8000d14:	f023 0301 	bic.w	r3, r3, #1
 8000d18:	6013      	str	r3, [r2, #0]
		//Clear Flag
		DMA2->HIFCR |= 0xFUL << 24;
 8000d1a:	4b0b      	ldr	r3, [pc, #44]	; (8000d48 <DMA2_Stream7_IRQHandler+0x50>)
 8000d1c:	68db      	ldr	r3, [r3, #12]
 8000d1e:	4a0a      	ldr	r2, [pc, #40]	; (8000d48 <DMA2_Stream7_IRQHandler+0x50>)
 8000d20:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8000d24:	60d3      	str	r3, [r2, #12]
		//Notify application
		uartDmaTxFlag = true;
 8000d26:	4b0a      	ldr	r3, [pc, #40]	; (8000d50 <DMA2_Stream7_IRQHandler+0x58>)
 8000d28:	2201      	movs	r2, #1
 8000d2a:	701a      	strb	r2, [r3, #0]
	}
	//Tranfer error
	if(DMA2->HISR & DMA_HISR_TEIF7)
 8000d2c:	4b06      	ldr	r3, [pc, #24]	; (8000d48 <DMA2_Stream7_IRQHandler+0x50>)
 8000d2e:	685b      	ldr	r3, [r3, #4]
 8000d30:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000d34:	2b00      	cmp	r3, #0
 8000d36:	d005      	beq.n	8000d44 <DMA2_Stream7_IRQHandler+0x4c>
	{
		DMA2->HIFCR |= DMA_HIFCR_CTEIF7;
 8000d38:	4b03      	ldr	r3, [pc, #12]	; (8000d48 <DMA2_Stream7_IRQHandler+0x50>)
 8000d3a:	68db      	ldr	r3, [r3, #12]
 8000d3c:	4a02      	ldr	r2, [pc, #8]	; (8000d48 <DMA2_Stream7_IRQHandler+0x50>)
 8000d3e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000d42:	60d3      	str	r3, [r2, #12]
	}
}
 8000d44:	bf00      	nop
 8000d46:	bd80      	pop	{r7, pc}
 8000d48:	40026400 	.word	0x40026400
 8000d4c:	400264b8 	.word	0x400264b8
 8000d50:	200001ee 	.word	0x200001ee

08000d54 <USART1_IRQHandler>:

//UART IT RX
void USART1_IRQHandler(void)
{
 8000d54:	b480      	push	{r7}
 8000d56:	af00      	add	r7, sp, #0
	//READY TO READ
	if(USART1->SR & USART_SR_RXNE)
 8000d58:	4b0d      	ldr	r3, [pc, #52]	; (8000d90 <USART1_IRQHandler+0x3c>)
 8000d5a:	681b      	ldr	r3, [r3, #0]
	{

	}
	//ERROR OVER
	if(USART1->SR & USART_SR_ORE)
 8000d5c:	4b0c      	ldr	r3, [pc, #48]	; (8000d90 <USART1_IRQHandler+0x3c>)
 8000d5e:	681b      	ldr	r3, [r3, #0]
	{

	}
	//TRANSMIT COMPLIT
	if(USART1->SR & USART_SR_TC)
 8000d60:	4b0b      	ldr	r3, [pc, #44]	; (8000d90 <USART1_IRQHandler+0x3c>)
 8000d62:	681b      	ldr	r3, [r3, #0]
	{

	}
	//Clear all flag USART1
	USART1->CR1 &= ~USART_SR_RXNE;
 8000d64:	4b0a      	ldr	r3, [pc, #40]	; (8000d90 <USART1_IRQHandler+0x3c>)
 8000d66:	68db      	ldr	r3, [r3, #12]
 8000d68:	4a09      	ldr	r2, [pc, #36]	; (8000d90 <USART1_IRQHandler+0x3c>)
 8000d6a:	f023 0320 	bic.w	r3, r3, #32
 8000d6e:	60d3      	str	r3, [r2, #12]
	USART1->CR1 &= ~USART_SR_TC;
 8000d70:	4b07      	ldr	r3, [pc, #28]	; (8000d90 <USART1_IRQHandler+0x3c>)
 8000d72:	68db      	ldr	r3, [r3, #12]
 8000d74:	4a06      	ldr	r2, [pc, #24]	; (8000d90 <USART1_IRQHandler+0x3c>)
 8000d76:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000d7a:	60d3      	str	r3, [r2, #12]
	USART1->CR1 &= ~USART_SR_ORE;
 8000d7c:	4b04      	ldr	r3, [pc, #16]	; (8000d90 <USART1_IRQHandler+0x3c>)
 8000d7e:	68db      	ldr	r3, [r3, #12]
 8000d80:	4a03      	ldr	r2, [pc, #12]	; (8000d90 <USART1_IRQHandler+0x3c>)
 8000d82:	f023 0308 	bic.w	r3, r3, #8
 8000d86:	60d3      	str	r3, [r2, #12]
}
 8000d88:	bf00      	nop
 8000d8a:	46bd      	mov	sp, r7
 8000d8c:	bc80      	pop	{r7}
 8000d8e:	4770      	bx	lr
 8000d90:	40011000 	.word	0x40011000

08000d94 <DMA2_Stream2_IRQHandler>:

//SPI DMA TX
void DMA2_Stream2_IRQHandler(void)
{
 8000d94:	b580      	push	{r7, lr}
 8000d96:	af00      	add	r7, sp, #0
	NVIC_ClearPendingIRQ(DMA2_Stream2_IRQn);
 8000d98:	203a      	movs	r0, #58	; 0x3a
 8000d9a:	f7ff ff0d 	bl	8000bb8 <__NVIC_ClearPendingIRQ>
	//TX
	if(DMA2->LISR & DMA_LISR_TCIF2)
 8000d9e:	4b0b      	ldr	r3, [pc, #44]	; (8000dcc <DMA2_Stream2_IRQHandler+0x38>)
 8000da0:	681b      	ldr	r3, [r3, #0]
 8000da2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000da6:	2b00      	cmp	r3, #0
 8000da8:	d00e      	beq.n	8000dc8 <DMA2_Stream2_IRQHandler+0x34>
	{
		//Disaable DMA
		DMA2_Stream2->CR &= ~DMA_SxCR_EN;
 8000daa:	4b09      	ldr	r3, [pc, #36]	; (8000dd0 <DMA2_Stream2_IRQHandler+0x3c>)
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	4a08      	ldr	r2, [pc, #32]	; (8000dd0 <DMA2_Stream2_IRQHandler+0x3c>)
 8000db0:	f023 0301 	bic.w	r3, r3, #1
 8000db4:	6013      	str	r3, [r2, #0]
		//Clear Flag
		DMA2->LIFCR |= (0xFUL << 18);
 8000db6:	4b05      	ldr	r3, [pc, #20]	; (8000dcc <DMA2_Stream2_IRQHandler+0x38>)
 8000db8:	689b      	ldr	r3, [r3, #8]
 8000dba:	4a04      	ldr	r2, [pc, #16]	; (8000dcc <DMA2_Stream2_IRQHandler+0x38>)
 8000dbc:	f443 1370 	orr.w	r3, r3, #3932160	; 0x3c0000
 8000dc0:	6093      	str	r3, [r2, #8]
		//Notify application
		spiDmaTxFlag = true;
 8000dc2:	4b04      	ldr	r3, [pc, #16]	; (8000dd4 <DMA2_Stream2_IRQHandler+0x40>)
 8000dc4:	2201      	movs	r2, #1
 8000dc6:	701a      	strb	r2, [r3, #0]
	//Tranfer error
	//if(DMA2->LISR & DMA_LISR_TEIF2)
	//{
	//	DMA2->LIFCR |= DMA_LIFCR_CTEIF2;
	//}
}
 8000dc8:	bf00      	nop
 8000dca:	bd80      	pop	{r7, pc}
 8000dcc:	40026400 	.word	0x40026400
 8000dd0:	40026440 	.word	0x40026440
 8000dd4:	200001ef 	.word	0x200001ef

08000dd8 <ADC_IRQHandler>:

//ADC INTERRRUPT
void ADC_IRQHandler(void)
{
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	af00      	add	r7, sp, #0
	if(ADC1->SR & ADC_SR_EOC)
 8000ddc:	4b12      	ldr	r3, [pc, #72]	; (8000e28 <ADC_IRQHandler+0x50>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	f003 0302 	and.w	r3, r3, #2
 8000de4:	2b00      	cmp	r3, #0
 8000de6:	d00b      	beq.n	8000e00 <ADC_IRQHandler+0x28>
	{
		adc_value = adc_readValue();
 8000de8:	f000 f88a 	bl	8000f00 <adc_readValue>
 8000dec:	4603      	mov	r3, r0
 8000dee:	461a      	mov	r2, r3
 8000df0:	4b0e      	ldr	r3, [pc, #56]	; (8000e2c <ADC_IRQHandler+0x54>)
 8000df2:	801a      	strh	r2, [r3, #0]
		NVIC_ClearPendingIRQ(ADC_IRQn);
 8000df4:	2012      	movs	r0, #18
 8000df6:	f7ff fedf 	bl	8000bb8 <__NVIC_ClearPendingIRQ>
		adcEOC = true;
 8000dfa:	4b0d      	ldr	r3, [pc, #52]	; (8000e30 <ADC_IRQHandler+0x58>)
 8000dfc:	2201      	movs	r2, #1
 8000dfe:	701a      	strb	r2, [r3, #0]
	}
	if(ADC1->SR & ADC_SR_AWD)
 8000e00:	4b09      	ldr	r3, [pc, #36]	; (8000e28 <ADC_IRQHandler+0x50>)
 8000e02:	681b      	ldr	r3, [r3, #0]
 8000e04:	f003 0301 	and.w	r3, r3, #1
 8000e08:	2b00      	cmp	r3, #0
 8000e0a:	d008      	beq.n	8000e1e <ADC_IRQHandler+0x46>
	{
		ADC1->SR &= ~ADC_SR_AWD;
 8000e0c:	4b06      	ldr	r3, [pc, #24]	; (8000e28 <ADC_IRQHandler+0x50>)
 8000e0e:	681b      	ldr	r3, [r3, #0]
 8000e10:	4a05      	ldr	r2, [pc, #20]	; (8000e28 <ADC_IRQHandler+0x50>)
 8000e12:	f023 0301 	bic.w	r3, r3, #1
 8000e16:	6013      	str	r3, [r2, #0]
		//Single to application
		adcAwd = true;
 8000e18:	4b06      	ldr	r3, [pc, #24]	; (8000e34 <ADC_IRQHandler+0x5c>)
 8000e1a:	2201      	movs	r2, #1
 8000e1c:	701a      	strb	r2, [r3, #0]
	}
	NVIC_ClearPendingIRQ(ADC_IRQn);
 8000e1e:	2012      	movs	r0, #18
 8000e20:	f7ff feca 	bl	8000bb8 <__NVIC_ClearPendingIRQ>
}
 8000e24:	bf00      	nop
 8000e26:	bd80      	pop	{r7, pc}
 8000e28:	40012000 	.word	0x40012000
 8000e2c:	200001f2 	.word	0x200001f2
 8000e30:	200001f0 	.word	0x200001f0
 8000e34:	200001f1 	.word	0x200001f1

08000e38 <DMA2_Stream0_IRQHandler>:

//ADC multial interrupt complete
void DMA2_Stream0_IRQHandler(void)
{
 8000e38:	b580      	push	{r7, lr}
 8000e3a:	af00      	add	r7, sp, #0
	if(DMA2->LISR & DMA_LISR_TCIF0)
 8000e3c:	4b09      	ldr	r3, [pc, #36]	; (8000e64 <DMA2_Stream0_IRQHandler+0x2c>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	f003 0320 	and.w	r3, r3, #32
 8000e44:	2b00      	cmp	r3, #0
 8000e46:	d00b      	beq.n	8000e60 <DMA2_Stream0_IRQHandler+0x28>
	{
		//Clear interrupt
		NVIC_ClearPendingIRQ(DMA2_Stream0_IRQn);
 8000e48:	2038      	movs	r0, #56	; 0x38
 8000e4a:	f7ff feb5 	bl	8000bb8 <__NVIC_ClearPendingIRQ>
		//Clear all flag
		DMA2->LISR &= ~(0x3BUL << 0);
 8000e4e:	4b05      	ldr	r3, [pc, #20]	; (8000e64 <DMA2_Stream0_IRQHandler+0x2c>)
 8000e50:	681b      	ldr	r3, [r3, #0]
 8000e52:	4a04      	ldr	r2, [pc, #16]	; (8000e64 <DMA2_Stream0_IRQHandler+0x2c>)
 8000e54:	f023 033b 	bic.w	r3, r3, #59	; 0x3b
 8000e58:	6013      	str	r3, [r2, #0]
		//Application
		adcEOC = true;
 8000e5a:	4b03      	ldr	r3, [pc, #12]	; (8000e68 <DMA2_Stream0_IRQHandler+0x30>)
 8000e5c:	2201      	movs	r2, #1
 8000e5e:	701a      	strb	r2, [r3, #0]
	}
}
 8000e60:	bf00      	nop
 8000e62:	bd80      	pop	{r7, pc}
 8000e64:	40026400 	.word	0x40026400
 8000e68:	200001f0 	.word	0x200001f0

08000e6c <TIM3_IRQHandler>:

//TIMER INTERRUPT
void TIM3_IRQHandler(void)
{
 8000e6c:	b480      	push	{r7}
 8000e6e:	af00      	add	r7, sp, #0
	if(TIM3->SR & TIM_SR_UIF)
 8000e70:	4b07      	ldr	r3, [pc, #28]	; (8000e90 <TIM3_IRQHandler+0x24>)
 8000e72:	691b      	ldr	r3, [r3, #16]
 8000e74:	f003 0301 	and.w	r3, r3, #1
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d005      	beq.n	8000e88 <TIM3_IRQHandler+0x1c>
	{
	//Clear all flag
	TIM3->CR1 |= TIM_CR1_CEN;
 8000e7c:	4b04      	ldr	r3, [pc, #16]	; (8000e90 <TIM3_IRQHandler+0x24>)
 8000e7e:	681b      	ldr	r3, [r3, #0]
 8000e80:	4a03      	ldr	r2, [pc, #12]	; (8000e90 <TIM3_IRQHandler+0x24>)
 8000e82:	f043 0301 	orr.w	r3, r3, #1
 8000e86:	6013      	str	r3, [r2, #0]
	//Application

	}
}
 8000e88:	bf00      	nop
 8000e8a:	46bd      	mov	sp, r7
 8000e8c:	bc80      	pop	{r7}
 8000e8e:	4770      	bx	lr
 8000e90:	40000400 	.word	0x40000400

08000e94 <__io_putchar>:

int __io_putchar(int ch);
int _write(int file,char* ptr, int len);

int __io_putchar(int ch)
{
 8000e94:	b580      	push	{r7, lr}
 8000e96:	b084      	sub	sp, #16
 8000e98:	af00      	add	r7, sp, #0
 8000e9a:	6078      	str	r0, [r7, #4]
	uint8_t c[1];
	c[0] = ch & 0x00FF;
 8000e9c:	687b      	ldr	r3, [r7, #4]
 8000e9e:	b2db      	uxtb	r3, r3
 8000ea0:	733b      	strb	r3, [r7, #12]
	usart_USART1_transmit(&c,1,100);
 8000ea2:	f107 030c 	add.w	r3, r7, #12
 8000ea6:	2264      	movs	r2, #100	; 0x64
 8000ea8:	2101      	movs	r1, #1
 8000eaa:	4618      	mov	r0, r3
 8000eac:	f000 fe6a 	bl	8001b84 <usart_USART1_transmit>

	return ch;
 8000eb0:	687b      	ldr	r3, [r7, #4]
}
 8000eb2:	4618      	mov	r0, r3
 8000eb4:	3710      	adds	r7, #16
 8000eb6:	46bd      	mov	sp, r7
 8000eb8:	bd80      	pop	{r7, pc}

08000eba <_write>:
int _write(int file,char* ptr, int len)
{
 8000eba:	b580      	push	{r7, lr}
 8000ebc:	b086      	sub	sp, #24
 8000ebe:	af00      	add	r7, sp, #0
 8000ec0:	60f8      	str	r0, [r7, #12]
 8000ec2:	60b9      	str	r1, [r7, #8]
 8000ec4:	607a      	str	r2, [r7, #4]
	int dataIdx;
	for(dataIdx = 0; dataIdx < len;dataIdx++)
 8000ec6:	2300      	movs	r3, #0
 8000ec8:	617b      	str	r3, [r7, #20]
 8000eca:	e009      	b.n	8000ee0 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000ecc:	68bb      	ldr	r3, [r7, #8]
 8000ece:	1c5a      	adds	r2, r3, #1
 8000ed0:	60ba      	str	r2, [r7, #8]
 8000ed2:	781b      	ldrb	r3, [r3, #0]
 8000ed4:	4618      	mov	r0, r3
 8000ed6:	f7ff ffdd 	bl	8000e94 <__io_putchar>
	for(dataIdx = 0; dataIdx < len;dataIdx++)
 8000eda:	697b      	ldr	r3, [r7, #20]
 8000edc:	3301      	adds	r3, #1
 8000ede:	617b      	str	r3, [r7, #20]
 8000ee0:	697a      	ldr	r2, [r7, #20]
 8000ee2:	687b      	ldr	r3, [r7, #4]
 8000ee4:	429a      	cmp	r2, r3
 8000ee6:	dbf1      	blt.n	8000ecc <_write+0x12>
	}
	return len;
 8000ee8:	687b      	ldr	r3, [r7, #4]
}
 8000eea:	4618      	mov	r0, r3
 8000eec:	3718      	adds	r7, #24
 8000eee:	46bd      	mov	sp, r7
 8000ef0:	bd80      	pop	{r7, pc}

08000ef2 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000ef2:	b480      	push	{r7}
 8000ef4:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000ef6:	bf00      	nop
 8000ef8:	46bd      	mov	sp, r7
 8000efa:	bc80      	pop	{r7}
 8000efc:	4770      	bx	lr
	...

08000f00 <adc_readValue>:

/*
 * @breif ADC read value
 */
uint16_t adc_readValue(void)
{
 8000f00:	b480      	push	{r7}
 8000f02:	af00      	add	r7, sp, #0
	return (ADC1->DR & 0xFFF);
 8000f04:	4b04      	ldr	r3, [pc, #16]	; (8000f18 <adc_readValue+0x18>)
 8000f06:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f08:	b29b      	uxth	r3, r3
 8000f0a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8000f0e:	b29b      	uxth	r3, r3
}
 8000f10:	4618      	mov	r0, r3
 8000f12:	46bd      	mov	sp, r7
 8000f14:	bc80      	pop	{r7}
 8000f16:	4770      	bx	lr
 8000f18:	40012000 	.word	0x40012000

08000f1c <__NVIC_EnableIRQ>:
{
 8000f1c:	b480      	push	{r7}
 8000f1e:	b083      	sub	sp, #12
 8000f20:	af00      	add	r7, sp, #0
 8000f22:	4603      	mov	r3, r0
 8000f24:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f26:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f2a:	2b00      	cmp	r3, #0
 8000f2c:	db0b      	blt.n	8000f46 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f2e:	79fb      	ldrb	r3, [r7, #7]
 8000f30:	f003 021f 	and.w	r2, r3, #31
 8000f34:	4906      	ldr	r1, [pc, #24]	; (8000f50 <__NVIC_EnableIRQ+0x34>)
 8000f36:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f3a:	095b      	lsrs	r3, r3, #5
 8000f3c:	2001      	movs	r0, #1
 8000f3e:	fa00 f202 	lsl.w	r2, r0, r2
 8000f42:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000f46:	bf00      	nop
 8000f48:	370c      	adds	r7, #12
 8000f4a:	46bd      	mov	sp, r7
 8000f4c:	bc80      	pop	{r7}
 8000f4e:	4770      	bx	lr
 8000f50:	e000e100 	.word	0xe000e100

08000f54 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000f54:	b480      	push	{r7}
 8000f56:	b083      	sub	sp, #12
 8000f58:	af00      	add	r7, sp, #0
 8000f5a:	4603      	mov	r3, r0
 8000f5c:	6039      	str	r1, [r7, #0]
 8000f5e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f60:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f64:	2b00      	cmp	r3, #0
 8000f66:	db0a      	blt.n	8000f7e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f68:	683b      	ldr	r3, [r7, #0]
 8000f6a:	b2da      	uxtb	r2, r3
 8000f6c:	490c      	ldr	r1, [pc, #48]	; (8000fa0 <__NVIC_SetPriority+0x4c>)
 8000f6e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f72:	0112      	lsls	r2, r2, #4
 8000f74:	b2d2      	uxtb	r2, r2
 8000f76:	440b      	add	r3, r1
 8000f78:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000f7c:	e00a      	b.n	8000f94 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f7e:	683b      	ldr	r3, [r7, #0]
 8000f80:	b2da      	uxtb	r2, r3
 8000f82:	4908      	ldr	r1, [pc, #32]	; (8000fa4 <__NVIC_SetPriority+0x50>)
 8000f84:	79fb      	ldrb	r3, [r7, #7]
 8000f86:	f003 030f 	and.w	r3, r3, #15
 8000f8a:	3b04      	subs	r3, #4
 8000f8c:	0112      	lsls	r2, r2, #4
 8000f8e:	b2d2      	uxtb	r2, r2
 8000f90:	440b      	add	r3, r1
 8000f92:	761a      	strb	r2, [r3, #24]
}
 8000f94:	bf00      	nop
 8000f96:	370c      	adds	r7, #12
 8000f98:	46bd      	mov	sp, r7
 8000f9a:	bc80      	pop	{r7}
 8000f9c:	4770      	bx	lr
 8000f9e:	bf00      	nop
 8000fa0:	e000e100 	.word	0xe000e100
 8000fa4:	e000ed00 	.word	0xe000ed00

08000fa8 <exti_BP_EXTI>:

/*
 * Button EXTI configuration
 */
void exti_BP_EXTI(void)
{
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	af00      	add	r7, sp, #0
	//Configuraton PA0 as input floating
	//Enable from SYSCFG
	SYSCFG->EXTICR[0] &= ~SYSCFG_EXTICR1_EXTI0;
 8000fac:	4b0d      	ldr	r3, [pc, #52]	; (8000fe4 <exti_BP_EXTI+0x3c>)
 8000fae:	689b      	ldr	r3, [r3, #8]
 8000fb0:	4a0c      	ldr	r2, [pc, #48]	; (8000fe4 <exti_BP_EXTI+0x3c>)
 8000fb2:	f023 030f 	bic.w	r3, r3, #15
 8000fb6:	6093      	str	r3, [r2, #8]
	//Unbloock interrupt mark
	EXTI->IMR |= EXTI_IMR_IM0;
 8000fb8:	4b0b      	ldr	r3, [pc, #44]	; (8000fe8 <exti_BP_EXTI+0x40>)
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	4a0a      	ldr	r2, [pc, #40]	; (8000fe8 <exti_BP_EXTI+0x40>)
 8000fbe:	f043 0301 	orr.w	r3, r3, #1
 8000fc2:	6013      	str	r3, [r2, #0]
	//Set rising edge only
	EXTI->RTSR |= EXTI_RTSR_TR0;
 8000fc4:	4b08      	ldr	r3, [pc, #32]	; (8000fe8 <exti_BP_EXTI+0x40>)
 8000fc6:	689b      	ldr	r3, [r3, #8]
 8000fc8:	4a07      	ldr	r2, [pc, #28]	; (8000fe8 <exti_BP_EXTI+0x40>)
 8000fca:	f043 0301 	orr.w	r3, r3, #1
 8000fce:	6093      	str	r3, [r2, #8]
	//Set priority
	NVIC_SetPriority(EXTI0_IRQn,0);
 8000fd0:	2100      	movs	r1, #0
 8000fd2:	2006      	movs	r0, #6
 8000fd4:	f7ff ffbe 	bl	8000f54 <__NVIC_SetPriority>
	//Enable interrupt
	NVIC_EnableIRQ(EXTI0_IRQn);
 8000fd8:	2006      	movs	r0, #6
 8000fda:	f7ff ff9f 	bl	8000f1c <__NVIC_EnableIRQ>
}
 8000fde:	bf00      	nop
 8000fe0:	bd80      	pop	{r7, pc}
 8000fe2:	bf00      	nop
 8000fe4:	40013800 	.word	0x40013800
 8000fe8:	40013c00 	.word	0x40013c00

08000fec <gpio_LED_config>:

/*
 * @brief GPIO config pin LED PD12-15
 */
void gpio_LED_config(void)
{
 8000fec:	b480      	push	{r7}
 8000fee:	af00      	add	r7, sp, #0
	//Enable GPIOD
	RCC->AHB1ENR &= ~(RCC_AHB1ENR_GPIODEN);
 8000ff0:	4b13      	ldr	r3, [pc, #76]	; (8001040 <gpio_LED_config+0x54>)
 8000ff2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ff4:	4a12      	ldr	r2, [pc, #72]	; (8001040 <gpio_LED_config+0x54>)
 8000ff6:	f023 0308 	bic.w	r3, r3, #8
 8000ffa:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 8000ffc:	4b10      	ldr	r3, [pc, #64]	; (8001040 <gpio_LED_config+0x54>)
 8000ffe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001000:	4a0f      	ldr	r2, [pc, #60]	; (8001040 <gpio_LED_config+0x54>)
 8001002:	f043 0308 	orr.w	r3, r3, #8
 8001006:	6313      	str	r3, [r2, #48]	; 0x30
	//Configuration mode
	GPIOD->MODER &= 0xFF << 24;
 8001008:	4b0e      	ldr	r3, [pc, #56]	; (8001044 <gpio_LED_config+0x58>)
 800100a:	681b      	ldr	r3, [r3, #0]
 800100c:	4a0d      	ldr	r2, [pc, #52]	; (8001044 <gpio_LED_config+0x58>)
 800100e:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8001012:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= 0x55 << 24;
 8001014:	4b0b      	ldr	r3, [pc, #44]	; (8001044 <gpio_LED_config+0x58>)
 8001016:	681b      	ldr	r3, [r3, #0]
 8001018:	4a0a      	ldr	r2, [pc, #40]	; (8001044 <gpio_LED_config+0x58>)
 800101a:	f043 43aa 	orr.w	r3, r3, #1426063360	; 0x55000000
 800101e:	6013      	str	r3, [r2, #0]
	//PUSH-PULL
	GPIOD->OTYPER &= ~(0xF << 12);
 8001020:	4b08      	ldr	r3, [pc, #32]	; (8001044 <gpio_LED_config+0x58>)
 8001022:	685b      	ldr	r3, [r3, #4]
 8001024:	4a07      	ldr	r2, [pc, #28]	; (8001044 <gpio_LED_config+0x58>)
 8001026:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800102a:	6053      	str	r3, [r2, #4]
	//Configuration speed LOW
	GPIOD->OSPEEDR &= ~(0xFF << 24);
 800102c:	4b05      	ldr	r3, [pc, #20]	; (8001044 <gpio_LED_config+0x58>)
 800102e:	689b      	ldr	r3, [r3, #8]
 8001030:	4a04      	ldr	r2, [pc, #16]	; (8001044 <gpio_LED_config+0x58>)
 8001032:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8001036:	6093      	str	r3, [r2, #8]

}
 8001038:	bf00      	nop
 800103a:	46bd      	mov	sp, r7
 800103c:	bc80      	pop	{r7}
 800103e:	4770      	bx	lr
 8001040:	40023800 	.word	0x40023800
 8001044:	40020c00 	.word	0x40020c00

08001048 <gpio_LED_write>:
/*
 * @brief Write state to the LED
 */
void gpio_LED_write(uint8_t LED_PIN,uint8_t state)
{
 8001048:	b480      	push	{r7}
 800104a:	b083      	sub	sp, #12
 800104c:	af00      	add	r7, sp, #0
 800104e:	4603      	mov	r3, r0
 8001050:	460a      	mov	r2, r1
 8001052:	71fb      	strb	r3, [r7, #7]
 8001054:	4613      	mov	r3, r2
 8001056:	71bb      	strb	r3, [r7, #6]
	state = !state;
 8001058:	79bb      	ldrb	r3, [r7, #6]
 800105a:	2b00      	cmp	r3, #0
 800105c:	bf0c      	ite	eq
 800105e:	2301      	moveq	r3, #1
 8001060:	2300      	movne	r3, #0
 8001062:	b2db      	uxtb	r3, r3
 8001064:	71bb      	strb	r3, [r7, #6]
	GPIOD->BSRR |= 0x1UL << (LED_PIN + state*16);
 8001066:	4b08      	ldr	r3, [pc, #32]	; (8001088 <gpio_LED_write+0x40>)
 8001068:	699a      	ldr	r2, [r3, #24]
 800106a:	79f9      	ldrb	r1, [r7, #7]
 800106c:	79bb      	ldrb	r3, [r7, #6]
 800106e:	011b      	lsls	r3, r3, #4
 8001070:	440b      	add	r3, r1
 8001072:	2101      	movs	r1, #1
 8001074:	fa01 f303 	lsl.w	r3, r1, r3
 8001078:	4903      	ldr	r1, [pc, #12]	; (8001088 <gpio_LED_write+0x40>)
 800107a:	4313      	orrs	r3, r2
 800107c:	618b      	str	r3, [r1, #24]
}
 800107e:	bf00      	nop
 8001080:	370c      	adds	r7, #12
 8001082:	46bd      	mov	sp, r7
 8001084:	bc80      	pop	{r7}
 8001086:	4770      	bx	lr
 8001088:	40020c00 	.word	0x40020c00

0800108c <gpio_LED_display>:
	rcc_msDelay(delay);
	gpio_LED_write(LED_PIN,0);
	rcc_msDelay(delay);
}
void gpio_LED_display()
{
 800108c:	b580      	push	{r7, lr}
 800108e:	b082      	sub	sp, #8
 8001090:	af00      	add	r7, sp, #0
	uint8_t i = LED_GREEN;
 8001092:	230c      	movs	r3, #12
 8001094:	71fb      	strb	r3, [r7, #7]
	for(i;i<=LED_BLUE;i++)
 8001096:	e007      	b.n	80010a8 <gpio_LED_display+0x1c>
	{
		gpio_LED_write(i,0);
 8001098:	79fb      	ldrb	r3, [r7, #7]
 800109a:	2100      	movs	r1, #0
 800109c:	4618      	mov	r0, r3
 800109e:	f7ff ffd3 	bl	8001048 <gpio_LED_write>
	for(i;i<=LED_BLUE;i++)
 80010a2:	79fb      	ldrb	r3, [r7, #7]
 80010a4:	3301      	adds	r3, #1
 80010a6:	71fb      	strb	r3, [r7, #7]
 80010a8:	79fb      	ldrb	r3, [r7, #7]
 80010aa:	2b0f      	cmp	r3, #15
 80010ac:	d9f4      	bls.n	8001098 <gpio_LED_display+0xc>
	}
	for(i = LED_GREEN;i<=LED_BLUE;i++)
 80010ae:	230c      	movs	r3, #12
 80010b0:	71fb      	strb	r3, [r7, #7]
 80010b2:	e00f      	b.n	80010d4 <gpio_LED_display+0x48>
	{
		gpio_LED_write(i,1);
 80010b4:	79fb      	ldrb	r3, [r7, #7]
 80010b6:	2101      	movs	r1, #1
 80010b8:	4618      	mov	r0, r3
 80010ba:	f7ff ffc5 	bl	8001048 <gpio_LED_write>
		rcc_msDelay(100);
 80010be:	2064      	movs	r0, #100	; 0x64
 80010c0:	f000 f9c6 	bl	8001450 <rcc_msDelay>
		gpio_LED_write(i,0);
 80010c4:	79fb      	ldrb	r3, [r7, #7]
 80010c6:	2100      	movs	r1, #0
 80010c8:	4618      	mov	r0, r3
 80010ca:	f7ff ffbd 	bl	8001048 <gpio_LED_write>
	for(i = LED_GREEN;i<=LED_BLUE;i++)
 80010ce:	79fb      	ldrb	r3, [r7, #7]
 80010d0:	3301      	adds	r3, #1
 80010d2:	71fb      	strb	r3, [r7, #7]
 80010d4:	79fb      	ldrb	r3, [r7, #7]
 80010d6:	2b0f      	cmp	r3, #15
 80010d8:	d9ec      	bls.n	80010b4 <gpio_LED_display+0x28>

	}
}
 80010da:	bf00      	nop
 80010dc:	bf00      	nop
 80010de:	3708      	adds	r7, #8
 80010e0:	46bd      	mov	sp, r7
 80010e2:	bd80      	pop	{r7, pc}

080010e4 <gpio_BUTTON_config>:

/*
 * @grief GPIO configuratin button B1 PA0
 */
void gpio_BUTTON_config(void)
{
 80010e4:	b480      	push	{r7}
 80010e6:	af00      	add	r7, sp, #0
	//Enable clock GPIOA
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 80010e8:	4b0a      	ldr	r3, [pc, #40]	; (8001114 <gpio_BUTTON_config+0x30>)
 80010ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010ec:	4a09      	ldr	r2, [pc, #36]	; (8001114 <gpio_BUTTON_config+0x30>)
 80010ee:	f043 0301 	orr.w	r3, r3, #1
 80010f2:	6313      	str	r3, [r2, #48]	; 0x30
	//Configuaration PA0 as Input
	GPIOD->MODER &= ~GPIO_MODER_MODE0;
 80010f4:	4b08      	ldr	r3, [pc, #32]	; (8001118 <gpio_BUTTON_config+0x34>)
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	4a07      	ldr	r2, [pc, #28]	; (8001118 <gpio_BUTTON_config+0x34>)
 80010fa:	f023 0303 	bic.w	r3, r3, #3
 80010fe:	6013      	str	r3, [r2, #0]
	//Pull no PULL UP- no PULL DOWN
	GPIOD->PUPDR &= ~GPIO_PUPDR_PUPD0;
 8001100:	4b05      	ldr	r3, [pc, #20]	; (8001118 <gpio_BUTTON_config+0x34>)
 8001102:	68db      	ldr	r3, [r3, #12]
 8001104:	4a04      	ldr	r2, [pc, #16]	; (8001118 <gpio_BUTTON_config+0x34>)
 8001106:	f023 0303 	bic.w	r3, r3, #3
 800110a:	60d3      	str	r3, [r2, #12]

}
 800110c:	bf00      	nop
 800110e:	46bd      	mov	sp, r7
 8001110:	bc80      	pop	{r7}
 8001112:	4770      	bx	lr
 8001114:	40023800 	.word	0x40023800
 8001118:	40020c00 	.word	0x40020c00

0800111c <__NVIC_EnableIRQ>:
{
 800111c:	b480      	push	{r7}
 800111e:	b083      	sub	sp, #12
 8001120:	af00      	add	r7, sp, #0
 8001122:	4603      	mov	r3, r0
 8001124:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001126:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800112a:	2b00      	cmp	r3, #0
 800112c:	db0b      	blt.n	8001146 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800112e:	79fb      	ldrb	r3, [r7, #7]
 8001130:	f003 021f 	and.w	r2, r3, #31
 8001134:	4906      	ldr	r1, [pc, #24]	; (8001150 <__NVIC_EnableIRQ+0x34>)
 8001136:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800113a:	095b      	lsrs	r3, r3, #5
 800113c:	2001      	movs	r0, #1
 800113e:	fa00 f202 	lsl.w	r2, r0, r2
 8001142:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8001146:	bf00      	nop
 8001148:	370c      	adds	r7, #12
 800114a:	46bd      	mov	sp, r7
 800114c:	bc80      	pop	{r7}
 800114e:	4770      	bx	lr
 8001150:	e000e100 	.word	0xe000e100

08001154 <__NVIC_ClearPendingIRQ>:
{
 8001154:	b480      	push	{r7}
 8001156:	b083      	sub	sp, #12
 8001158:	af00      	add	r7, sp, #0
 800115a:	4603      	mov	r3, r0
 800115c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800115e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001162:	2b00      	cmp	r3, #0
 8001164:	db0c      	blt.n	8001180 <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001166:	79fb      	ldrb	r3, [r7, #7]
 8001168:	f003 021f 	and.w	r2, r3, #31
 800116c:	4907      	ldr	r1, [pc, #28]	; (800118c <__NVIC_ClearPendingIRQ+0x38>)
 800116e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001172:	095b      	lsrs	r3, r3, #5
 8001174:	2001      	movs	r0, #1
 8001176:	fa00 f202 	lsl.w	r2, r0, r2
 800117a:	3360      	adds	r3, #96	; 0x60
 800117c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8001180:	bf00      	nop
 8001182:	370c      	adds	r7, #12
 8001184:	46bd      	mov	sp, r7
 8001186:	bc80      	pop	{r7}
 8001188:	4770      	bx	lr
 800118a:	bf00      	nop
 800118c:	e000e100 	.word	0xe000e100

08001190 <__NVIC_SetPriority>:
{
 8001190:	b480      	push	{r7}
 8001192:	b083      	sub	sp, #12
 8001194:	af00      	add	r7, sp, #0
 8001196:	4603      	mov	r3, r0
 8001198:	6039      	str	r1, [r7, #0]
 800119a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800119c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	db0a      	blt.n	80011ba <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011a4:	683b      	ldr	r3, [r7, #0]
 80011a6:	b2da      	uxtb	r2, r3
 80011a8:	490c      	ldr	r1, [pc, #48]	; (80011dc <__NVIC_SetPriority+0x4c>)
 80011aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011ae:	0112      	lsls	r2, r2, #4
 80011b0:	b2d2      	uxtb	r2, r2
 80011b2:	440b      	add	r3, r1
 80011b4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80011b8:	e00a      	b.n	80011d0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011ba:	683b      	ldr	r3, [r7, #0]
 80011bc:	b2da      	uxtb	r2, r3
 80011be:	4908      	ldr	r1, [pc, #32]	; (80011e0 <__NVIC_SetPriority+0x50>)
 80011c0:	79fb      	ldrb	r3, [r7, #7]
 80011c2:	f003 030f 	and.w	r3, r3, #15
 80011c6:	3b04      	subs	r3, #4
 80011c8:	0112      	lsls	r2, r2, #4
 80011ca:	b2d2      	uxtb	r2, r2
 80011cc:	440b      	add	r3, r1
 80011ce:	761a      	strb	r2, [r3, #24]
}
 80011d0:	bf00      	nop
 80011d2:	370c      	adds	r7, #12
 80011d4:	46bd      	mov	sp, r7
 80011d6:	bc80      	pop	{r7}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e000e100 	.word	0xe000e100
 80011e0:	e000ed00 	.word	0xe000ed00

080011e4 <rcc_HSE_Config>:

/*
 * HSE Configuaration
 */
void rcc_HSE_Config(void)
{
 80011e4:	b480      	push	{r7}
 80011e6:	b083      	sub	sp, #12
 80011e8:	af00      	add	r7, sp, #0
	 *
	 * APB1 prescalar = 2 --> 50 MHZ
	 * APB2 prescalar = 1 --> 100 MHZ
	 * ADC prescalar  = 1 --> 100 MHZ
	 */
	uint8_t timeOut = 0xFF;
 80011ea:	23ff      	movs	r3, #255	; 0xff
 80011ec:	71fb      	strb	r3, [r7, #7]
	/* Dissable interrupt */
	RCC->CIR = 0;
 80011ee:	4b72      	ldr	r3, [pc, #456]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80011f0:	2200      	movs	r2, #0
 80011f2:	60da      	str	r2, [r3, #12]
	//Dissable HSI
	RCC->CR &= ~(RCC_CR_HSION);
 80011f4:	4b70      	ldr	r3, [pc, #448]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	4a6f      	ldr	r2, [pc, #444]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80011fa:	f023 0301 	bic.w	r3, r3, #1
 80011fe:	6013      	str	r3, [r2, #0]
	//Dissable PLL and Wait for it dissable
	RCC->CR &= ~RCC_CR_PLLON;
 8001200:	4b6d      	ldr	r3, [pc, #436]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001202:	681b      	ldr	r3, [r3, #0]
 8001204:	4a6c      	ldr	r2, [pc, #432]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001206:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800120a:	6013      	str	r3, [r2, #0]
	while(((RCC->CR & RCC_CR_PLLON) == 0) && timeOut > 0)
 800120c:	e002      	b.n	8001214 <rcc_HSE_Config+0x30>
	{
		timeOut--;
 800120e:	79fb      	ldrb	r3, [r7, #7]
 8001210:	3b01      	subs	r3, #1
 8001212:	71fb      	strb	r3, [r7, #7]
	while(((RCC->CR & RCC_CR_PLLON) == 0) && timeOut > 0)
 8001214:	4b68      	ldr	r3, [pc, #416]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800121c:	2b00      	cmp	r3, #0
 800121e:	d102      	bne.n	8001226 <rcc_HSE_Config+0x42>
 8001220:	79fb      	ldrb	r3, [r7, #7]
 8001222:	2b00      	cmp	r3, #0
 8001224:	d1f3      	bne.n	800120e <rcc_HSE_Config+0x2a>
	}
	timeOut = 0xFF;
 8001226:	23ff      	movs	r3, #255	; 0xff
 8001228:	71fb      	strb	r3, [r7, #7]

	/* PLL configuration */
	//PLLM

	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLM);
 800122a:	4b63      	ldr	r3, [pc, #396]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800122c:	685b      	ldr	r3, [r3, #4]
 800122e:	4a62      	ldr	r2, [pc, #392]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001230:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001234:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLM_2;
 8001236:	4b60      	ldr	r3, [pc, #384]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001238:	685b      	ldr	r3, [r3, #4]
 800123a:	4a5f      	ldr	r2, [pc, #380]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800123c:	f043 0304 	orr.w	r3, r3, #4
 8001240:	6053      	str	r3, [r2, #4]
	//PLLN
	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLN);
 8001242:	4b5d      	ldr	r3, [pc, #372]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001244:	685b      	ldr	r3, [r3, #4]
 8001246:	4a5c      	ldr	r2, [pc, #368]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001248:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800124c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001250:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLN_6 | RCC_PLLCFGR_PLLN_5 | RCC_PLLCFGR_PLLN_2;
 8001252:	4b59      	ldr	r3, [pc, #356]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001254:	685b      	ldr	r3, [r3, #4]
 8001256:	4a58      	ldr	r2, [pc, #352]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001258:	f443 53c8 	orr.w	r3, r3, #6400	; 0x1900
 800125c:	6053      	str	r3, [r2, #4]
	//PLLP
	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLP);
 800125e:	4b56      	ldr	r3, [pc, #344]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001260:	685b      	ldr	r3, [r3, #4]
 8001262:	4a55      	ldr	r2, [pc, #340]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001264:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001268:	6053      	str	r3, [r2, #4]
	/* HSE Oscillator */
	//Enable HSE clock
	RCC->CR &= ~RCC_CR_HSEON;
 800126a:	4b53      	ldr	r3, [pc, #332]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800126c:	681b      	ldr	r3, [r3, #0]
 800126e:	4a52      	ldr	r2, [pc, #328]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001270:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001274:	6013      	str	r3, [r2, #0]
	RCC->CR |= RCC_CR_HSEON;
 8001276:	4b50      	ldr	r3, [pc, #320]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001278:	681b      	ldr	r3, [r3, #0]
 800127a:	4a4f      	ldr	r2, [pc, #316]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800127c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001280:	6013      	str	r3, [r2, #0]
	//Enable LSI clock
	RCC->CR |= RCC_CR_HSION;
 8001282:	4b4d      	ldr	r3, [pc, #308]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001284:	681b      	ldr	r3, [r3, #0]
 8001286:	4a4c      	ldr	r2, [pc, #304]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001288:	f043 0301 	orr.w	r3, r3, #1
 800128c:	6013      	str	r3, [r2, #0]
	//Wait for it stalibize
	while(((RCC->CR & RCC_CR_HSERDY) == 0) && timeOut > 0)
 800128e:	e002      	b.n	8001296 <rcc_HSE_Config+0xb2>
	{
		timeOut--;
 8001290:	79fb      	ldrb	r3, [r7, #7]
 8001292:	3b01      	subs	r3, #1
 8001294:	71fb      	strb	r3, [r7, #7]
	while(((RCC->CR & RCC_CR_HSERDY) == 0) && timeOut > 0)
 8001296:	4b48      	ldr	r3, [pc, #288]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001298:	681b      	ldr	r3, [r3, #0]
 800129a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800129e:	2b00      	cmp	r3, #0
 80012a0:	d102      	bne.n	80012a8 <rcc_HSE_Config+0xc4>
 80012a2:	79fb      	ldrb	r3, [r7, #7]
 80012a4:	2b00      	cmp	r3, #0
 80012a6:	d1f3      	bne.n	8001290 <rcc_HSE_Config+0xac>
	}
	//Enable LSI clock
	RCC->CR |= RCC_CR_HSION;
 80012a8:	4b43      	ldr	r3, [pc, #268]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	4a42      	ldr	r2, [pc, #264]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012ae:	f043 0301 	orr.w	r3, r3, #1
 80012b2:	6013      	str	r3, [r2, #0]
	//Wait for it stalibize
	timeOut = 0xFF;
 80012b4:	23ff      	movs	r3, #255	; 0xff
 80012b6:	71fb      	strb	r3, [r7, #7]
	while(((RCC->CR & RCC_CR_HSIRDY) == 0) && timeOut > 0)
 80012b8:	e002      	b.n	80012c0 <rcc_HSE_Config+0xdc>
	{
		timeOut--;
 80012ba:	79fb      	ldrb	r3, [r7, #7]
 80012bc:	3b01      	subs	r3, #1
 80012be:	71fb      	strb	r3, [r7, #7]
	while(((RCC->CR & RCC_CR_HSIRDY) == 0) && timeOut > 0)
 80012c0:	4b3d      	ldr	r3, [pc, #244]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	f003 0302 	and.w	r3, r3, #2
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	d102      	bne.n	80012d2 <rcc_HSE_Config+0xee>
 80012cc:	79fb      	ldrb	r3, [r7, #7]
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	d1f3      	bne.n	80012ba <rcc_HSE_Config+0xd6>
	}
	//Sellect HSE as PLL source
	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLSRC_HSE;
 80012d2:	4b39      	ldr	r3, [pc, #228]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012d4:	685b      	ldr	r3, [r3, #4]
 80012d6:	4a38      	ldr	r2, [pc, #224]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012d8:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80012dc:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLSRC_HSE;
 80012de:	4b36      	ldr	r3, [pc, #216]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012e0:	685b      	ldr	r3, [r3, #4]
 80012e2:	4a35      	ldr	r2, [pc, #212]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012e4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80012e8:	6053      	str	r3, [r2, #4]
	//Enable PLL
	RCC->CR &= ~RCC_CR_PLLON;
 80012ea:	4b33      	ldr	r3, [pc, #204]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012ec:	681b      	ldr	r3, [r3, #0]
 80012ee:	4a32      	ldr	r2, [pc, #200]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012f0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80012f4:	6013      	str	r3, [r2, #0]
	RCC->CR |= RCC_CR_PLLON;
 80012f6:	4b30      	ldr	r3, [pc, #192]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012f8:	681b      	ldr	r3, [r3, #0]
 80012fa:	4a2f      	ldr	r2, [pc, #188]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80012fc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001300:	6013      	str	r3, [r2, #0]
	//Wait for it stalibize
	timeOut = 0xFF;
 8001302:	23ff      	movs	r3, #255	; 0xff
 8001304:	71fb      	strb	r3, [r7, #7]
	while(((RCC->CR & RCC_CR_PLLRDY) == 0) && timeOut > 0)
 8001306:	e002      	b.n	800130e <rcc_HSE_Config+0x12a>
	{
		timeOut--;
 8001308:	79fb      	ldrb	r3, [r7, #7]
 800130a:	3b01      	subs	r3, #1
 800130c:	71fb      	strb	r3, [r7, #7]
	while(((RCC->CR & RCC_CR_PLLRDY) == 0) && timeOut > 0)
 800130e:	4b2a      	ldr	r3, [pc, #168]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001310:	681b      	ldr	r3, [r3, #0]
 8001312:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001316:	2b00      	cmp	r3, #0
 8001318:	d102      	bne.n	8001320 <rcc_HSE_Config+0x13c>
 800131a:	79fb      	ldrb	r3, [r7, #7]
 800131c:	2b00      	cmp	r3, #0
 800131e:	d1f3      	bne.n	8001308 <rcc_HSE_Config+0x124>
	}
	/* Flash prefetch and wait state */
	//4WS =< 64 MHZ
	FLASH->ACR &= ~(FLASH_ACR_LATENCY);
 8001320:	4b26      	ldr	r3, [pc, #152]	; (80013bc <rcc_HSE_Config+0x1d8>)
 8001322:	681b      	ldr	r3, [r3, #0]
 8001324:	4a25      	ldr	r2, [pc, #148]	; (80013bc <rcc_HSE_Config+0x1d8>)
 8001326:	f023 0307 	bic.w	r3, r3, #7
 800132a:	6013      	str	r3, [r2, #0]
	FLASH->ACR |= FLASH_ACR_LATENCY_3WS;
 800132c:	4b23      	ldr	r3, [pc, #140]	; (80013bc <rcc_HSE_Config+0x1d8>)
 800132e:	681b      	ldr	r3, [r3, #0]
 8001330:	4a22      	ldr	r2, [pc, #136]	; (80013bc <rcc_HSE_Config+0x1d8>)
 8001332:	f043 0303 	orr.w	r3, r3, #3
 8001336:	6013      	str	r3, [r2, #0]
	//Enable prefetch buffer
	FLASH->ACR |= FLASH_ACR_PRFTEN;
 8001338:	4b20      	ldr	r3, [pc, #128]	; (80013bc <rcc_HSE_Config+0x1d8>)
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	4a1f      	ldr	r2, [pc, #124]	; (80013bc <rcc_HSE_Config+0x1d8>)
 800133e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001342:	6013      	str	r3, [r2, #0]
	//Sellect PLL as main system clock
	RCC->CFGR &= ~(RCC_CFGR_SW);
 8001344:	4b1c      	ldr	r3, [pc, #112]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001346:	689b      	ldr	r3, [r3, #8]
 8001348:	4a1b      	ldr	r2, [pc, #108]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800134a:	f023 0303 	bic.w	r3, r3, #3
 800134e:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= RCC_CFGR_SW_1;
 8001350:	4b19      	ldr	r3, [pc, #100]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001352:	689b      	ldr	r3, [r3, #8]
 8001354:	4a18      	ldr	r2, [pc, #96]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001356:	f043 0302 	orr.w	r3, r3, #2
 800135a:	6093      	str	r3, [r2, #8]
	//Wait for PLL clock active source
	timeOut = 0xFF;
 800135c:	23ff      	movs	r3, #255	; 0xff
 800135e:	71fb      	strb	r3, [r7, #7]
	while(((RCC->CFGR & RCC_CFGR_SWS) >> 2 != 0x2UL) && timeOut > 0)
 8001360:	e002      	b.n	8001368 <rcc_HSE_Config+0x184>
	{
		timeOut--;
 8001362:	79fb      	ldrb	r3, [r7, #7]
 8001364:	3b01      	subs	r3, #1
 8001366:	71fb      	strb	r3, [r7, #7]
	while(((RCC->CFGR & RCC_CFGR_SWS) >> 2 != 0x2UL) && timeOut > 0)
 8001368:	4b13      	ldr	r3, [pc, #76]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800136a:	689b      	ldr	r3, [r3, #8]
 800136c:	089b      	lsrs	r3, r3, #2
 800136e:	f003 0303 	and.w	r3, r3, #3
 8001372:	2b02      	cmp	r3, #2
 8001374:	d002      	beq.n	800137c <rcc_HSE_Config+0x198>
 8001376:	79fb      	ldrb	r3, [r7, #7]
 8001378:	2b00      	cmp	r3, #0
 800137a:	d1f2      	bne.n	8001362 <rcc_HSE_Config+0x17e>
	}

	/* Peripherals clock setup */
	//AHB
	RCC->CFGR &= ~(RCC_CFGR_RTCPRE);
 800137c:	4b0e      	ldr	r3, [pc, #56]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800137e:	689b      	ldr	r3, [r3, #8]
 8001380:	4a0d      	ldr	r2, [pc, #52]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001382:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8001386:	6093      	str	r3, [r2, #8]
	//APB2
	RCC->CFGR &= ~(RCC_CFGR_PPRE2);
 8001388:	4b0b      	ldr	r3, [pc, #44]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800138a:	689b      	ldr	r3, [r3, #8]
 800138c:	4a0a      	ldr	r2, [pc, #40]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800138e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8001392:	6093      	str	r3, [r2, #8]
	//APB1
	RCC->CFGR &= ~(RCC_CFGR_PPRE1);
 8001394:	4b08      	ldr	r3, [pc, #32]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 8001396:	689b      	ldr	r3, [r3, #8]
 8001398:	4a07      	ldr	r2, [pc, #28]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 800139a:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800139e:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= RCC_CFGR_PPRE1_2;
 80013a0:	4b05      	ldr	r3, [pc, #20]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80013a2:	689b      	ldr	r3, [r3, #8]
 80013a4:	4a04      	ldr	r2, [pc, #16]	; (80013b8 <rcc_HSE_Config+0x1d4>)
 80013a6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80013aa:	6093      	str	r3, [r2, #8]
}
 80013ac:	bf00      	nop
 80013ae:	370c      	adds	r7, #12
 80013b0:	46bd      	mov	sp, r7
 80013b2:	bc80      	pop	{r7}
 80013b4:	4770      	bx	lr
 80013b6:	bf00      	nop
 80013b8:	40023800 	.word	0x40023800
 80013bc:	40023c00 	.word	0x40023c00

080013c0 <rcc_SYSTICk_config>:

/*
 * @brief Systick configuration
 */
void rcc_SYSTICk_config(uint32_t arr)
{
 80013c0:	b580      	push	{r7, lr}
 80013c2:	b082      	sub	sp, #8
 80013c4:	af00      	add	r7, sp, #0
 80013c6:	6078      	str	r0, [r7, #4]
	//Reset control register
	SysTick->CTRL = 0;
 80013c8:	4b14      	ldr	r3, [pc, #80]	; (800141c <rcc_SYSTICk_config+0x5c>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	601a      	str	r2, [r3, #0]
	//Set the reload value
	SysTick->LOAD = arr - 1;
 80013ce:	4a13      	ldr	r2, [pc, #76]	; (800141c <rcc_SYSTICk_config+0x5c>)
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	3b01      	subs	r3, #1
 80013d4:	6053      	str	r3, [r2, #4]
	//Set priority systick interrupt (NVIC)
	NVIC_SetPriority(SysTick_IRQn,0);
 80013d6:	2100      	movs	r1, #0
 80013d8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80013dc:	f7ff fed8 	bl	8001190 <__NVIC_SetPriority>
	//Reset systick value to 0
	SysTick->VAL = 0;
 80013e0:	4b0e      	ldr	r3, [pc, #56]	; (800141c <rcc_SYSTICk_config+0x5c>)
 80013e2:	2200      	movs	r2, #0
 80013e4:	609a      	str	r2, [r3, #8]
	//Enable NVIC
	NVIC_EnableIRQ(SysTick_IRQn);
 80013e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80013ea:	f7ff fe97 	bl	800111c <__NVIC_EnableIRQ>
	//Enable systick from control register
	SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk;
 80013ee:	4b0b      	ldr	r3, [pc, #44]	; (800141c <rcc_SYSTICk_config+0x5c>)
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	4a0a      	ldr	r2, [pc, #40]	; (800141c <rcc_SYSTICk_config+0x5c>)
 80013f4:	f043 0304 	orr.w	r3, r3, #4
 80013f8:	6013      	str	r3, [r2, #0]
	SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
 80013fa:	4b08      	ldr	r3, [pc, #32]	; (800141c <rcc_SYSTICk_config+0x5c>)
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	4a07      	ldr	r2, [pc, #28]	; (800141c <rcc_SYSTICk_config+0x5c>)
 8001400:	f043 0302 	orr.w	r3, r3, #2
 8001404:	6013      	str	r3, [r2, #0]
	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;
 8001406:	4b05      	ldr	r3, [pc, #20]	; (800141c <rcc_SYSTICk_config+0x5c>)
 8001408:	681b      	ldr	r3, [r3, #0]
 800140a:	4a04      	ldr	r2, [pc, #16]	; (800141c <rcc_SYSTICk_config+0x5c>)
 800140c:	f043 0301 	orr.w	r3, r3, #1
 8001410:	6013      	str	r3, [r2, #0]

}
 8001412:	bf00      	nop
 8001414:	3708      	adds	r7, #8
 8001416:	46bd      	mov	sp, r7
 8001418:	bd80      	pop	{r7, pc}
 800141a:	bf00      	nop
 800141c:	e000e010 	.word	0xe000e010

08001420 <rcc_msTicks>:

/*
 * @brief Increment ms Tick
 */
void rcc_msTicks(void)
{
 8001420:	b480      	push	{r7}
 8001422:	af00      	add	r7, sp, #0
	msTick++;
 8001424:	4b04      	ldr	r3, [pc, #16]	; (8001438 <rcc_msTicks+0x18>)
 8001426:	681b      	ldr	r3, [r3, #0]
 8001428:	3301      	adds	r3, #1
 800142a:	4a03      	ldr	r2, [pc, #12]	; (8001438 <rcc_msTicks+0x18>)
 800142c:	6013      	str	r3, [r2, #0]
}
 800142e:	bf00      	nop
 8001430:	46bd      	mov	sp, r7
 8001432:	bc80      	pop	{r7}
 8001434:	4770      	bx	lr
 8001436:	bf00      	nop
 8001438:	200001f4 	.word	0x200001f4

0800143c <rcc_msGetTicks>:

/*
 * @brief Get ms stick
 */
uint32_t rcc_msGetTicks(void)
{
 800143c:	b480      	push	{r7}
 800143e:	af00      	add	r7, sp, #0
	return msTick;
 8001440:	4b02      	ldr	r3, [pc, #8]	; (800144c <rcc_msGetTicks+0x10>)
 8001442:	681b      	ldr	r3, [r3, #0]
}
 8001444:	4618      	mov	r0, r3
 8001446:	46bd      	mov	sp, r7
 8001448:	bc80      	pop	{r7}
 800144a:	4770      	bx	lr
 800144c:	200001f4 	.word	0x200001f4

08001450 <rcc_msDelay>:

/*
 * @brief ms Delay
 */
void rcc_msDelay(uint32_t ms)
{
 8001450:	b580      	push	{r7, lr}
 8001452:	b084      	sub	sp, #16
 8001454:	af00      	add	r7, sp, #0
 8001456:	6078      	str	r0, [r7, #4]
	uint32_t startTicks = rcc_msGetTicks();
 8001458:	f7ff fff0 	bl	800143c <rcc_msGetTicks>
 800145c:	60f8      	str	r0, [r7, #12]
	while(rcc_msGetTicks() - startTicks < ms);
 800145e:	bf00      	nop
 8001460:	f7ff ffec 	bl	800143c <rcc_msGetTicks>
 8001464:	4602      	mov	r2, r0
 8001466:	68fb      	ldr	r3, [r7, #12]
 8001468:	1ad3      	subs	r3, r2, r3
 800146a:	687a      	ldr	r2, [r7, #4]
 800146c:	429a      	cmp	r2, r3
 800146e:	d8f7      	bhi.n	8001460 <rcc_msDelay+0x10>
	msTick = 0;
 8001470:	4b03      	ldr	r3, [pc, #12]	; (8001480 <rcc_msDelay+0x30>)
 8001472:	2200      	movs	r2, #0
 8001474:	601a      	str	r2, [r3, #0]
}
 8001476:	bf00      	nop
 8001478:	3710      	adds	r7, #16
 800147a:	46bd      	mov	sp, r7
 800147c:	bd80      	pop	{r7, pc}
 800147e:	bf00      	nop
 8001480:	200001f4 	.word	0x200001f4

08001484 <SysTick_Handler>:

/*
 * @brief SysTick Interrupt Callback
 */
void SysTick_Handler(void)
{
 8001484:	b580      	push	{r7, lr}
 8001486:	af00      	add	r7, sp, #0
	NVIC_ClearPendingIRQ(SysTick_IRQn);
 8001488:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800148c:	f7ff fe62 	bl	8001154 <__NVIC_ClearPendingIRQ>
	rcc_msTicks();
 8001490:	f7ff ffc6 	bl	8001420 <rcc_msTicks>
}
 8001494:	bf00      	nop
 8001496:	bd80      	pop	{r7, pc}

08001498 <__NVIC_EnableIRQ>:
{
 8001498:	b480      	push	{r7}
 800149a:	b083      	sub	sp, #12
 800149c:	af00      	add	r7, sp, #0
 800149e:	4603      	mov	r3, r0
 80014a0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80014a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014a6:	2b00      	cmp	r3, #0
 80014a8:	db0b      	blt.n	80014c2 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014aa:	79fb      	ldrb	r3, [r7, #7]
 80014ac:	f003 021f 	and.w	r2, r3, #31
 80014b0:	4906      	ldr	r1, [pc, #24]	; (80014cc <__NVIC_EnableIRQ+0x34>)
 80014b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014b6:	095b      	lsrs	r3, r3, #5
 80014b8:	2001      	movs	r0, #1
 80014ba:	fa00 f202 	lsl.w	r2, r0, r2
 80014be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80014c2:	bf00      	nop
 80014c4:	370c      	adds	r7, #12
 80014c6:	46bd      	mov	sp, r7
 80014c8:	bc80      	pop	{r7}
 80014ca:	4770      	bx	lr
 80014cc:	e000e100 	.word	0xe000e100

080014d0 <__NVIC_SetPriority>:
{
 80014d0:	b480      	push	{r7}
 80014d2:	b083      	sub	sp, #12
 80014d4:	af00      	add	r7, sp, #0
 80014d6:	4603      	mov	r3, r0
 80014d8:	6039      	str	r1, [r7, #0]
 80014da:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80014dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014e0:	2b00      	cmp	r3, #0
 80014e2:	db0a      	blt.n	80014fa <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80014e4:	683b      	ldr	r3, [r7, #0]
 80014e6:	b2da      	uxtb	r2, r3
 80014e8:	490c      	ldr	r1, [pc, #48]	; (800151c <__NVIC_SetPriority+0x4c>)
 80014ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014ee:	0112      	lsls	r2, r2, #4
 80014f0:	b2d2      	uxtb	r2, r2
 80014f2:	440b      	add	r3, r1
 80014f4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80014f8:	e00a      	b.n	8001510 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80014fa:	683b      	ldr	r3, [r7, #0]
 80014fc:	b2da      	uxtb	r2, r3
 80014fe:	4908      	ldr	r1, [pc, #32]	; (8001520 <__NVIC_SetPriority+0x50>)
 8001500:	79fb      	ldrb	r3, [r7, #7]
 8001502:	f003 030f 	and.w	r3, r3, #15
 8001506:	3b04      	subs	r3, #4
 8001508:	0112      	lsls	r2, r2, #4
 800150a:	b2d2      	uxtb	r2, r2
 800150c:	440b      	add	r3, r1
 800150e:	761a      	strb	r2, [r3, #24]
}
 8001510:	bf00      	nop
 8001512:	370c      	adds	r7, #12
 8001514:	46bd      	mov	sp, r7
 8001516:	bc80      	pop	{r7}
 8001518:	4770      	bx	lr
 800151a:	bf00      	nop
 800151c:	e000e100 	.word	0xe000e100
 8001520:	e000ed00 	.word	0xe000ed00

08001524 <spi_SPI1_GPIO_config>:
 * PC7-DC
 */
const uint16_t crc_pr = 0x1234;

void spi_SPI1_GPIO_config(void)
{
 8001524:	b480      	push	{r7}
 8001526:	af00      	add	r7, sp, #0
	/* SPI1 */
	//Enable GPIO A,B,C
	RCC->AHB1ENR &= ~(0x7UL << 0);
 8001528:	4b62      	ldr	r3, [pc, #392]	; (80016b4 <spi_SPI1_GPIO_config+0x190>)
 800152a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800152c:	4a61      	ldr	r2, [pc, #388]	; (80016b4 <spi_SPI1_GPIO_config+0x190>)
 800152e:	f023 0307 	bic.w	r3, r3, #7
 8001532:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= 0x7UL << 0;
 8001534:	4b5f      	ldr	r3, [pc, #380]	; (80016b4 <spi_SPI1_GPIO_config+0x190>)
 8001536:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001538:	4a5e      	ldr	r2, [pc, #376]	; (80016b4 <spi_SPI1_GPIO_config+0x190>)
 800153a:	f043 0307 	orr.w	r3, r3, #7
 800153e:	6313      	str	r3, [r2, #48]	; 0x30
	//MODE alternate
	GPIOA->MODER &= ~(0x3FUL << 10);
 8001540:	4b5d      	ldr	r3, [pc, #372]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001542:	681b      	ldr	r3, [r3, #0]
 8001544:	4a5c      	ldr	r2, [pc, #368]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001546:	f423 437c 	bic.w	r3, r3, #64512	; 0xfc00
 800154a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= 0x2A << 10;
 800154c:	4b5a      	ldr	r3, [pc, #360]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 800154e:	681b      	ldr	r3, [r3, #0]
 8001550:	4a59      	ldr	r2, [pc, #356]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001552:	f443 4328 	orr.w	r3, r3, #43008	; 0xa800
 8001556:	6013      	str	r3, [r2, #0]
	//HIGH speed
	GPIOA->OSPEEDR &= ~(0x3FUL << 10);
 8001558:	4b57      	ldr	r3, [pc, #348]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 800155a:	689b      	ldr	r3, [r3, #8]
 800155c:	4a56      	ldr	r2, [pc, #344]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 800155e:	f423 437c 	bic.w	r3, r3, #64512	; 0xfc00
 8001562:	6093      	str	r3, [r2, #8]
	GPIOA->OSPEEDR |= 0x3FUL << 10;
 8001564:	4b54      	ldr	r3, [pc, #336]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001566:	689b      	ldr	r3, [r3, #8]
 8001568:	4a53      	ldr	r2, [pc, #332]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 800156a:	f443 437c 	orr.w	r3, r3, #64512	; 0xfc00
 800156e:	6093      	str	r3, [r2, #8]
	//MAP AF5
	GPIOA->AFR[0] &= ~(0xFFF << 20);
 8001570:	4b51      	ldr	r3, [pc, #324]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001572:	6a1b      	ldr	r3, [r3, #32]
 8001574:	4a50      	ldr	r2, [pc, #320]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001576:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800157a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= 0x555 << 20;
 800157c:	4b4e      	ldr	r3, [pc, #312]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 800157e:	6a1b      	ldr	r3, [r3, #32]
 8001580:	4a4d      	ldr	r2, [pc, #308]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001582:	f043 43aa 	orr.w	r3, r3, #1426063360	; 0x55000000
 8001586:	f443 03a0 	orr.w	r3, r3, #5242880	; 0x500000
 800158a:	6213      	str	r3, [r2, #32]

	/* SPI2 */
	GPIOC->MODER &= ~(0xFUL << 2);
 800158c:	4b4b      	ldr	r3, [pc, #300]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 800158e:	681b      	ldr	r3, [r3, #0]
 8001590:	4a4a      	ldr	r2, [pc, #296]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 8001592:	f023 033c 	bic.w	r3, r3, #60	; 0x3c
 8001596:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= 0xAUL << 2;
 8001598:	4b48      	ldr	r3, [pc, #288]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 800159a:	681b      	ldr	r3, [r3, #0]
 800159c:	4a47      	ldr	r2, [pc, #284]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 800159e:	f043 0328 	orr.w	r3, r3, #40	; 0x28
 80015a2:	6013      	str	r3, [r2, #0]
	GPIOB->MODER &= ~(0x3UL << 20);
 80015a4:	4b46      	ldr	r3, [pc, #280]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	4a45      	ldr	r2, [pc, #276]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 80015aa:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80015ae:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= 0x1UL << 21;
 80015b0:	4b43      	ldr	r3, [pc, #268]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 80015b2:	681b      	ldr	r3, [r3, #0]
 80015b4:	4a42      	ldr	r2, [pc, #264]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 80015b6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80015ba:	6013      	str	r3, [r2, #0]
	//HIGH speed
	GPIOC->OSPEEDR &= ~(0xFUL << 2);
 80015bc:	4b3f      	ldr	r3, [pc, #252]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80015be:	689b      	ldr	r3, [r3, #8]
 80015c0:	4a3e      	ldr	r2, [pc, #248]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80015c2:	f023 033c 	bic.w	r3, r3, #60	; 0x3c
 80015c6:	6093      	str	r3, [r2, #8]
	GPIOC->OSPEEDR |= 0xFUL << 2;
 80015c8:	4b3c      	ldr	r3, [pc, #240]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80015ca:	689b      	ldr	r3, [r3, #8]
 80015cc:	4a3b      	ldr	r2, [pc, #236]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80015ce:	f043 033c 	orr.w	r3, r3, #60	; 0x3c
 80015d2:	6093      	str	r3, [r2, #8]
	GPIOB->OSPEEDR &= ~(0x3UL << 20);
 80015d4:	4b3a      	ldr	r3, [pc, #232]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 80015d6:	689b      	ldr	r3, [r3, #8]
 80015d8:	4a39      	ldr	r2, [pc, #228]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 80015da:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80015de:	6093      	str	r3, [r2, #8]
	GPIOB->OSPEEDR |= 0x3UL << 20;
 80015e0:	4b37      	ldr	r3, [pc, #220]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 80015e2:	689b      	ldr	r3, [r3, #8]
 80015e4:	4a36      	ldr	r2, [pc, #216]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 80015e6:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80015ea:	6093      	str	r3, [r2, #8]
	//MAP AF5
	GPIOC->AFR[0] &= ~(0xFF << 8);
 80015ec:	4b33      	ldr	r3, [pc, #204]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80015ee:	6a1b      	ldr	r3, [r3, #32]
 80015f0:	4a32      	ldr	r2, [pc, #200]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80015f2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80015f6:	6213      	str	r3, [r2, #32]
	GPIOC->AFR[0] |= 0x55 << 8;
 80015f8:	4b30      	ldr	r3, [pc, #192]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80015fa:	6a1b      	ldr	r3, [r3, #32]
 80015fc:	4a2f      	ldr	r2, [pc, #188]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80015fe:	f443 43aa 	orr.w	r3, r3, #21760	; 0x5500
 8001602:	6213      	str	r3, [r2, #32]
	GPIOB->AFR[1] &= ~(0xFUL << 8);
 8001604:	4b2e      	ldr	r3, [pc, #184]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 8001606:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001608:	4a2d      	ldr	r2, [pc, #180]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 800160a:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800160e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |= 0x5UL << 8;
 8001610:	4b2b      	ldr	r3, [pc, #172]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 8001612:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001614:	4a2a      	ldr	r2, [pc, #168]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 8001616:	f443 63a0 	orr.w	r3, r3, #1280	; 0x500
 800161a:	6253      	str	r3, [r2, #36]	; 0x24

	//CS
	GPIOB->MODER &= ~(GPIO_MODER_MODE6);
 800161c:	4b28      	ldr	r3, [pc, #160]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	4a27      	ldr	r2, [pc, #156]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 8001622:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001626:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= GPIO_MODER_MODE6_0;
 8001628:	4b25      	ldr	r3, [pc, #148]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 800162a:	681b      	ldr	r3, [r3, #0]
 800162c:	4a24      	ldr	r2, [pc, #144]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 800162e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001632:	6013      	str	r3, [r2, #0]
	GPIOB->OTYPER &= ~(GPIO_OTYPER_OT6);
 8001634:	4b22      	ldr	r3, [pc, #136]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 8001636:	685b      	ldr	r3, [r3, #4]
 8001638:	4a21      	ldr	r2, [pc, #132]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 800163a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800163e:	6053      	str	r3, [r2, #4]

	GPIOB->MODER &= ~(GPIO_MODER_MODE5);
 8001640:	4b1f      	ldr	r3, [pc, #124]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 8001642:	681b      	ldr	r3, [r3, #0]
 8001644:	4a1e      	ldr	r2, [pc, #120]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 8001646:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800164a:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= GPIO_MODER_MODE5_0;
 800164c:	4b1c      	ldr	r3, [pc, #112]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 800164e:	681b      	ldr	r3, [r3, #0]
 8001650:	4a1b      	ldr	r2, [pc, #108]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 8001652:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001656:	6013      	str	r3, [r2, #0]
	GPIOB->OTYPER &= ~(GPIO_OTYPER_OT5);
 8001658:	4b19      	ldr	r3, [pc, #100]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 800165a:	685b      	ldr	r3, [r3, #4]
 800165c:	4a18      	ldr	r2, [pc, #96]	; (80016c0 <spi_SPI1_GPIO_config+0x19c>)
 800165e:	f023 0320 	bic.w	r3, r3, #32
 8001662:	6053      	str	r3, [r2, #4]

	//DC and RST output push-pull
	//RST-PA9
	GPIOA->MODER &= ~(GPIO_MODER_MODE9);
 8001664:	4b14      	ldr	r3, [pc, #80]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001666:	681b      	ldr	r3, [r3, #0]
 8001668:	4a13      	ldr	r2, [pc, #76]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 800166a:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 800166e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= GPIO_MODER_MODE9_0;
 8001670:	4b11      	ldr	r3, [pc, #68]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	4a10      	ldr	r2, [pc, #64]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001676:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800167a:	6013      	str	r3, [r2, #0]
	GPIOA->OTYPER &= ~GPIO_OTYPER_OT9;
 800167c:	4b0e      	ldr	r3, [pc, #56]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 800167e:	685b      	ldr	r3, [r3, #4]
 8001680:	4a0d      	ldr	r2, [pc, #52]	; (80016b8 <spi_SPI1_GPIO_config+0x194>)
 8001682:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001686:	6053      	str	r3, [r2, #4]

	//PC7-DC
	GPIOC->MODER &= ~(GPIO_MODER_MODE7);
 8001688:	4b0c      	ldr	r3, [pc, #48]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	4a0b      	ldr	r2, [pc, #44]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 800168e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001692:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= GPIO_MODER_MODE7_0;
 8001694:	4b09      	ldr	r3, [pc, #36]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	4a08      	ldr	r2, [pc, #32]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 800169a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800169e:	6013      	str	r3, [r2, #0]
	GPIOC->OTYPER &= ~GPIO_OTYPER_OT7;
 80016a0:	4b06      	ldr	r3, [pc, #24]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80016a2:	685b      	ldr	r3, [r3, #4]
 80016a4:	4a05      	ldr	r2, [pc, #20]	; (80016bc <spi_SPI1_GPIO_config+0x198>)
 80016a6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80016aa:	6053      	str	r3, [r2, #4]

}
 80016ac:	bf00      	nop
 80016ae:	46bd      	mov	sp, r7
 80016b0:	bc80      	pop	{r7}
 80016b2:	4770      	bx	lr
 80016b4:	40023800 	.word	0x40023800
 80016b8:	40020000 	.word	0x40020000
 80016bc:	40020800 	.word	0x40020800
 80016c0:	40020400 	.word	0x40020400

080016c4 <spi_SPI1_DMA_config>:

/*
 * @brief SPI DMA configuration
 */
void spi_SPI1_DMA_config(void)
{
 80016c4:	b580      	push	{r7, lr}
 80016c6:	b082      	sub	sp, #8
 80016c8:	af00      	add	r7, sp, #0
	/* SPI1 */
	//Enable spi clock
	RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 80016ca:	4b99      	ldr	r3, [pc, #612]	; (8001930 <spi_SPI1_DMA_config+0x26c>)
 80016cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016ce:	4a98      	ldr	r2, [pc, #608]	; (8001930 <spi_SPI1_DMA_config+0x26c>)
 80016d0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80016d4:	6453      	str	r3, [r2, #68]	; 0x44
	//Clear all flag
	__IO uint32_t temRed = SPI1->SR;
 80016d6:	4b97      	ldr	r3, [pc, #604]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 80016d8:	689b      	ldr	r3, [r3, #8]
 80016da:	607b      	str	r3, [r7, #4]
	SPI1->SR = 0;
 80016dc:	4b95      	ldr	r3, [pc, #596]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 80016de:	2200      	movs	r2, #0
 80016e0:	609a      	str	r2, [r3, #8]
	//Sellect baurate Fpclk/2
	SPI1->CR1 &= ~(SPI_CR1_BR);
 80016e2:	4b94      	ldr	r3, [pc, #592]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 80016e4:	681b      	ldr	r3, [r3, #0]
 80016e6:	4a93      	ldr	r2, [pc, #588]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 80016e8:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 80016ec:	6013      	str	r3, [r2, #0]
	//SPI1->CR1 |=   SPI_CR1_BR_1 | SPI_CR1_BR_2;
	//Sellect CPOL and CPAL
	SPI1->CR1 &= ~(SPI_CR1_CPHA);
 80016ee:	4b91      	ldr	r3, [pc, #580]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	4a90      	ldr	r2, [pc, #576]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 80016f4:	f023 0301 	bic.w	r3, r3, #1
 80016f8:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &= ~(SPI_CR1_CPOL);
 80016fa:	4b8e      	ldr	r3, [pc, #568]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 80016fc:	681b      	ldr	r3, [r3, #0]
 80016fe:	4a8d      	ldr	r2, [pc, #564]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001700:	f023 0302 	bic.w	r3, r3, #2
 8001704:	6013      	str	r3, [r2, #0]
	//Set data fame 8/16 bit Motorola
	SPI1->CR1 &= ~(SPI_CR1_DFF);
 8001706:	4b8b      	ldr	r3, [pc, #556]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	4a8a      	ldr	r2, [pc, #552]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 800170c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8001710:	6013      	str	r3, [r2, #0]
	SPI1->CR2 &= ~(SPI_CR2_FRF);
 8001712:	4b88      	ldr	r3, [pc, #544]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001714:	685b      	ldr	r3, [r3, #4]
 8001716:	4a87      	ldr	r2, [pc, #540]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001718:	f023 0310 	bic.w	r3, r3, #16
 800171c:	6053      	str	r3, [r2, #4]
	//Mode master
	SPI1->CR1 |= SPI_CR1_MSTR;
 800171e:	4b85      	ldr	r3, [pc, #532]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	4a84      	ldr	r2, [pc, #528]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001724:	f043 0304 	orr.w	r3, r3, #4
 8001728:	6013      	str	r3, [r2, #0]
	//MSB first
	SPI1->CR1 &= ~(SPI_CR1_LSBFIRST);
 800172a:	4b82      	ldr	r3, [pc, #520]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	4a81      	ldr	r2, [pc, #516]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001730:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001734:	6013      	str	r3, [r2, #0]
	//Duplex
	SPI1->CR1 &= ~(SPI_CR1_BIDIMODE);
 8001736:	4b7f      	ldr	r3, [pc, #508]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001738:	681b      	ldr	r3, [r3, #0]
 800173a:	4a7e      	ldr	r2, [pc, #504]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 800173c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8001740:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &= ~(SPI_CR1_RXONLY);
 8001742:	4b7c      	ldr	r3, [pc, #496]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001744:	681b      	ldr	r3, [r3, #0]
 8001746:	4a7b      	ldr	r2, [pc, #492]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001748:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800174c:	6013      	str	r3, [r2, #0]
	//Slave sellect
	SPI1->CR1 |= (SPI_CR1_SSI | SPI_CR1_SSM);
 800174e:	4b79      	ldr	r3, [pc, #484]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001750:	681b      	ldr	r3, [r3, #0]
 8001752:	4a78      	ldr	r2, [pc, #480]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001754:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001758:	6013      	str	r3, [r2, #0]

	//Enable SPI1 DMA in SPI
	SPI1->CR2 &= ~(SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800175a:	4b76      	ldr	r3, [pc, #472]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 800175c:	685b      	ldr	r3, [r3, #4]
 800175e:	4a75      	ldr	r2, [pc, #468]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001760:	f023 0303 	bic.w	r3, r3, #3
 8001764:	6053      	str	r3, [r2, #4]
	SPI1->CR2 |= (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8001766:	4b73      	ldr	r3, [pc, #460]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 8001768:	685b      	ldr	r3, [r3, #4]
 800176a:	4a72      	ldr	r2, [pc, #456]	; (8001934 <spi_SPI1_DMA_config+0x270>)
 800176c:	f043 0303 	orr.w	r3, r3, #3
 8001770:	6053      	str	r3, [r2, #4]
	//Enable clock DMA2
	RCC->AHB1ENR &= ~RCC_AHB1ENR_DMA2EN;
 8001772:	4b6f      	ldr	r3, [pc, #444]	; (8001930 <spi_SPI1_DMA_config+0x26c>)
 8001774:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001776:	4a6e      	ldr	r2, [pc, #440]	; (8001930 <spi_SPI1_DMA_config+0x26c>)
 8001778:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800177c:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_DMA2EN;
 800177e:	4b6c      	ldr	r3, [pc, #432]	; (8001930 <spi_SPI1_DMA_config+0x26c>)
 8001780:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001782:	4a6b      	ldr	r2, [pc, #428]	; (8001930 <spi_SPI1_DMA_config+0x26c>)
 8001784:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001788:	6313      	str	r3, [r2, #48]	; 0x30

	/* TX DMA2 Stream2 channel 2 */
	//Dissable DMA for configuration register
	DMA2_Stream2->CR &= ~(DMA_SxCR_EN);
 800178a:	4b6b      	ldr	r3, [pc, #428]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 800178c:	681b      	ldr	r3, [r3, #0]
 800178e:	4a6a      	ldr	r2, [pc, #424]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 8001790:	f023 0301 	bic.w	r3, r3, #1
 8001794:	6013      	str	r3, [r2, #0]
	//Clear channel 2 flag
	DMA2->LIFCR |= (0xFUL << 18);
 8001796:	4b69      	ldr	r3, [pc, #420]	; (800193c <spi_SPI1_DMA_config+0x278>)
 8001798:	689b      	ldr	r3, [r3, #8]
 800179a:	4a68      	ldr	r2, [pc, #416]	; (800193c <spi_SPI1_DMA_config+0x278>)
 800179c:	f443 1370 	orr.w	r3, r3, #3932160	; 0x3c0000
 80017a0:	6093      	str	r3, [r2, #8]
	//Prephiral address SPI1->DR
	DMA2_Stream2->PAR = (uint32_t)&(SPI1->DR);
 80017a2:	4b65      	ldr	r3, [pc, #404]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017a4:	4a66      	ldr	r2, [pc, #408]	; (8001940 <spi_SPI1_DMA_config+0x27c>)
 80017a6:	609a      	str	r2, [r3, #8]
	//Sellect Stream2 channel 2
	DMA2_Stream2->CR |= DMA_SxCR_CHSEL_1;
 80017a8:	4b63      	ldr	r3, [pc, #396]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017aa:	681b      	ldr	r3, [r3, #0]
 80017ac:	4a62      	ldr	r2, [pc, #392]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017ae:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80017b2:	6013      	str	r3, [r2, #0]
	//Follow control
	DMA2_Stream2->CR &= ~DMA_SxCR_PFCTRL;
 80017b4:	4b60      	ldr	r3, [pc, #384]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017b6:	681b      	ldr	r3, [r3, #0]
 80017b8:	4a5f      	ldr	r2, [pc, #380]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017ba:	f023 0320 	bic.w	r3, r3, #32
 80017be:	6013      	str	r3, [r2, #0]
	//Sellect priority
	DMA2_Stream2->CR &= ~DMA_SxCR_PL;
 80017c0:	4b5d      	ldr	r3, [pc, #372]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017c2:	681b      	ldr	r3, [r3, #0]
 80017c4:	4a5c      	ldr	r2, [pc, #368]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017c6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80017ca:	6013      	str	r3, [r2, #0]
	//Mode nomal/circle
	DMA2_Stream2->CR &= ~DMA_SxCR_CIRC;
 80017cc:	4b5a      	ldr	r3, [pc, #360]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	4a59      	ldr	r2, [pc, #356]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017d2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80017d6:	6013      	str	r3, [r2, #0]
	//Increment address/memory
	DMA2_Stream2->CR &= ~DMA_SxCR_PINC;
 80017d8:	4b57      	ldr	r3, [pc, #348]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	4a56      	ldr	r2, [pc, #344]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017de:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80017e2:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR &= ~DMA_SxCR_MINC;
 80017e4:	4b54      	ldr	r3, [pc, #336]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	4a53      	ldr	r2, [pc, #332]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017ea:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80017ee:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR |= DMA_SxCR_MINC;
 80017f0:	4b51      	ldr	r3, [pc, #324]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	4a50      	ldr	r2, [pc, #320]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017f6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80017fa:	6013      	str	r3, [r2, #0]
	//Set data size
	DMA2_Stream2->CR &= ~DMA_SxCR_MSIZE;
 80017fc:	4b4e      	ldr	r3, [pc, #312]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	4a4d      	ldr	r2, [pc, #308]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 8001802:	f423 43c0 	bic.w	r3, r3, #24576	; 0x6000
 8001806:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR &= ~DMA_SxCR_PSIZE;
 8001808:	4b4b      	ldr	r3, [pc, #300]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	4a4a      	ldr	r2, [pc, #296]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 800180e:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 8001812:	6013      	str	r3, [r2, #0]
	//Direction memory to prephiral
	DMA2_Stream2->CR &= ~DMA_SxCR_DIR;
 8001814:	4b48      	ldr	r3, [pc, #288]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	4a47      	ldr	r2, [pc, #284]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 800181a:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800181e:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR |= DMA_SxCR_DIR_0;
 8001820:	4b45      	ldr	r3, [pc, #276]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 8001822:	681b      	ldr	r3, [r3, #0]
 8001824:	4a44      	ldr	r2, [pc, #272]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 8001826:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800182a:	6013      	str	r3, [r2, #0]
	//Dissable double mode
	DMA2_Stream2->CR &= ~DMA_SxCR_DBM;
 800182c:	4b42      	ldr	r3, [pc, #264]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 800182e:	681b      	ldr	r3, [r3, #0]
 8001830:	4a41      	ldr	r2, [pc, #260]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 8001832:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001836:	6013      	str	r3, [r2, #0]
	//Enable DMA channel interrupt
	DMA2_Stream2->CR &= ~DMA_SxCR_TCIE;
 8001838:	4b3f      	ldr	r3, [pc, #252]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	4a3e      	ldr	r2, [pc, #248]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 800183e:	f023 0310 	bic.w	r3, r3, #16
 8001842:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR |= DMA_SxCR_TCIE;
 8001844:	4b3c      	ldr	r3, [pc, #240]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	4a3b      	ldr	r2, [pc, #236]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 800184a:	f043 0310 	orr.w	r3, r3, #16
 800184e:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR |=   DMA_SxCR_TEIE | DMA_SxCR_DMEIE;
 8001850:	4b39      	ldr	r3, [pc, #228]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	4a38      	ldr	r2, [pc, #224]	; (8001938 <spi_SPI1_DMA_config+0x274>)
 8001856:	f043 0306 	orr.w	r3, r3, #6
 800185a:	6013      	str	r3, [r2, #0]


	/* RX DMA2 Stream0 channel 3 */
	//Dissable DMA for configuration register
	DMA2_Stream0->CR &= ~(DMA_SxCR_EN);
 800185c:	4b39      	ldr	r3, [pc, #228]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 800185e:	681b      	ldr	r3, [r3, #0]
 8001860:	4a38      	ldr	r2, [pc, #224]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001862:	f023 0301 	bic.w	r3, r3, #1
 8001866:	6013      	str	r3, [r2, #0]
	//Clear channel 2 flag
	DMA2->LIFCR &= ~(0x1FUL << 16);
 8001868:	4b34      	ldr	r3, [pc, #208]	; (800193c <spi_SPI1_DMA_config+0x278>)
 800186a:	689b      	ldr	r3, [r3, #8]
 800186c:	4a33      	ldr	r2, [pc, #204]	; (800193c <spi_SPI1_DMA_config+0x278>)
 800186e:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8001872:	6093      	str	r3, [r2, #8]
	//Prephiral address SPI1->DR
	DMA2_Stream0->PAR = (uint32_t)&(SPI1->DR);
 8001874:	4b33      	ldr	r3, [pc, #204]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001876:	4a32      	ldr	r2, [pc, #200]	; (8001940 <spi_SPI1_DMA_config+0x27c>)
 8001878:	609a      	str	r2, [r3, #8]
	//Sellect Stream2 channel 3
	DMA2_Stream0->CR |= DMA_SxCR_CHSEL_1 | DMA_SxCR_CHSEL_0;
 800187a:	4b32      	ldr	r3, [pc, #200]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	4a31      	ldr	r2, [pc, #196]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001880:	f043 63c0 	orr.w	r3, r3, #100663296	; 0x6000000
 8001884:	6013      	str	r3, [r2, #0]
	//Follow control
	DMA2_Stream0->CR &= ~DMA_SxCR_PFCTRL;
 8001886:	4b2f      	ldr	r3, [pc, #188]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001888:	681b      	ldr	r3, [r3, #0]
 800188a:	4a2e      	ldr	r2, [pc, #184]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 800188c:	f023 0320 	bic.w	r3, r3, #32
 8001890:	6013      	str	r3, [r2, #0]
	//Sellect priority
	DMA2_Stream0->CR &= ~DMA_SxCR_PL;
 8001892:	4b2c      	ldr	r3, [pc, #176]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001894:	681b      	ldr	r3, [r3, #0]
 8001896:	4a2b      	ldr	r2, [pc, #172]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001898:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800189c:	6013      	str	r3, [r2, #0]
	//Mode nomal/circle
	DMA2_Stream0->CR &= ~DMA_SxCR_CIRC;
 800189e:	4b29      	ldr	r3, [pc, #164]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	4a28      	ldr	r2, [pc, #160]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018a4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80018a8:	6013      	str	r3, [r2, #0]
	//Increment address/memory
	DMA2_Stream0->CR &= ~DMA_SxCR_PINC;
 80018aa:	4b26      	ldr	r3, [pc, #152]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018ac:	681b      	ldr	r3, [r3, #0]
 80018ae:	4a25      	ldr	r2, [pc, #148]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018b0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80018b4:	6013      	str	r3, [r2, #0]
	DMA2_Stream0->CR &= ~DMA_SxCR_MINC;
 80018b6:	4b23      	ldr	r3, [pc, #140]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	4a22      	ldr	r2, [pc, #136]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018bc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80018c0:	6013      	str	r3, [r2, #0]
	DMA2_Stream0->CR |= DMA_SxCR_MINC;
 80018c2:	4b20      	ldr	r3, [pc, #128]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	4a1f      	ldr	r2, [pc, #124]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018c8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80018cc:	6013      	str	r3, [r2, #0]
	//Set data size
	DMA2_Stream0->CR &= ~DMA_SxCR_MSIZE;
 80018ce:	4b1d      	ldr	r3, [pc, #116]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	4a1c      	ldr	r2, [pc, #112]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018d4:	f423 43c0 	bic.w	r3, r3, #24576	; 0x6000
 80018d8:	6013      	str	r3, [r2, #0]
	DMA2_Stream0->CR &= ~DMA_SxCR_PSIZE;
 80018da:	4b1a      	ldr	r3, [pc, #104]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	4a19      	ldr	r2, [pc, #100]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018e0:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 80018e4:	6013      	str	r3, [r2, #0]
	//Direction prephiral to memory
	DMA2_Stream0->CR &= ~DMA_SxCR_DIR;
 80018e6:	4b17      	ldr	r3, [pc, #92]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	4a16      	ldr	r2, [pc, #88]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018ec:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80018f0:	6013      	str	r3, [r2, #0]
	//Dissable double mode
	DMA2_Stream0->CR &= ~DMA_SxCR_DBM;
 80018f2:	4b14      	ldr	r3, [pc, #80]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018f4:	681b      	ldr	r3, [r3, #0]
 80018f6:	4a13      	ldr	r2, [pc, #76]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 80018f8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018fc:	6013      	str	r3, [r2, #0]
	//Enable DMA channel interrupt
	DMA2_Stream0->CR &= ~DMA_SxCR_TCIE;
 80018fe:	4b11      	ldr	r3, [pc, #68]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	4a10      	ldr	r2, [pc, #64]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001904:	f023 0310 	bic.w	r3, r3, #16
 8001908:	6013      	str	r3, [r2, #0]
	DMA2_Stream0->CR |= DMA_SxCR_TCIE;
 800190a:	4b0e      	ldr	r3, [pc, #56]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	4a0d      	ldr	r2, [pc, #52]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001910:	f043 0310 	orr.w	r3, r3, #16
 8001914:	6013      	str	r3, [r2, #0]
	DMA2_Stream0->CR |=   DMA_SxCR_TEIE | DMA_SxCR_DMEIE;
 8001916:	4b0b      	ldr	r3, [pc, #44]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 8001918:	681b      	ldr	r3, [r3, #0]
 800191a:	4a0a      	ldr	r2, [pc, #40]	; (8001944 <spi_SPI1_DMA_config+0x280>)
 800191c:	f043 0306 	orr.w	r3, r3, #6
 8001920:	6013      	str	r3, [r2, #0]

	//Interrupt
	NVIC_SetPriority(DMA2_Stream2_IRQn,6);
 8001922:	2106      	movs	r1, #6
 8001924:	203a      	movs	r0, #58	; 0x3a
 8001926:	f7ff fdd3 	bl	80014d0 <__NVIC_SetPriority>
	NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 800192a:	203a      	movs	r0, #58	; 0x3a
 800192c:	e00c      	b.n	8001948 <spi_SPI1_DMA_config+0x284>
 800192e:	bf00      	nop
 8001930:	40023800 	.word	0x40023800
 8001934:	40013000 	.word	0x40013000
 8001938:	40026440 	.word	0x40026440
 800193c:	40026400 	.word	0x40026400
 8001940:	4001300c 	.word	0x4001300c
 8001944:	40026410 	.word	0x40026410
 8001948:	f7ff fda6 	bl	8001498 <__NVIC_EnableIRQ>
	NVIC_SetPriority(DMA2_Stream0_IRQn,6);
 800194c:	2106      	movs	r1, #6
 800194e:	2038      	movs	r0, #56	; 0x38
 8001950:	f7ff fdbe 	bl	80014d0 <__NVIC_SetPriority>
	NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8001954:	2038      	movs	r0, #56	; 0x38
 8001956:	f7ff fd9f 	bl	8001498 <__NVIC_EnableIRQ>
	//SPI1->CRCPR = crc_pr;
	//SPI1->CR1 &= ~SPI_CR1_CRCNEXT;
	//SPI1->CR1 |= SPI_CR1_CRCEN;

	//Enable SPI
	SPI1->CR1 |= SPI_CR1_SPE;
 800195a:	4b08      	ldr	r3, [pc, #32]	; (800197c <spi_SPI1_DMA_config+0x2b8>)
 800195c:	681b      	ldr	r3, [r3, #0]
 800195e:	4a07      	ldr	r2, [pc, #28]	; (800197c <spi_SPI1_DMA_config+0x2b8>)
 8001960:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001964:	6013      	str	r3, [r2, #0]
	//Clear all flag
	temRed = SPI1->SR;
 8001966:	4b05      	ldr	r3, [pc, #20]	; (800197c <spi_SPI1_DMA_config+0x2b8>)
 8001968:	689b      	ldr	r3, [r3, #8]
 800196a:	607b      	str	r3, [r7, #4]
	SPI1->SR = 0;
 800196c:	4b03      	ldr	r3, [pc, #12]	; (800197c <spi_SPI1_DMA_config+0x2b8>)
 800196e:	2200      	movs	r2, #0
 8001970:	609a      	str	r2, [r3, #8]

}
 8001972:	bf00      	nop
 8001974:	3708      	adds	r7, #8
 8001976:	46bd      	mov	sp, r7
 8001978:	bd80      	pop	{r7, pc}
 800197a:	bf00      	nop
 800197c:	40013000 	.word	0x40013000

08001980 <__NVIC_EnableIRQ>:
{
 8001980:	b480      	push	{r7}
 8001982:	b083      	sub	sp, #12
 8001984:	af00      	add	r7, sp, #0
 8001986:	4603      	mov	r3, r0
 8001988:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800198a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800198e:	2b00      	cmp	r3, #0
 8001990:	db0b      	blt.n	80019aa <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001992:	79fb      	ldrb	r3, [r7, #7]
 8001994:	f003 021f 	and.w	r2, r3, #31
 8001998:	4906      	ldr	r1, [pc, #24]	; (80019b4 <__NVIC_EnableIRQ+0x34>)
 800199a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800199e:	095b      	lsrs	r3, r3, #5
 80019a0:	2001      	movs	r0, #1
 80019a2:	fa00 f202 	lsl.w	r2, r0, r2
 80019a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80019aa:	bf00      	nop
 80019ac:	370c      	adds	r7, #12
 80019ae:	46bd      	mov	sp, r7
 80019b0:	bc80      	pop	{r7}
 80019b2:	4770      	bx	lr
 80019b4:	e000e100 	.word	0xe000e100

080019b8 <__NVIC_SetPriority>:
{
 80019b8:	b480      	push	{r7}
 80019ba:	b083      	sub	sp, #12
 80019bc:	af00      	add	r7, sp, #0
 80019be:	4603      	mov	r3, r0
 80019c0:	6039      	str	r1, [r7, #0]
 80019c2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80019c4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019c8:	2b00      	cmp	r3, #0
 80019ca:	db0a      	blt.n	80019e2 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80019cc:	683b      	ldr	r3, [r7, #0]
 80019ce:	b2da      	uxtb	r2, r3
 80019d0:	490c      	ldr	r1, [pc, #48]	; (8001a04 <__NVIC_SetPriority+0x4c>)
 80019d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019d6:	0112      	lsls	r2, r2, #4
 80019d8:	b2d2      	uxtb	r2, r2
 80019da:	440b      	add	r3, r1
 80019dc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80019e0:	e00a      	b.n	80019f8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80019e2:	683b      	ldr	r3, [r7, #0]
 80019e4:	b2da      	uxtb	r2, r3
 80019e6:	4908      	ldr	r1, [pc, #32]	; (8001a08 <__NVIC_SetPriority+0x50>)
 80019e8:	79fb      	ldrb	r3, [r7, #7]
 80019ea:	f003 030f 	and.w	r3, r3, #15
 80019ee:	3b04      	subs	r3, #4
 80019f0:	0112      	lsls	r2, r2, #4
 80019f2:	b2d2      	uxtb	r2, r2
 80019f4:	440b      	add	r3, r1
 80019f6:	761a      	strb	r2, [r3, #24]
}
 80019f8:	bf00      	nop
 80019fa:	370c      	adds	r7, #12
 80019fc:	46bd      	mov	sp, r7
 80019fe:	bc80      	pop	{r7}
 8001a00:	4770      	bx	lr
 8001a02:	bf00      	nop
 8001a04:	e000e100 	.word	0xe000e100
 8001a08:	e000ed00 	.word	0xe000ed00

08001a0c <usart_USART1_GPIO_config>:

/*
 * @brief UART GPIO configuration
 */
void usart_USART1_GPIO_config(void)
{
 8001a0c:	b480      	push	{r7}
 8001a0e:	af00      	add	r7, sp, #0
	//PA15-TX PB7-RX
	//Enable clock GPIOA
	RCC->AHB1ENR &= ~(RCC_AHB1ENR_GPIOAEN);
 8001a10:	4b25      	ldr	r3, [pc, #148]	; (8001aa8 <usart_USART1_GPIO_config+0x9c>)
 8001a12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a14:	4a24      	ldr	r2, [pc, #144]	; (8001aa8 <usart_USART1_GPIO_config+0x9c>)
 8001a16:	f023 0301 	bic.w	r3, r3, #1
 8001a1a:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOAEN);
 8001a1c:	4b22      	ldr	r3, [pc, #136]	; (8001aa8 <usart_USART1_GPIO_config+0x9c>)
 8001a1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a20:	4a21      	ldr	r2, [pc, #132]	; (8001aa8 <usart_USART1_GPIO_config+0x9c>)
 8001a22:	f043 0301 	orr.w	r3, r3, #1
 8001a26:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR &= ~(RCC_AHB1ENR_GPIOBEN);
 8001a28:	4b1f      	ldr	r3, [pc, #124]	; (8001aa8 <usart_USART1_GPIO_config+0x9c>)
 8001a2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a2c:	4a1e      	ldr	r2, [pc, #120]	; (8001aa8 <usart_USART1_GPIO_config+0x9c>)
 8001a2e:	f023 0302 	bic.w	r3, r3, #2
 8001a32:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOBEN);
 8001a34:	4b1c      	ldr	r3, [pc, #112]	; (8001aa8 <usart_USART1_GPIO_config+0x9c>)
 8001a36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a38:	4a1b      	ldr	r2, [pc, #108]	; (8001aa8 <usart_USART1_GPIO_config+0x9c>)
 8001a3a:	f043 0302 	orr.w	r3, r3, #2
 8001a3e:	6313      	str	r3, [r2, #48]	; 0x30
	//Config mode Alternate
	GPIOA->MODER &= ~(GPIO_MODER_MODE15);
 8001a40:	4b1a      	ldr	r3, [pc, #104]	; (8001aac <usart_USART1_GPIO_config+0xa0>)
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	4a19      	ldr	r2, [pc, #100]	; (8001aac <usart_USART1_GPIO_config+0xa0>)
 8001a46:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 8001a4a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= GPIO_MODER_MODE15_1;
 8001a4c:	4b17      	ldr	r3, [pc, #92]	; (8001aac <usart_USART1_GPIO_config+0xa0>)
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	4a16      	ldr	r2, [pc, #88]	; (8001aac <usart_USART1_GPIO_config+0xa0>)
 8001a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001a56:	6013      	str	r3, [r2, #0]
	GPIOB->MODER &= ~(GPIO_MODER_MODE7);
 8001a58:	4b15      	ldr	r3, [pc, #84]	; (8001ab0 <usart_USART1_GPIO_config+0xa4>)
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	4a14      	ldr	r2, [pc, #80]	; (8001ab0 <usart_USART1_GPIO_config+0xa4>)
 8001a5e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001a62:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= GPIO_MODER_MODE7_1;
 8001a64:	4b12      	ldr	r3, [pc, #72]	; (8001ab0 <usart_USART1_GPIO_config+0xa4>)
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	4a11      	ldr	r2, [pc, #68]	; (8001ab0 <usart_USART1_GPIO_config+0xa4>)
 8001a6a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001a6e:	6013      	str	r3, [r2, #0]
	//Speed max
	GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED15_1 | GPIO_OSPEEDR_OSPEED15_0;
 8001a70:	4b0e      	ldr	r3, [pc, #56]	; (8001aac <usart_USART1_GPIO_config+0xa0>)
 8001a72:	689b      	ldr	r3, [r3, #8]
 8001a74:	4a0d      	ldr	r2, [pc, #52]	; (8001aac <usart_USART1_GPIO_config+0xa0>)
 8001a76:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8001a7a:	6093      	str	r3, [r2, #8]
	//GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED10_1 | GPIO_OSPEEDR_OSPEED10_0;
	GPIOB->OSPEEDR |= GPIO_OSPEEDR_OSPEED7_1 | GPIO_OSPEEDR_OSPEED7_0;
 8001a7c:	4b0c      	ldr	r3, [pc, #48]	; (8001ab0 <usart_USART1_GPIO_config+0xa4>)
 8001a7e:	689b      	ldr	r3, [r3, #8]
 8001a80:	4a0b      	ldr	r2, [pc, #44]	; (8001ab0 <usart_USART1_GPIO_config+0xa4>)
 8001a82:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001a86:	6093      	str	r3, [r2, #8]
	//MAP PA9 and PA10 to USART1
	GPIOA->AFR[1] |= GPIO_AFRH_AFRH7_0 | GPIO_AFRH_AFRH7_1 | GPIO_AFRH_AFRH7_2;
 8001a88:	4b08      	ldr	r3, [pc, #32]	; (8001aac <usart_USART1_GPIO_config+0xa0>)
 8001a8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a8c:	4a07      	ldr	r2, [pc, #28]	; (8001aac <usart_USART1_GPIO_config+0xa0>)
 8001a8e:	f043 43e0 	orr.w	r3, r3, #1879048192	; 0x70000000
 8001a92:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[0] |= GPIO_AFRH_AFRH7_0 | GPIO_AFRH_AFRH7_1 | GPIO_AFRH_AFRH7_2;
 8001a94:	4b06      	ldr	r3, [pc, #24]	; (8001ab0 <usart_USART1_GPIO_config+0xa4>)
 8001a96:	6a1b      	ldr	r3, [r3, #32]
 8001a98:	4a05      	ldr	r2, [pc, #20]	; (8001ab0 <usart_USART1_GPIO_config+0xa4>)
 8001a9a:	f043 43e0 	orr.w	r3, r3, #1879048192	; 0x70000000
 8001a9e:	6213      	str	r3, [r2, #32]
}
 8001aa0:	bf00      	nop
 8001aa2:	46bd      	mov	sp, r7
 8001aa4:	bc80      	pop	{r7}
 8001aa6:	4770      	bx	lr
 8001aa8:	40023800 	.word	0x40023800
 8001aac:	40020000 	.word	0x40020000
 8001ab0:	40020400 	.word	0x40020400

08001ab4 <usart_USART1_config>:

/*
 * @brief UART configuration
 */
void usart_USART1_config(void)
{
 8001ab4:	b480      	push	{r7}
 8001ab6:	af00      	add	r7, sp, #0
	//Disable all flag
	USART1->SR = 0;
 8001ab8:	4b30      	ldr	r3, [pc, #192]	; (8001b7c <usart_USART1_config+0xc8>)
 8001aba:	2200      	movs	r2, #0
 8001abc:	601a      	str	r2, [r3, #0]
	//Enable clock for usart1
	RCC->APB2ENR &= ~RCC_APB2ENR_USART1EN;
 8001abe:	4b30      	ldr	r3, [pc, #192]	; (8001b80 <usart_USART1_config+0xcc>)
 8001ac0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ac2:	4a2f      	ldr	r2, [pc, #188]	; (8001b80 <usart_USART1_config+0xcc>)
 8001ac4:	f023 0310 	bic.w	r3, r3, #16
 8001ac8:	6453      	str	r3, [r2, #68]	; 0x44
	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001aca:	4b2d      	ldr	r3, [pc, #180]	; (8001b80 <usart_USART1_config+0xcc>)
 8001acc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ace:	4a2c      	ldr	r2, [pc, #176]	; (8001b80 <usart_USART1_config+0xcc>)
 8001ad0:	f043 0310 	orr.w	r3, r3, #16
 8001ad4:	6453      	str	r3, [r2, #68]	; 0x44
	//Enable USART
	USART1->CR1 &= ~USART_CR1_UE;
 8001ad6:	4b29      	ldr	r3, [pc, #164]	; (8001b7c <usart_USART1_config+0xc8>)
 8001ad8:	68db      	ldr	r3, [r3, #12]
 8001ada:	4a28      	ldr	r2, [pc, #160]	; (8001b7c <usart_USART1_config+0xc8>)
 8001adc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001ae0:	60d3      	str	r3, [r2, #12]
	USART1->CR1 |= USART_CR1_UE;
 8001ae2:	4b26      	ldr	r3, [pc, #152]	; (8001b7c <usart_USART1_config+0xc8>)
 8001ae4:	68db      	ldr	r3, [r3, #12]
 8001ae6:	4a25      	ldr	r2, [pc, #148]	; (8001b7c <usart_USART1_config+0xc8>)
 8001ae8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001aec:	60d3      	str	r3, [r2, #12]
	//Dissable parity control
	USART1->CR1 &= ~(USART_CR1_PCE);
 8001aee:	4b23      	ldr	r3, [pc, #140]	; (8001b7c <usart_USART1_config+0xc8>)
 8001af0:	68db      	ldr	r3, [r3, #12]
 8001af2:	4a22      	ldr	r2, [pc, #136]	; (8001b7c <usart_USART1_config+0xc8>)
 8001af4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001af8:	60d3      	str	r3, [r2, #12]
	//Word length 8 bit
	USART1->CR1 &= ~(USART_CR1_M);
 8001afa:	4b20      	ldr	r3, [pc, #128]	; (8001b7c <usart_USART1_config+0xc8>)
 8001afc:	68db      	ldr	r3, [r3, #12]
 8001afe:	4a1f      	ldr	r2, [pc, #124]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b00:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001b04:	60d3      	str	r3, [r2, #12]
	//Stopbit to 1
	USART1->CR2 &= ~(USART_CR2_STOP);
 8001b06:	4b1d      	ldr	r3, [pc, #116]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b08:	691b      	ldr	r3, [r3, #16]
 8001b0a:	4a1c      	ldr	r2, [pc, #112]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b0c:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001b10:	6113      	str	r3, [r2, #16]
	//Dissable HW folow control
	USART1->CR3 &= ~(USART_CR3_RTSE);
 8001b12:	4b1a      	ldr	r3, [pc, #104]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b14:	695b      	ldr	r3, [r3, #20]
 8001b16:	4a19      	ldr	r2, [pc, #100]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b18:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001b1c:	6153      	str	r3, [r2, #20]
	USART1->CR3 &= ~(USART_CR3_CTSE);
 8001b1e:	4b17      	ldr	r3, [pc, #92]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b20:	695b      	ldr	r3, [r3, #20]
 8001b22:	4a16      	ldr	r2, [pc, #88]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b24:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001b28:	6153      	str	r3, [r2, #20]
	//Dissable smart care
	USART1->CR3 &= ~(USART_CR3_SCEN);
 8001b2a:	4b14      	ldr	r3, [pc, #80]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b2c:	695b      	ldr	r3, [r3, #20]
 8001b2e:	4a13      	ldr	r2, [pc, #76]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b30:	f023 0320 	bic.w	r3, r3, #32
 8001b34:	6153      	str	r3, [r2, #20]
	//Set baurate 115200
	USART1->BRR |= 54 << 4 | 4 << 0;
 8001b36:	4b11      	ldr	r3, [pc, #68]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b38:	689b      	ldr	r3, [r3, #8]
 8001b3a:	4a10      	ldr	r2, [pc, #64]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b3c:	f443 7359 	orr.w	r3, r3, #868	; 0x364
 8001b40:	6093      	str	r3, [r2, #8]
	//Clear something clk and lin
	USART1->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN );
 8001b42:	4b0e      	ldr	r3, [pc, #56]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b44:	691b      	ldr	r3, [r3, #16]
 8001b46:	4a0d      	ldr	r2, [pc, #52]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b48:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8001b4c:	6113      	str	r3, [r2, #16]
	USART1->CR3 &= ~(USART_CR3_HDSEL | USART_CR3_IREN);
 8001b4e:	4b0b      	ldr	r3, [pc, #44]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b50:	695b      	ldr	r3, [r3, #20]
 8001b52:	4a0a      	ldr	r2, [pc, #40]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b54:	f023 030a 	bic.w	r3, r3, #10
 8001b58:	6153      	str	r3, [r2, #20]

	//Enable transmit
	USART1->CR1 |= USART_CR1_TE;
 8001b5a:	4b08      	ldr	r3, [pc, #32]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b5c:	68db      	ldr	r3, [r3, #12]
 8001b5e:	4a07      	ldr	r2, [pc, #28]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b60:	f043 0308 	orr.w	r3, r3, #8
 8001b64:	60d3      	str	r3, [r2, #12]
	//Enable receive
	USART1->CR1 |= USART_CR1_RE;
 8001b66:	4b05      	ldr	r3, [pc, #20]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b68:	68db      	ldr	r3, [r3, #12]
 8001b6a:	4a04      	ldr	r2, [pc, #16]	; (8001b7c <usart_USART1_config+0xc8>)
 8001b6c:	f043 0304 	orr.w	r3, r3, #4
 8001b70:	60d3      	str	r3, [r2, #12]
	//USART1->SR &= ~(USART_SR_TC);
}
 8001b72:	bf00      	nop
 8001b74:	46bd      	mov	sp, r7
 8001b76:	bc80      	pop	{r7}
 8001b78:	4770      	bx	lr
 8001b7a:	bf00      	nop
 8001b7c:	40011000 	.word	0x40011000
 8001b80:	40023800 	.word	0x40023800

08001b84 <usart_USART1_transmit>:

/*
 * @brief UART1 transmit
 */
_Bool usart_USART1_transmit(uint8_t *data,uint8_t len, uint32_t timeOut)
{
 8001b84:	b580      	push	{r7, lr}
 8001b86:	b086      	sub	sp, #24
 8001b88:	af00      	add	r7, sp, #0
 8001b8a:	60f8      	str	r0, [r7, #12]
 8001b8c:	460b      	mov	r3, r1
 8001b8e:	607a      	str	r2, [r7, #4]
 8001b90:	72fb      	strb	r3, [r7, #11]
	//Wait on TXE start transmit
	//Write to DR as TXE flag is high
	uint8_t dataIdx = 0;
 8001b92:	2300      	movs	r3, #0
 8001b94:	75fb      	strb	r3, [r7, #23]
	uint32_t startTick = rcc_msGetTicks();
 8001b96:	f7ff fc51 	bl	800143c <rcc_msGetTicks>
 8001b9a:	6138      	str	r0, [r7, #16]
	while(dataIdx<len)
 8001b9c:	e019      	b.n	8001bd2 <usart_USART1_transmit+0x4e>
	{
		if(USART1->SR & USART_SR_TXE) //Tx buffer empty
 8001b9e:	4b1a      	ldr	r3, [pc, #104]	; (8001c08 <usart_USART1_transmit+0x84>)
 8001ba0:	681b      	ldr	r3, [r3, #0]
 8001ba2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001ba6:	2b00      	cmp	r3, #0
 8001ba8:	d009      	beq.n	8001bbe <usart_USART1_transmit+0x3a>
		{
			USART1->DR = data[dataIdx];
 8001baa:	7dfb      	ldrb	r3, [r7, #23]
 8001bac:	68fa      	ldr	r2, [r7, #12]
 8001bae:	4413      	add	r3, r2
 8001bb0:	781a      	ldrb	r2, [r3, #0]
 8001bb2:	4b15      	ldr	r3, [pc, #84]	; (8001c08 <usart_USART1_transmit+0x84>)
 8001bb4:	605a      	str	r2, [r3, #4]
			dataIdx++;
 8001bb6:	7dfb      	ldrb	r3, [r7, #23]
 8001bb8:	3301      	adds	r3, #1
 8001bba:	75fb      	strb	r3, [r7, #23]
 8001bbc:	e009      	b.n	8001bd2 <usart_USART1_transmit+0x4e>
		}
		else
		{
			if((rcc_msGetTicks() - startTick) > timeOut) return false;
 8001bbe:	f7ff fc3d 	bl	800143c <rcc_msGetTicks>
 8001bc2:	4602      	mov	r2, r0
 8001bc4:	693b      	ldr	r3, [r7, #16]
 8001bc6:	1ad3      	subs	r3, r2, r3
 8001bc8:	687a      	ldr	r2, [r7, #4]
 8001bca:	429a      	cmp	r2, r3
 8001bcc:	d201      	bcs.n	8001bd2 <usart_USART1_transmit+0x4e>
 8001bce:	2300      	movs	r3, #0
 8001bd0:	e015      	b.n	8001bfe <usart_USART1_transmit+0x7a>
	while(dataIdx<len)
 8001bd2:	7dfa      	ldrb	r2, [r7, #23]
 8001bd4:	7afb      	ldrb	r3, [r7, #11]
 8001bd6:	429a      	cmp	r2, r3
 8001bd8:	d3e1      	bcc.n	8001b9e <usart_USART1_transmit+0x1a>
		}
	}
	//Wait for busy flag
	while(USART1->SR & USART_SR_TC != 1)
 8001bda:	e009      	b.n	8001bf0 <usart_USART1_transmit+0x6c>
	{
		if((rcc_msGetTicks() - startTick) > timeOut) return false;
 8001bdc:	f7ff fc2e 	bl	800143c <rcc_msGetTicks>
 8001be0:	4602      	mov	r2, r0
 8001be2:	693b      	ldr	r3, [r7, #16]
 8001be4:	1ad3      	subs	r3, r2, r3
 8001be6:	687a      	ldr	r2, [r7, #4]
 8001be8:	429a      	cmp	r2, r3
 8001bea:	d201      	bcs.n	8001bf0 <usart_USART1_transmit+0x6c>
 8001bec:	2300      	movs	r3, #0
 8001bee:	e006      	b.n	8001bfe <usart_USART1_transmit+0x7a>
	while(USART1->SR & USART_SR_TC != 1)
 8001bf0:	4b05      	ldr	r3, [pc, #20]	; (8001c08 <usart_USART1_transmit+0x84>)
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	f003 0301 	and.w	r3, r3, #1
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	d1ef      	bne.n	8001bdc <usart_USART1_transmit+0x58>
	}
	//USART1->SR &= ~(USART_SR_TC);
	return true;
 8001bfc:	2301      	movs	r3, #1
}
 8001bfe:	4618      	mov	r0, r3
 8001c00:	3718      	adds	r7, #24
 8001c02:	46bd      	mov	sp, r7
 8001c04:	bd80      	pop	{r7, pc}
 8001c06:	bf00      	nop
 8001c08:	40011000 	.word	0x40011000

08001c0c <usart_USART1_DMA_config>:

/*
 * @brief UART1 DMA Configuratin
 */
void usart_USART1_DMA_config(void)
{
 8001c0c:	b580      	push	{r7, lr}
 8001c0e:	af00      	add	r7, sp, #0
	//Enable UART DMA in UART
	USART1->CR3 |= USART_CR3_DMAR | USART_CR3_DMAT;
 8001c10:	4b79      	ldr	r3, [pc, #484]	; (8001df8 <usart_USART1_DMA_config+0x1ec>)
 8001c12:	695b      	ldr	r3, [r3, #20]
 8001c14:	4a78      	ldr	r2, [pc, #480]	; (8001df8 <usart_USART1_DMA_config+0x1ec>)
 8001c16:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001c1a:	6153      	str	r3, [r2, #20]
	//Enable DMA2 clock
	RCC->AHB1ENR &= ~RCC_AHB1ENR_DMA2EN;
 8001c1c:	4b77      	ldr	r3, [pc, #476]	; (8001dfc <usart_USART1_DMA_config+0x1f0>)
 8001c1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c20:	4a76      	ldr	r2, [pc, #472]	; (8001dfc <usart_USART1_DMA_config+0x1f0>)
 8001c22:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8001c26:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_DMA2EN;
 8001c28:	4b74      	ldr	r3, [pc, #464]	; (8001dfc <usart_USART1_DMA_config+0x1f0>)
 8001c2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c2c:	4a73      	ldr	r2, [pc, #460]	; (8001dfc <usart_USART1_DMA_config+0x1f0>)
 8001c2e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001c32:	6313      	str	r3, [r2, #48]	; 0x30
	//**TX channel 4 configuration -CH4 stream 7 DMA2
	//Dissable DMA for configuration register
	DMA2_Stream7->CR &= ~DMA_SxCR_EN;
 8001c34:	4b72      	ldr	r3, [pc, #456]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c36:	681b      	ldr	r3, [r3, #0]
 8001c38:	4a71      	ldr	r2, [pc, #452]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c3a:	f023 0301 	bic.w	r3, r3, #1
 8001c3e:	6013      	str	r3, [r2, #0]
	//Clear channel 4 flag
	DMA2->HISR &= ~(0xFUL << 24);
 8001c40:	4b70      	ldr	r3, [pc, #448]	; (8001e04 <usart_USART1_DMA_config+0x1f8>)
 8001c42:	685b      	ldr	r3, [r3, #4]
 8001c44:	4a6f      	ldr	r2, [pc, #444]	; (8001e04 <usart_USART1_DMA_config+0x1f8>)
 8001c46:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8001c4a:	6053      	str	r3, [r2, #4]
	//Prephiral address UART1->DR
	DMA2_Stream7->PAR = (uint32_t)&(USART1->DR);
 8001c4c:	4b6c      	ldr	r3, [pc, #432]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c4e:	4a6e      	ldr	r2, [pc, #440]	; (8001e08 <usart_USART1_DMA_config+0x1fc>)
 8001c50:	609a      	str	r2, [r3, #8]
	//Sellect chanel 4 DMA2 stream7
	DMA2_Stream7->CR |= DMA_SxCR_CHSEL_2;
 8001c52:	4b6b      	ldr	r3, [pc, #428]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	4a6a      	ldr	r2, [pc, #424]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c58:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8001c5c:	6013      	str	r3, [r2, #0]
	//Folow control
	DMA2_Stream7->CR &= ~DMA_SxCR_PFCTRL;
 8001c5e:	4b68      	ldr	r3, [pc, #416]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	4a67      	ldr	r2, [pc, #412]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c64:	f023 0320 	bic.w	r3, r3, #32
 8001c68:	6013      	str	r3, [r2, #0]
	//Sellect priority
	DMA2_Stream7->CR &= ~DMA_SxCR_PL;
 8001c6a:	4b65      	ldr	r3, [pc, #404]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c6c:	681b      	ldr	r3, [r3, #0]
 8001c6e:	4a64      	ldr	r2, [pc, #400]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c70:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001c74:	6013      	str	r3, [r2, #0]
	//DMA2_Stream7->CR |= DMA_SxCR_PL_1;
	//
	//Mode nomal/circular
	DMA2_Stream7->CR &= ~DMA_SxCR_CIRC;
 8001c76:	4b62      	ldr	r3, [pc, #392]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c78:	681b      	ldr	r3, [r3, #0]
 8001c7a:	4a61      	ldr	r2, [pc, #388]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c7c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001c80:	6013      	str	r3, [r2, #0]
	//Memory/Prephiral increment
	DMA2_Stream7->CR &= ~DMA_SxCR_PINC;
 8001c82:	4b5f      	ldr	r3, [pc, #380]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	4a5e      	ldr	r2, [pc, #376]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c88:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001c8c:	6013      	str	r3, [r2, #0]
	DMA2_Stream7->CR &= ~DMA_SxCR_MINC;
 8001c8e:	4b5c      	ldr	r3, [pc, #368]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c90:	681b      	ldr	r3, [r3, #0]
 8001c92:	4a5b      	ldr	r2, [pc, #364]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c94:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001c98:	6013      	str	r3, [r2, #0]
	DMA2_Stream7->CR |= DMA_SxCR_MINC;
 8001c9a:	4b59      	ldr	r3, [pc, #356]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	4a58      	ldr	r2, [pc, #352]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001ca0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001ca4:	6013      	str	r3, [r2, #0]
	//Set data size
	DMA2_Stream7->CR &= ~DMA_SxCR_MSIZE;
 8001ca6:	4b56      	ldr	r3, [pc, #344]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001ca8:	681b      	ldr	r3, [r3, #0]
 8001caa:	4a55      	ldr	r2, [pc, #340]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cac:	f423 43c0 	bic.w	r3, r3, #24576	; 0x6000
 8001cb0:	6013      	str	r3, [r2, #0]
	DMA2_Stream7->CR &= ~DMA_SxCR_PSIZE;
 8001cb2:	4b53      	ldr	r3, [pc, #332]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	4a52      	ldr	r2, [pc, #328]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cb8:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 8001cbc:	6013      	str	r3, [r2, #0]
	//Dirrection memory TO prephireal
	DMA2_Stream7->CR &= ~DMA_SxCR_DIR;
 8001cbe:	4b50      	ldr	r3, [pc, #320]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cc0:	681b      	ldr	r3, [r3, #0]
 8001cc2:	4a4f      	ldr	r2, [pc, #316]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cc4:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8001cc8:	6013      	str	r3, [r2, #0]
	DMA2_Stream7->CR |= DMA_SxCR_DIR_0;
 8001cca:	4b4d      	ldr	r3, [pc, #308]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001ccc:	681b      	ldr	r3, [r3, #0]
 8001cce:	4a4c      	ldr	r2, [pc, #304]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cd0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001cd4:	6013      	str	r3, [r2, #0]
	//Dissable dobble mode
	DMA2_Stream7->CR &= ~DMA_SxCR_DBM;
 8001cd6:	4b4a      	ldr	r3, [pc, #296]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cd8:	681b      	ldr	r3, [r3, #0]
 8001cda:	4a49      	ldr	r2, [pc, #292]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cdc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001ce0:	6013      	str	r3, [r2, #0]
	//Enalbe DMA channel interrupt
	DMA2_Stream7->CR &= ~DMA_SxCR_TCIE;
 8001ce2:	4b47      	ldr	r3, [pc, #284]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001ce4:	681b      	ldr	r3, [r3, #0]
 8001ce6:	4a46      	ldr	r2, [pc, #280]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001ce8:	f023 0310 	bic.w	r3, r3, #16
 8001cec:	6013      	str	r3, [r2, #0]
	DMA2_Stream7->CR |= DMA_SxCR_TCIE;
 8001cee:	4b44      	ldr	r3, [pc, #272]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	4a43      	ldr	r2, [pc, #268]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cf4:	f043 0310 	orr.w	r3, r3, #16
 8001cf8:	6013      	str	r3, [r2, #0]
	DMA2_Stream7->CR |=   DMA_SxCR_TEIE | DMA_SxCR_DMEIE;
 8001cfa:	4b41      	ldr	r3, [pc, #260]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	4a40      	ldr	r2, [pc, #256]	; (8001e00 <usart_USART1_DMA_config+0x1f4>)
 8001d00:	f043 0306 	orr.w	r3, r3, #6
 8001d04:	6013      	str	r3, [r2, #0]
	//DMA2_Stream7->CR |= DMA_SxCR_EN;

	//**RX chanel 4 configuratin -CH5 stream 5 DMA2

	//Dissable DMA for configuratio register
	DMA2_Stream5->CR &= ~DMA_SxCR_EN;
 8001d06:	4b41      	ldr	r3, [pc, #260]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	4a40      	ldr	r2, [pc, #256]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d0c:	f023 0301 	bic.w	r3, r3, #1
 8001d10:	6013      	str	r3, [r2, #0]
	//Clear channel 4 flag
	DMA2->HISR &= ~(0xFUL << 8);
 8001d12:	4b3c      	ldr	r3, [pc, #240]	; (8001e04 <usart_USART1_DMA_config+0x1f8>)
 8001d14:	685b      	ldr	r3, [r3, #4]
 8001d16:	4a3b      	ldr	r2, [pc, #236]	; (8001e04 <usart_USART1_DMA_config+0x1f8>)
 8001d18:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001d1c:	6053      	str	r3, [r2, #4]
	//Prephiral address UART1->DR
	DMA2_Stream5->PAR = (uint32_t)&(USART1->DR);
 8001d1e:	4b3b      	ldr	r3, [pc, #236]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d20:	4a39      	ldr	r2, [pc, #228]	; (8001e08 <usart_USART1_DMA_config+0x1fc>)
 8001d22:	609a      	str	r2, [r3, #8]
	//Sellect chanel 4 DMA2 stream7
	DMA2_Stream5->CR &= ~DMA_SxCR_CHSEL;
 8001d24:	4b39      	ldr	r3, [pc, #228]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	4a38      	ldr	r2, [pc, #224]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d2a:	f023 6360 	bic.w	r3, r3, #234881024	; 0xe000000
 8001d2e:	6013      	str	r3, [r2, #0]
	DMA2_Stream5->CR |= DMA_SxCR_CHSEL_2;
 8001d30:	4b36      	ldr	r3, [pc, #216]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d32:	681b      	ldr	r3, [r3, #0]
 8001d34:	4a35      	ldr	r2, [pc, #212]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d36:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8001d3a:	6013      	str	r3, [r2, #0]
	//Folow control
	DMA2_Stream5->CR &= ~DMA_SxCR_PFCTRL;
 8001d3c:	4b33      	ldr	r3, [pc, #204]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d3e:	681b      	ldr	r3, [r3, #0]
 8001d40:	4a32      	ldr	r2, [pc, #200]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d42:	f023 0320 	bic.w	r3, r3, #32
 8001d46:	6013      	str	r3, [r2, #0]
	//Sellect priority
	DMA2_Stream5->CR &= ~DMA_SxCR_PL;
 8001d48:	4b30      	ldr	r3, [pc, #192]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d4a:	681b      	ldr	r3, [r3, #0]
 8001d4c:	4a2f      	ldr	r2, [pc, #188]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d4e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001d52:	6013      	str	r3, [r2, #0]
	DMA2_Stream5->CR |= DMA_SxCR_PL_1;
 8001d54:	4b2d      	ldr	r3, [pc, #180]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d56:	681b      	ldr	r3, [r3, #0]
 8001d58:	4a2c      	ldr	r2, [pc, #176]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d5a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001d5e:	6013      	str	r3, [r2, #0]
	//
	//Mode nomal/circular
	DMA2_Stream5->CR &= ~DMA_SxCR_CIRC;
 8001d60:	4b2a      	ldr	r3, [pc, #168]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d62:	681b      	ldr	r3, [r3, #0]
 8001d64:	4a29      	ldr	r2, [pc, #164]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d66:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001d6a:	6013      	str	r3, [r2, #0]
	//Memory/Prephiral increment
	DMA2_Stream5->CR &= ~DMA_SxCR_PINC;
 8001d6c:	4b27      	ldr	r3, [pc, #156]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d6e:	681b      	ldr	r3, [r3, #0]
 8001d70:	4a26      	ldr	r2, [pc, #152]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d72:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001d76:	6013      	str	r3, [r2, #0]
	DMA2_Stream5->CR &= ~DMA_SxCR_MINC;
 8001d78:	4b24      	ldr	r3, [pc, #144]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	4a23      	ldr	r2, [pc, #140]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d7e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001d82:	6013      	str	r3, [r2, #0]
	DMA2_Stream5->CR |= DMA_SxCR_MINC;
 8001d84:	4b21      	ldr	r3, [pc, #132]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d86:	681b      	ldr	r3, [r3, #0]
 8001d88:	4a20      	ldr	r2, [pc, #128]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d8a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001d8e:	6013      	str	r3, [r2, #0]
	//Set data size
	DMA2_Stream5->CR &= ~DMA_SxCR_MSIZE;
 8001d90:	4b1e      	ldr	r3, [pc, #120]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d92:	681b      	ldr	r3, [r3, #0]
 8001d94:	4a1d      	ldr	r2, [pc, #116]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d96:	f423 43c0 	bic.w	r3, r3, #24576	; 0x6000
 8001d9a:	6013      	str	r3, [r2, #0]
	DMA2_Stream5->CR &= ~DMA_SxCR_PSIZE;
 8001d9c:	4b1b      	ldr	r3, [pc, #108]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001d9e:	681b      	ldr	r3, [r3, #0]
 8001da0:	4a1a      	ldr	r2, [pc, #104]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001da2:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 8001da6:	6013      	str	r3, [r2, #0]
	//Dirrection prephireal to memory
	DMA2_Stream5->CR &= ~DMA_SxCR_DIR;
 8001da8:	4b18      	ldr	r3, [pc, #96]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001daa:	681b      	ldr	r3, [r3, #0]
 8001dac:	4a17      	ldr	r2, [pc, #92]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001dae:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8001db2:	6013      	str	r3, [r2, #0]
	//Dissable dobble mode
	DMA2_Stream5->CR &= ~DMA_SxCR_DBM;
 8001db4:	4b15      	ldr	r3, [pc, #84]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	4a14      	ldr	r2, [pc, #80]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001dba:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001dbe:	6013      	str	r3, [r2, #0]
	//Enalbe DMA channel interrupt
	DMA2_Stream5->CR &= ~(0xFUL << 1);
 8001dc0:	4b12      	ldr	r3, [pc, #72]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	4a11      	ldr	r2, [pc, #68]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001dc6:	f023 031e 	bic.w	r3, r3, #30
 8001dca:	6013      	str	r3, [r2, #0]
	DMA2_Stream5->CR |= (0xBUL << 1);
 8001dcc:	4b0f      	ldr	r3, [pc, #60]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001dce:	681b      	ldr	r3, [r3, #0]
 8001dd0:	4a0e      	ldr	r2, [pc, #56]	; (8001e0c <usart_USART1_DMA_config+0x200>)
 8001dd2:	f043 0316 	orr.w	r3, r3, #22
 8001dd6:	6013      	str	r3, [r2, #0]

	//Enable DMA interrupt

	NVIC_SetPriority(DMA2_Stream7_IRQn,6);
 8001dd8:	2106      	movs	r1, #6
 8001dda:	2046      	movs	r0, #70	; 0x46
 8001ddc:	f7ff fdec 	bl	80019b8 <__NVIC_SetPriority>
	NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 8001de0:	2046      	movs	r0, #70	; 0x46
 8001de2:	f7ff fdcd 	bl	8001980 <__NVIC_EnableIRQ>
	NVIC_SetPriority(DMA2_Stream5_IRQn,6);
 8001de6:	2106      	movs	r1, #6
 8001de8:	2044      	movs	r0, #68	; 0x44
 8001dea:	f7ff fde5 	bl	80019b8 <__NVIC_SetPriority>
	NVIC_EnableIRQ(DMA2_Stream5_IRQn);
 8001dee:	2044      	movs	r0, #68	; 0x44
 8001df0:	f7ff fdc6 	bl	8001980 <__NVIC_EnableIRQ>

}
 8001df4:	bf00      	nop
 8001df6:	bd80      	pop	{r7, pc}
 8001df8:	40011000 	.word	0x40011000
 8001dfc:	40023800 	.word	0x40023800
 8001e00:	400264b8 	.word	0x400264b8
 8001e04:	40026400 	.word	0x40026400
 8001e08:	40011004 	.word	0x40011004
 8001e0c:	40026488 	.word	0x40026488

08001e10 <usart_USART1_DMA_transmit>:

/*
 * @brief UART1 DMA Transmit
 */
void usart_USART1_DMA_transmit(uint8_t *data,uint8_t len)
{
 8001e10:	b480      	push	{r7}
 8001e12:	b083      	sub	sp, #12
 8001e14:	af00      	add	r7, sp, #0
 8001e16:	6078      	str	r0, [r7, #4]
 8001e18:	460b      	mov	r3, r1
 8001e1a:	70fb      	strb	r3, [r7, #3]
	//Clear channel 4 flag
	DMA2->HIFCR |= 0xFUL << 24;
 8001e1c:	4b0b      	ldr	r3, [pc, #44]	; (8001e4c <usart_USART1_DMA_transmit+0x3c>)
 8001e1e:	68db      	ldr	r3, [r3, #12]
 8001e20:	4a0a      	ldr	r2, [pc, #40]	; (8001e4c <usart_USART1_DMA_transmit+0x3c>)
 8001e22:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8001e26:	60d3      	str	r3, [r2, #12]
	//Memory address
	DMA2_Stream7->M0AR = (uint32_t)data;
 8001e28:	4a09      	ldr	r2, [pc, #36]	; (8001e50 <usart_USART1_DMA_transmit+0x40>)
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	60d3      	str	r3, [r2, #12]
	//No, of tranfer
	DMA2_Stream7->NDTR = len;
 8001e2e:	4a08      	ldr	r2, [pc, #32]	; (8001e50 <usart_USART1_DMA_transmit+0x40>)
 8001e30:	78fb      	ldrb	r3, [r7, #3]
 8001e32:	6053      	str	r3, [r2, #4]
	//Enable DMA for configuratio register
	DMA2_Stream7->CR |= DMA_SxCR_EN;
 8001e34:	4b06      	ldr	r3, [pc, #24]	; (8001e50 <usart_USART1_DMA_transmit+0x40>)
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	4a05      	ldr	r2, [pc, #20]	; (8001e50 <usart_USART1_DMA_transmit+0x40>)
 8001e3a:	f043 0301 	orr.w	r3, r3, #1
 8001e3e:	6013      	str	r3, [r2, #0]

}
 8001e40:	bf00      	nop
 8001e42:	370c      	adds	r7, #12
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bc80      	pop	{r7}
 8001e48:	4770      	bx	lr
 8001e4a:	bf00      	nop
 8001e4c:	40026400 	.word	0x40026400
 8001e50:	400264b8 	.word	0x400264b8

08001e54 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001e54:	480d      	ldr	r0, [pc, #52]	; (8001e8c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001e56:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8001e58:	f7ff f84b 	bl	8000ef2 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001e5c:	480c      	ldr	r0, [pc, #48]	; (8001e90 <LoopForever+0x6>)
  ldr r1, =_edata
 8001e5e:	490d      	ldr	r1, [pc, #52]	; (8001e94 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001e60:	4a0d      	ldr	r2, [pc, #52]	; (8001e98 <LoopForever+0xe>)
  movs r3, #0
 8001e62:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001e64:	e002      	b.n	8001e6c <LoopCopyDataInit>

08001e66 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001e66:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001e68:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001e6a:	3304      	adds	r3, #4

08001e6c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001e6c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001e6e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001e70:	d3f9      	bcc.n	8001e66 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001e72:	4a0a      	ldr	r2, [pc, #40]	; (8001e9c <LoopForever+0x12>)
  ldr r4, =_ebss
 8001e74:	4c0a      	ldr	r4, [pc, #40]	; (8001ea0 <LoopForever+0x16>)
  movs r3, #0
 8001e76:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001e78:	e001      	b.n	8001e7e <LoopFillZerobss>

08001e7a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001e7a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001e7c:	3204      	adds	r2, #4

08001e7e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001e7e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001e80:	d3fb      	bcc.n	8001e7a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001e82:	f000 f811 	bl	8001ea8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001e86:	f7fe feb5 	bl	8000bf4 <main>

08001e8a <LoopForever>:

LoopForever:
    b LoopForever
 8001e8a:	e7fe      	b.n	8001e8a <LoopForever>
  ldr   r0, =_estack
 8001e8c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001e90:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001e94:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8001e98:	08004e18 	.word	0x08004e18
  ldr r2, =_sbss
 8001e9c:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001ea0:	20000214 	.word	0x20000214

08001ea4 <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001ea4:	e7fe      	b.n	8001ea4 <BusFault_Handler>
	...

08001ea8 <__libc_init_array>:
 8001ea8:	b570      	push	{r4, r5, r6, lr}
 8001eaa:	4d0d      	ldr	r5, [pc, #52]	; (8001ee0 <__libc_init_array+0x38>)
 8001eac:	4c0d      	ldr	r4, [pc, #52]	; (8001ee4 <__libc_init_array+0x3c>)
 8001eae:	1b64      	subs	r4, r4, r5
 8001eb0:	10a4      	asrs	r4, r4, #2
 8001eb2:	2600      	movs	r6, #0
 8001eb4:	42a6      	cmp	r6, r4
 8001eb6:	d109      	bne.n	8001ecc <__libc_init_array+0x24>
 8001eb8:	4d0b      	ldr	r5, [pc, #44]	; (8001ee8 <__libc_init_array+0x40>)
 8001eba:	4c0c      	ldr	r4, [pc, #48]	; (8001eec <__libc_init_array+0x44>)
 8001ebc:	f002 fd9e 	bl	80049fc <_init>
 8001ec0:	1b64      	subs	r4, r4, r5
 8001ec2:	10a4      	asrs	r4, r4, #2
 8001ec4:	2600      	movs	r6, #0
 8001ec6:	42a6      	cmp	r6, r4
 8001ec8:	d105      	bne.n	8001ed6 <__libc_init_array+0x2e>
 8001eca:	bd70      	pop	{r4, r5, r6, pc}
 8001ecc:	f855 3b04 	ldr.w	r3, [r5], #4
 8001ed0:	4798      	blx	r3
 8001ed2:	3601      	adds	r6, #1
 8001ed4:	e7ee      	b.n	8001eb4 <__libc_init_array+0xc>
 8001ed6:	f855 3b04 	ldr.w	r3, [r5], #4
 8001eda:	4798      	blx	r3
 8001edc:	3601      	adds	r6, #1
 8001ede:	e7f2      	b.n	8001ec6 <__libc_init_array+0x1e>
 8001ee0:	08004e10 	.word	0x08004e10
 8001ee4:	08004e10 	.word	0x08004e10
 8001ee8:	08004e10 	.word	0x08004e10
 8001eec:	08004e14 	.word	0x08004e14

08001ef0 <malloc>:
 8001ef0:	4b02      	ldr	r3, [pc, #8]	; (8001efc <malloc+0xc>)
 8001ef2:	4601      	mov	r1, r0
 8001ef4:	6818      	ldr	r0, [r3, #0]
 8001ef6:	f000 b859 	b.w	8001fac <_malloc_r>
 8001efa:	bf00      	nop
 8001efc:	20000000 	.word	0x20000000

08001f00 <memset>:
 8001f00:	4402      	add	r2, r0
 8001f02:	4603      	mov	r3, r0
 8001f04:	4293      	cmp	r3, r2
 8001f06:	d100      	bne.n	8001f0a <memset+0xa>
 8001f08:	4770      	bx	lr
 8001f0a:	f803 1b01 	strb.w	r1, [r3], #1
 8001f0e:	e7f9      	b.n	8001f04 <memset+0x4>

08001f10 <_free_r>:
 8001f10:	b538      	push	{r3, r4, r5, lr}
 8001f12:	4605      	mov	r5, r0
 8001f14:	2900      	cmp	r1, #0
 8001f16:	d045      	beq.n	8001fa4 <_free_r+0x94>
 8001f18:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001f1c:	1f0c      	subs	r4, r1, #4
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	bfb8      	it	lt
 8001f22:	18e4      	addlt	r4, r4, r3
 8001f24:	f001 ff1a 	bl	8003d5c <__malloc_lock>
 8001f28:	4a1f      	ldr	r2, [pc, #124]	; (8001fa8 <_free_r+0x98>)
 8001f2a:	6813      	ldr	r3, [r2, #0]
 8001f2c:	4610      	mov	r0, r2
 8001f2e:	b933      	cbnz	r3, 8001f3e <_free_r+0x2e>
 8001f30:	6063      	str	r3, [r4, #4]
 8001f32:	6014      	str	r4, [r2, #0]
 8001f34:	4628      	mov	r0, r5
 8001f36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001f3a:	f001 bf15 	b.w	8003d68 <__malloc_unlock>
 8001f3e:	42a3      	cmp	r3, r4
 8001f40:	d90b      	bls.n	8001f5a <_free_r+0x4a>
 8001f42:	6821      	ldr	r1, [r4, #0]
 8001f44:	1862      	adds	r2, r4, r1
 8001f46:	4293      	cmp	r3, r2
 8001f48:	bf04      	itt	eq
 8001f4a:	681a      	ldreq	r2, [r3, #0]
 8001f4c:	685b      	ldreq	r3, [r3, #4]
 8001f4e:	6063      	str	r3, [r4, #4]
 8001f50:	bf04      	itt	eq
 8001f52:	1852      	addeq	r2, r2, r1
 8001f54:	6022      	streq	r2, [r4, #0]
 8001f56:	6004      	str	r4, [r0, #0]
 8001f58:	e7ec      	b.n	8001f34 <_free_r+0x24>
 8001f5a:	461a      	mov	r2, r3
 8001f5c:	685b      	ldr	r3, [r3, #4]
 8001f5e:	b10b      	cbz	r3, 8001f64 <_free_r+0x54>
 8001f60:	42a3      	cmp	r3, r4
 8001f62:	d9fa      	bls.n	8001f5a <_free_r+0x4a>
 8001f64:	6811      	ldr	r1, [r2, #0]
 8001f66:	1850      	adds	r0, r2, r1
 8001f68:	42a0      	cmp	r0, r4
 8001f6a:	d10b      	bne.n	8001f84 <_free_r+0x74>
 8001f6c:	6820      	ldr	r0, [r4, #0]
 8001f6e:	4401      	add	r1, r0
 8001f70:	1850      	adds	r0, r2, r1
 8001f72:	4283      	cmp	r3, r0
 8001f74:	6011      	str	r1, [r2, #0]
 8001f76:	d1dd      	bne.n	8001f34 <_free_r+0x24>
 8001f78:	6818      	ldr	r0, [r3, #0]
 8001f7a:	685b      	ldr	r3, [r3, #4]
 8001f7c:	6053      	str	r3, [r2, #4]
 8001f7e:	4401      	add	r1, r0
 8001f80:	6011      	str	r1, [r2, #0]
 8001f82:	e7d7      	b.n	8001f34 <_free_r+0x24>
 8001f84:	d902      	bls.n	8001f8c <_free_r+0x7c>
 8001f86:	230c      	movs	r3, #12
 8001f88:	602b      	str	r3, [r5, #0]
 8001f8a:	e7d3      	b.n	8001f34 <_free_r+0x24>
 8001f8c:	6820      	ldr	r0, [r4, #0]
 8001f8e:	1821      	adds	r1, r4, r0
 8001f90:	428b      	cmp	r3, r1
 8001f92:	bf04      	itt	eq
 8001f94:	6819      	ldreq	r1, [r3, #0]
 8001f96:	685b      	ldreq	r3, [r3, #4]
 8001f98:	6063      	str	r3, [r4, #4]
 8001f9a:	bf04      	itt	eq
 8001f9c:	1809      	addeq	r1, r1, r0
 8001f9e:	6021      	streq	r1, [r4, #0]
 8001fa0:	6054      	str	r4, [r2, #4]
 8001fa2:	e7c7      	b.n	8001f34 <_free_r+0x24>
 8001fa4:	bd38      	pop	{r3, r4, r5, pc}
 8001fa6:	bf00      	nop
 8001fa8:	200001f8 	.word	0x200001f8

08001fac <_malloc_r>:
 8001fac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001fae:	1ccd      	adds	r5, r1, #3
 8001fb0:	f025 0503 	bic.w	r5, r5, #3
 8001fb4:	3508      	adds	r5, #8
 8001fb6:	2d0c      	cmp	r5, #12
 8001fb8:	bf38      	it	cc
 8001fba:	250c      	movcc	r5, #12
 8001fbc:	2d00      	cmp	r5, #0
 8001fbe:	4606      	mov	r6, r0
 8001fc0:	db01      	blt.n	8001fc6 <_malloc_r+0x1a>
 8001fc2:	42a9      	cmp	r1, r5
 8001fc4:	d903      	bls.n	8001fce <_malloc_r+0x22>
 8001fc6:	230c      	movs	r3, #12
 8001fc8:	6033      	str	r3, [r6, #0]
 8001fca:	2000      	movs	r0, #0
 8001fcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001fce:	f001 fec5 	bl	8003d5c <__malloc_lock>
 8001fd2:	4921      	ldr	r1, [pc, #132]	; (8002058 <_malloc_r+0xac>)
 8001fd4:	680a      	ldr	r2, [r1, #0]
 8001fd6:	4614      	mov	r4, r2
 8001fd8:	b99c      	cbnz	r4, 8002002 <_malloc_r+0x56>
 8001fda:	4f20      	ldr	r7, [pc, #128]	; (800205c <_malloc_r+0xb0>)
 8001fdc:	683b      	ldr	r3, [r7, #0]
 8001fde:	b923      	cbnz	r3, 8001fea <_malloc_r+0x3e>
 8001fe0:	4621      	mov	r1, r4
 8001fe2:	4630      	mov	r0, r6
 8001fe4:	f000 fd0e 	bl	8002a04 <_sbrk_r>
 8001fe8:	6038      	str	r0, [r7, #0]
 8001fea:	4629      	mov	r1, r5
 8001fec:	4630      	mov	r0, r6
 8001fee:	f000 fd09 	bl	8002a04 <_sbrk_r>
 8001ff2:	1c43      	adds	r3, r0, #1
 8001ff4:	d123      	bne.n	800203e <_malloc_r+0x92>
 8001ff6:	230c      	movs	r3, #12
 8001ff8:	6033      	str	r3, [r6, #0]
 8001ffa:	4630      	mov	r0, r6
 8001ffc:	f001 feb4 	bl	8003d68 <__malloc_unlock>
 8002000:	e7e3      	b.n	8001fca <_malloc_r+0x1e>
 8002002:	6823      	ldr	r3, [r4, #0]
 8002004:	1b5b      	subs	r3, r3, r5
 8002006:	d417      	bmi.n	8002038 <_malloc_r+0x8c>
 8002008:	2b0b      	cmp	r3, #11
 800200a:	d903      	bls.n	8002014 <_malloc_r+0x68>
 800200c:	6023      	str	r3, [r4, #0]
 800200e:	441c      	add	r4, r3
 8002010:	6025      	str	r5, [r4, #0]
 8002012:	e004      	b.n	800201e <_malloc_r+0x72>
 8002014:	6863      	ldr	r3, [r4, #4]
 8002016:	42a2      	cmp	r2, r4
 8002018:	bf0c      	ite	eq
 800201a:	600b      	streq	r3, [r1, #0]
 800201c:	6053      	strne	r3, [r2, #4]
 800201e:	4630      	mov	r0, r6
 8002020:	f001 fea2 	bl	8003d68 <__malloc_unlock>
 8002024:	f104 000b 	add.w	r0, r4, #11
 8002028:	1d23      	adds	r3, r4, #4
 800202a:	f020 0007 	bic.w	r0, r0, #7
 800202e:	1ac2      	subs	r2, r0, r3
 8002030:	d0cc      	beq.n	8001fcc <_malloc_r+0x20>
 8002032:	1a1b      	subs	r3, r3, r0
 8002034:	50a3      	str	r3, [r4, r2]
 8002036:	e7c9      	b.n	8001fcc <_malloc_r+0x20>
 8002038:	4622      	mov	r2, r4
 800203a:	6864      	ldr	r4, [r4, #4]
 800203c:	e7cc      	b.n	8001fd8 <_malloc_r+0x2c>
 800203e:	1cc4      	adds	r4, r0, #3
 8002040:	f024 0403 	bic.w	r4, r4, #3
 8002044:	42a0      	cmp	r0, r4
 8002046:	d0e3      	beq.n	8002010 <_malloc_r+0x64>
 8002048:	1a21      	subs	r1, r4, r0
 800204a:	4630      	mov	r0, r6
 800204c:	f000 fcda 	bl	8002a04 <_sbrk_r>
 8002050:	3001      	adds	r0, #1
 8002052:	d1dd      	bne.n	8002010 <_malloc_r+0x64>
 8002054:	e7cf      	b.n	8001ff6 <_malloc_r+0x4a>
 8002056:	bf00      	nop
 8002058:	200001f8 	.word	0x200001f8
 800205c:	200001fc 	.word	0x200001fc

08002060 <__cvt>:
 8002060:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002064:	b088      	sub	sp, #32
 8002066:	2b00      	cmp	r3, #0
 8002068:	461f      	mov	r7, r3
 800206a:	4614      	mov	r4, r2
 800206c:	bfb8      	it	lt
 800206e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8002072:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002074:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8002076:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800207a:	bfb6      	itet	lt
 800207c:	461f      	movlt	r7, r3
 800207e:	2300      	movge	r3, #0
 8002080:	232d      	movlt	r3, #45	; 0x2d
 8002082:	7013      	strb	r3, [r2, #0]
 8002084:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002086:	f023 0820 	bic.w	r8, r3, #32
 800208a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800208e:	d005      	beq.n	800209c <__cvt+0x3c>
 8002090:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8002094:	d100      	bne.n	8002098 <__cvt+0x38>
 8002096:	3501      	adds	r5, #1
 8002098:	2302      	movs	r3, #2
 800209a:	e000      	b.n	800209e <__cvt+0x3e>
 800209c:	2303      	movs	r3, #3
 800209e:	aa07      	add	r2, sp, #28
 80020a0:	9204      	str	r2, [sp, #16]
 80020a2:	aa06      	add	r2, sp, #24
 80020a4:	e9cd a202 	strd	sl, r2, [sp, #8]
 80020a8:	e9cd 3500 	strd	r3, r5, [sp]
 80020ac:	4622      	mov	r2, r4
 80020ae:	463b      	mov	r3, r7
 80020b0:	f000 fe22 	bl	8002cf8 <_dtoa_r>
 80020b4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80020b8:	4606      	mov	r6, r0
 80020ba:	d102      	bne.n	80020c2 <__cvt+0x62>
 80020bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80020be:	07db      	lsls	r3, r3, #31
 80020c0:	d522      	bpl.n	8002108 <__cvt+0xa8>
 80020c2:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80020c6:	eb06 0905 	add.w	r9, r6, r5
 80020ca:	d110      	bne.n	80020ee <__cvt+0x8e>
 80020cc:	7833      	ldrb	r3, [r6, #0]
 80020ce:	2b30      	cmp	r3, #48	; 0x30
 80020d0:	d10a      	bne.n	80020e8 <__cvt+0x88>
 80020d2:	2200      	movs	r2, #0
 80020d4:	2300      	movs	r3, #0
 80020d6:	4620      	mov	r0, r4
 80020d8:	4639      	mov	r1, r7
 80020da:	f7fe fcfd 	bl	8000ad8 <__aeabi_dcmpeq>
 80020de:	b918      	cbnz	r0, 80020e8 <__cvt+0x88>
 80020e0:	f1c5 0501 	rsb	r5, r5, #1
 80020e4:	f8ca 5000 	str.w	r5, [sl]
 80020e8:	f8da 3000 	ldr.w	r3, [sl]
 80020ec:	4499      	add	r9, r3
 80020ee:	2200      	movs	r2, #0
 80020f0:	2300      	movs	r3, #0
 80020f2:	4620      	mov	r0, r4
 80020f4:	4639      	mov	r1, r7
 80020f6:	f7fe fcef 	bl	8000ad8 <__aeabi_dcmpeq>
 80020fa:	b108      	cbz	r0, 8002100 <__cvt+0xa0>
 80020fc:	f8cd 901c 	str.w	r9, [sp, #28]
 8002100:	2230      	movs	r2, #48	; 0x30
 8002102:	9b07      	ldr	r3, [sp, #28]
 8002104:	454b      	cmp	r3, r9
 8002106:	d307      	bcc.n	8002118 <__cvt+0xb8>
 8002108:	9b07      	ldr	r3, [sp, #28]
 800210a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800210c:	1b9b      	subs	r3, r3, r6
 800210e:	4630      	mov	r0, r6
 8002110:	6013      	str	r3, [r2, #0]
 8002112:	b008      	add	sp, #32
 8002114:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002118:	1c59      	adds	r1, r3, #1
 800211a:	9107      	str	r1, [sp, #28]
 800211c:	701a      	strb	r2, [r3, #0]
 800211e:	e7f0      	b.n	8002102 <__cvt+0xa2>

08002120 <__exponent>:
 8002120:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002122:	4603      	mov	r3, r0
 8002124:	2900      	cmp	r1, #0
 8002126:	bfb8      	it	lt
 8002128:	4249      	neglt	r1, r1
 800212a:	f803 2b02 	strb.w	r2, [r3], #2
 800212e:	bfb4      	ite	lt
 8002130:	222d      	movlt	r2, #45	; 0x2d
 8002132:	222b      	movge	r2, #43	; 0x2b
 8002134:	2909      	cmp	r1, #9
 8002136:	7042      	strb	r2, [r0, #1]
 8002138:	dd2a      	ble.n	8002190 <__exponent+0x70>
 800213a:	f10d 0407 	add.w	r4, sp, #7
 800213e:	46a4      	mov	ip, r4
 8002140:	270a      	movs	r7, #10
 8002142:	46a6      	mov	lr, r4
 8002144:	460a      	mov	r2, r1
 8002146:	fb91 f6f7 	sdiv	r6, r1, r7
 800214a:	fb07 1516 	mls	r5, r7, r6, r1
 800214e:	3530      	adds	r5, #48	; 0x30
 8002150:	2a63      	cmp	r2, #99	; 0x63
 8002152:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 8002156:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800215a:	4631      	mov	r1, r6
 800215c:	dcf1      	bgt.n	8002142 <__exponent+0x22>
 800215e:	3130      	adds	r1, #48	; 0x30
 8002160:	f1ae 0502 	sub.w	r5, lr, #2
 8002164:	f804 1c01 	strb.w	r1, [r4, #-1]
 8002168:	1c44      	adds	r4, r0, #1
 800216a:	4629      	mov	r1, r5
 800216c:	4561      	cmp	r1, ip
 800216e:	d30a      	bcc.n	8002186 <__exponent+0x66>
 8002170:	f10d 0209 	add.w	r2, sp, #9
 8002174:	eba2 020e 	sub.w	r2, r2, lr
 8002178:	4565      	cmp	r5, ip
 800217a:	bf88      	it	hi
 800217c:	2200      	movhi	r2, #0
 800217e:	4413      	add	r3, r2
 8002180:	1a18      	subs	r0, r3, r0
 8002182:	b003      	add	sp, #12
 8002184:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002186:	f811 2b01 	ldrb.w	r2, [r1], #1
 800218a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800218e:	e7ed      	b.n	800216c <__exponent+0x4c>
 8002190:	2330      	movs	r3, #48	; 0x30
 8002192:	3130      	adds	r1, #48	; 0x30
 8002194:	7083      	strb	r3, [r0, #2]
 8002196:	70c1      	strb	r1, [r0, #3]
 8002198:	1d03      	adds	r3, r0, #4
 800219a:	e7f1      	b.n	8002180 <__exponent+0x60>

0800219c <_printf_float>:
 800219c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80021a0:	b091      	sub	sp, #68	; 0x44
 80021a2:	460c      	mov	r4, r1
 80021a4:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80021a8:	4616      	mov	r6, r2
 80021aa:	461f      	mov	r7, r3
 80021ac:	4605      	mov	r5, r0
 80021ae:	f001 fd5b 	bl	8003c68 <_localeconv_r>
 80021b2:	6803      	ldr	r3, [r0, #0]
 80021b4:	9309      	str	r3, [sp, #36]	; 0x24
 80021b6:	4618      	mov	r0, r3
 80021b8:	f7fe f812 	bl	80001e0 <strlen>
 80021bc:	2300      	movs	r3, #0
 80021be:	930e      	str	r3, [sp, #56]	; 0x38
 80021c0:	f8d8 3000 	ldr.w	r3, [r8]
 80021c4:	900a      	str	r0, [sp, #40]	; 0x28
 80021c6:	3307      	adds	r3, #7
 80021c8:	f023 0307 	bic.w	r3, r3, #7
 80021cc:	f103 0208 	add.w	r2, r3, #8
 80021d0:	f894 9018 	ldrb.w	r9, [r4, #24]
 80021d4:	f8d4 b000 	ldr.w	fp, [r4]
 80021d8:	f8c8 2000 	str.w	r2, [r8]
 80021dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021e0:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80021e4:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 80021e8:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80021ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80021ee:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80021f0:	4b9c      	ldr	r3, [pc, #624]	; (8002464 <_printf_float+0x2c8>)
 80021f2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80021f6:	4640      	mov	r0, r8
 80021f8:	f7fe fca0 	bl	8000b3c <__aeabi_dcmpun>
 80021fc:	bb70      	cbnz	r0, 800225c <_printf_float+0xc0>
 80021fe:	4b99      	ldr	r3, [pc, #612]	; (8002464 <_printf_float+0x2c8>)
 8002200:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002202:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002206:	4640      	mov	r0, r8
 8002208:	f7fe fc7a 	bl	8000b00 <__aeabi_dcmple>
 800220c:	bb30      	cbnz	r0, 800225c <_printf_float+0xc0>
 800220e:	2200      	movs	r2, #0
 8002210:	2300      	movs	r3, #0
 8002212:	4640      	mov	r0, r8
 8002214:	4651      	mov	r1, sl
 8002216:	f7fe fc69 	bl	8000aec <__aeabi_dcmplt>
 800221a:	b110      	cbz	r0, 8002222 <_printf_float+0x86>
 800221c:	232d      	movs	r3, #45	; 0x2d
 800221e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002222:	4b91      	ldr	r3, [pc, #580]	; (8002468 <_printf_float+0x2cc>)
 8002224:	4891      	ldr	r0, [pc, #580]	; (800246c <_printf_float+0x2d0>)
 8002226:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800222a:	bf94      	ite	ls
 800222c:	4698      	movls	r8, r3
 800222e:	4680      	movhi	r8, r0
 8002230:	2303      	movs	r3, #3
 8002232:	6123      	str	r3, [r4, #16]
 8002234:	f02b 0304 	bic.w	r3, fp, #4
 8002238:	6023      	str	r3, [r4, #0]
 800223a:	f04f 0a00 	mov.w	sl, #0
 800223e:	9700      	str	r7, [sp, #0]
 8002240:	4633      	mov	r3, r6
 8002242:	aa0f      	add	r2, sp, #60	; 0x3c
 8002244:	4621      	mov	r1, r4
 8002246:	4628      	mov	r0, r5
 8002248:	f000 f9d2 	bl	80025f0 <_printf_common>
 800224c:	3001      	adds	r0, #1
 800224e:	f040 808f 	bne.w	8002370 <_printf_float+0x1d4>
 8002252:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002256:	b011      	add	sp, #68	; 0x44
 8002258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800225c:	4642      	mov	r2, r8
 800225e:	4653      	mov	r3, sl
 8002260:	4640      	mov	r0, r8
 8002262:	4651      	mov	r1, sl
 8002264:	f7fe fc6a 	bl	8000b3c <__aeabi_dcmpun>
 8002268:	b140      	cbz	r0, 800227c <_printf_float+0xe0>
 800226a:	f1ba 0f00 	cmp.w	sl, #0
 800226e:	bfbc      	itt	lt
 8002270:	232d      	movlt	r3, #45	; 0x2d
 8002272:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8002276:	487e      	ldr	r0, [pc, #504]	; (8002470 <_printf_float+0x2d4>)
 8002278:	4b7e      	ldr	r3, [pc, #504]	; (8002474 <_printf_float+0x2d8>)
 800227a:	e7d4      	b.n	8002226 <_printf_float+0x8a>
 800227c:	6863      	ldr	r3, [r4, #4]
 800227e:	1c5a      	adds	r2, r3, #1
 8002280:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8002284:	d142      	bne.n	800230c <_printf_float+0x170>
 8002286:	2306      	movs	r3, #6
 8002288:	6063      	str	r3, [r4, #4]
 800228a:	2200      	movs	r2, #0
 800228c:	9206      	str	r2, [sp, #24]
 800228e:	aa0e      	add	r2, sp, #56	; 0x38
 8002290:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8002294:	aa0d      	add	r2, sp, #52	; 0x34
 8002296:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 800229a:	9203      	str	r2, [sp, #12]
 800229c:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 80022a0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80022a4:	6023      	str	r3, [r4, #0]
 80022a6:	6863      	ldr	r3, [r4, #4]
 80022a8:	9300      	str	r3, [sp, #0]
 80022aa:	4642      	mov	r2, r8
 80022ac:	4653      	mov	r3, sl
 80022ae:	4628      	mov	r0, r5
 80022b0:	910b      	str	r1, [sp, #44]	; 0x2c
 80022b2:	f7ff fed5 	bl	8002060 <__cvt>
 80022b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80022b8:	2947      	cmp	r1, #71	; 0x47
 80022ba:	4680      	mov	r8, r0
 80022bc:	990d      	ldr	r1, [sp, #52]	; 0x34
 80022be:	d108      	bne.n	80022d2 <_printf_float+0x136>
 80022c0:	1cc8      	adds	r0, r1, #3
 80022c2:	db02      	blt.n	80022ca <_printf_float+0x12e>
 80022c4:	6863      	ldr	r3, [r4, #4]
 80022c6:	4299      	cmp	r1, r3
 80022c8:	dd40      	ble.n	800234c <_printf_float+0x1b0>
 80022ca:	f1a9 0902 	sub.w	r9, r9, #2
 80022ce:	fa5f f989 	uxtb.w	r9, r9
 80022d2:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80022d6:	d81f      	bhi.n	8002318 <_printf_float+0x17c>
 80022d8:	3901      	subs	r1, #1
 80022da:	464a      	mov	r2, r9
 80022dc:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80022e0:	910d      	str	r1, [sp, #52]	; 0x34
 80022e2:	f7ff ff1d 	bl	8002120 <__exponent>
 80022e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80022e8:	1813      	adds	r3, r2, r0
 80022ea:	2a01      	cmp	r2, #1
 80022ec:	4682      	mov	sl, r0
 80022ee:	6123      	str	r3, [r4, #16]
 80022f0:	dc02      	bgt.n	80022f8 <_printf_float+0x15c>
 80022f2:	6822      	ldr	r2, [r4, #0]
 80022f4:	07d2      	lsls	r2, r2, #31
 80022f6:	d501      	bpl.n	80022fc <_printf_float+0x160>
 80022f8:	3301      	adds	r3, #1
 80022fa:	6123      	str	r3, [r4, #16]
 80022fc:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8002300:	2b00      	cmp	r3, #0
 8002302:	d09c      	beq.n	800223e <_printf_float+0xa2>
 8002304:	232d      	movs	r3, #45	; 0x2d
 8002306:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800230a:	e798      	b.n	800223e <_printf_float+0xa2>
 800230c:	2947      	cmp	r1, #71	; 0x47
 800230e:	d1bc      	bne.n	800228a <_printf_float+0xee>
 8002310:	2b00      	cmp	r3, #0
 8002312:	d1ba      	bne.n	800228a <_printf_float+0xee>
 8002314:	2301      	movs	r3, #1
 8002316:	e7b7      	b.n	8002288 <_printf_float+0xec>
 8002318:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800231c:	d118      	bne.n	8002350 <_printf_float+0x1b4>
 800231e:	2900      	cmp	r1, #0
 8002320:	6863      	ldr	r3, [r4, #4]
 8002322:	dd0b      	ble.n	800233c <_printf_float+0x1a0>
 8002324:	6121      	str	r1, [r4, #16]
 8002326:	b913      	cbnz	r3, 800232e <_printf_float+0x192>
 8002328:	6822      	ldr	r2, [r4, #0]
 800232a:	07d0      	lsls	r0, r2, #31
 800232c:	d502      	bpl.n	8002334 <_printf_float+0x198>
 800232e:	3301      	adds	r3, #1
 8002330:	440b      	add	r3, r1
 8002332:	6123      	str	r3, [r4, #16]
 8002334:	65a1      	str	r1, [r4, #88]	; 0x58
 8002336:	f04f 0a00 	mov.w	sl, #0
 800233a:	e7df      	b.n	80022fc <_printf_float+0x160>
 800233c:	b913      	cbnz	r3, 8002344 <_printf_float+0x1a8>
 800233e:	6822      	ldr	r2, [r4, #0]
 8002340:	07d2      	lsls	r2, r2, #31
 8002342:	d501      	bpl.n	8002348 <_printf_float+0x1ac>
 8002344:	3302      	adds	r3, #2
 8002346:	e7f4      	b.n	8002332 <_printf_float+0x196>
 8002348:	2301      	movs	r3, #1
 800234a:	e7f2      	b.n	8002332 <_printf_float+0x196>
 800234c:	f04f 0967 	mov.w	r9, #103	; 0x67
 8002350:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002352:	4299      	cmp	r1, r3
 8002354:	db05      	blt.n	8002362 <_printf_float+0x1c6>
 8002356:	6823      	ldr	r3, [r4, #0]
 8002358:	6121      	str	r1, [r4, #16]
 800235a:	07d8      	lsls	r0, r3, #31
 800235c:	d5ea      	bpl.n	8002334 <_printf_float+0x198>
 800235e:	1c4b      	adds	r3, r1, #1
 8002360:	e7e7      	b.n	8002332 <_printf_float+0x196>
 8002362:	2900      	cmp	r1, #0
 8002364:	bfd4      	ite	le
 8002366:	f1c1 0202 	rsble	r2, r1, #2
 800236a:	2201      	movgt	r2, #1
 800236c:	4413      	add	r3, r2
 800236e:	e7e0      	b.n	8002332 <_printf_float+0x196>
 8002370:	6823      	ldr	r3, [r4, #0]
 8002372:	055a      	lsls	r2, r3, #21
 8002374:	d407      	bmi.n	8002386 <_printf_float+0x1ea>
 8002376:	6923      	ldr	r3, [r4, #16]
 8002378:	4642      	mov	r2, r8
 800237a:	4631      	mov	r1, r6
 800237c:	4628      	mov	r0, r5
 800237e:	47b8      	blx	r7
 8002380:	3001      	adds	r0, #1
 8002382:	d12b      	bne.n	80023dc <_printf_float+0x240>
 8002384:	e765      	b.n	8002252 <_printf_float+0xb6>
 8002386:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800238a:	f240 80dc 	bls.w	8002546 <_printf_float+0x3aa>
 800238e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002392:	2200      	movs	r2, #0
 8002394:	2300      	movs	r3, #0
 8002396:	f7fe fb9f 	bl	8000ad8 <__aeabi_dcmpeq>
 800239a:	2800      	cmp	r0, #0
 800239c:	d033      	beq.n	8002406 <_printf_float+0x26a>
 800239e:	4a36      	ldr	r2, [pc, #216]	; (8002478 <_printf_float+0x2dc>)
 80023a0:	2301      	movs	r3, #1
 80023a2:	4631      	mov	r1, r6
 80023a4:	4628      	mov	r0, r5
 80023a6:	47b8      	blx	r7
 80023a8:	3001      	adds	r0, #1
 80023aa:	f43f af52 	beq.w	8002252 <_printf_float+0xb6>
 80023ae:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80023b2:	429a      	cmp	r2, r3
 80023b4:	db02      	blt.n	80023bc <_printf_float+0x220>
 80023b6:	6823      	ldr	r3, [r4, #0]
 80023b8:	07d8      	lsls	r0, r3, #31
 80023ba:	d50f      	bpl.n	80023dc <_printf_float+0x240>
 80023bc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80023c0:	4631      	mov	r1, r6
 80023c2:	4628      	mov	r0, r5
 80023c4:	47b8      	blx	r7
 80023c6:	3001      	adds	r0, #1
 80023c8:	f43f af43 	beq.w	8002252 <_printf_float+0xb6>
 80023cc:	f04f 0800 	mov.w	r8, #0
 80023d0:	f104 091a 	add.w	r9, r4, #26
 80023d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80023d6:	3b01      	subs	r3, #1
 80023d8:	4543      	cmp	r3, r8
 80023da:	dc09      	bgt.n	80023f0 <_printf_float+0x254>
 80023dc:	6823      	ldr	r3, [r4, #0]
 80023de:	079b      	lsls	r3, r3, #30
 80023e0:	f100 8101 	bmi.w	80025e6 <_printf_float+0x44a>
 80023e4:	68e0      	ldr	r0, [r4, #12]
 80023e6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80023e8:	4298      	cmp	r0, r3
 80023ea:	bfb8      	it	lt
 80023ec:	4618      	movlt	r0, r3
 80023ee:	e732      	b.n	8002256 <_printf_float+0xba>
 80023f0:	2301      	movs	r3, #1
 80023f2:	464a      	mov	r2, r9
 80023f4:	4631      	mov	r1, r6
 80023f6:	4628      	mov	r0, r5
 80023f8:	47b8      	blx	r7
 80023fa:	3001      	adds	r0, #1
 80023fc:	f43f af29 	beq.w	8002252 <_printf_float+0xb6>
 8002400:	f108 0801 	add.w	r8, r8, #1
 8002404:	e7e6      	b.n	80023d4 <_printf_float+0x238>
 8002406:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002408:	2b00      	cmp	r3, #0
 800240a:	dc37      	bgt.n	800247c <_printf_float+0x2e0>
 800240c:	4a1a      	ldr	r2, [pc, #104]	; (8002478 <_printf_float+0x2dc>)
 800240e:	2301      	movs	r3, #1
 8002410:	4631      	mov	r1, r6
 8002412:	4628      	mov	r0, r5
 8002414:	47b8      	blx	r7
 8002416:	3001      	adds	r0, #1
 8002418:	f43f af1b 	beq.w	8002252 <_printf_float+0xb6>
 800241c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002420:	4313      	orrs	r3, r2
 8002422:	d102      	bne.n	800242a <_printf_float+0x28e>
 8002424:	6823      	ldr	r3, [r4, #0]
 8002426:	07d9      	lsls	r1, r3, #31
 8002428:	d5d8      	bpl.n	80023dc <_printf_float+0x240>
 800242a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800242e:	4631      	mov	r1, r6
 8002430:	4628      	mov	r0, r5
 8002432:	47b8      	blx	r7
 8002434:	3001      	adds	r0, #1
 8002436:	f43f af0c 	beq.w	8002252 <_printf_float+0xb6>
 800243a:	f04f 0900 	mov.w	r9, #0
 800243e:	f104 0a1a 	add.w	sl, r4, #26
 8002442:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002444:	425b      	negs	r3, r3
 8002446:	454b      	cmp	r3, r9
 8002448:	dc01      	bgt.n	800244e <_printf_float+0x2b2>
 800244a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800244c:	e794      	b.n	8002378 <_printf_float+0x1dc>
 800244e:	2301      	movs	r3, #1
 8002450:	4652      	mov	r2, sl
 8002452:	4631      	mov	r1, r6
 8002454:	4628      	mov	r0, r5
 8002456:	47b8      	blx	r7
 8002458:	3001      	adds	r0, #1
 800245a:	f43f aefa 	beq.w	8002252 <_printf_float+0xb6>
 800245e:	f109 0901 	add.w	r9, r9, #1
 8002462:	e7ee      	b.n	8002442 <_printf_float+0x2a6>
 8002464:	7fefffff 	.word	0x7fefffff
 8002468:	08004a34 	.word	0x08004a34
 800246c:	08004a38 	.word	0x08004a38
 8002470:	08004a40 	.word	0x08004a40
 8002474:	08004a3c 	.word	0x08004a3c
 8002478:	08004a44 	.word	0x08004a44
 800247c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800247e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8002480:	429a      	cmp	r2, r3
 8002482:	bfa8      	it	ge
 8002484:	461a      	movge	r2, r3
 8002486:	2a00      	cmp	r2, #0
 8002488:	4691      	mov	r9, r2
 800248a:	dc37      	bgt.n	80024fc <_printf_float+0x360>
 800248c:	f04f 0b00 	mov.w	fp, #0
 8002490:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002494:	f104 021a 	add.w	r2, r4, #26
 8002498:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 800249c:	ebaa 0309 	sub.w	r3, sl, r9
 80024a0:	455b      	cmp	r3, fp
 80024a2:	dc33      	bgt.n	800250c <_printf_float+0x370>
 80024a4:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80024a8:	429a      	cmp	r2, r3
 80024aa:	db3b      	blt.n	8002524 <_printf_float+0x388>
 80024ac:	6823      	ldr	r3, [r4, #0]
 80024ae:	07da      	lsls	r2, r3, #31
 80024b0:	d438      	bmi.n	8002524 <_printf_float+0x388>
 80024b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80024b4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80024b6:	eba2 030a 	sub.w	r3, r2, sl
 80024ba:	eba2 0901 	sub.w	r9, r2, r1
 80024be:	4599      	cmp	r9, r3
 80024c0:	bfa8      	it	ge
 80024c2:	4699      	movge	r9, r3
 80024c4:	f1b9 0f00 	cmp.w	r9, #0
 80024c8:	dc34      	bgt.n	8002534 <_printf_float+0x398>
 80024ca:	f04f 0800 	mov.w	r8, #0
 80024ce:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80024d2:	f104 0a1a 	add.w	sl, r4, #26
 80024d6:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80024da:	1a9b      	subs	r3, r3, r2
 80024dc:	eba3 0309 	sub.w	r3, r3, r9
 80024e0:	4543      	cmp	r3, r8
 80024e2:	f77f af7b 	ble.w	80023dc <_printf_float+0x240>
 80024e6:	2301      	movs	r3, #1
 80024e8:	4652      	mov	r2, sl
 80024ea:	4631      	mov	r1, r6
 80024ec:	4628      	mov	r0, r5
 80024ee:	47b8      	blx	r7
 80024f0:	3001      	adds	r0, #1
 80024f2:	f43f aeae 	beq.w	8002252 <_printf_float+0xb6>
 80024f6:	f108 0801 	add.w	r8, r8, #1
 80024fa:	e7ec      	b.n	80024d6 <_printf_float+0x33a>
 80024fc:	4613      	mov	r3, r2
 80024fe:	4631      	mov	r1, r6
 8002500:	4642      	mov	r2, r8
 8002502:	4628      	mov	r0, r5
 8002504:	47b8      	blx	r7
 8002506:	3001      	adds	r0, #1
 8002508:	d1c0      	bne.n	800248c <_printf_float+0x2f0>
 800250a:	e6a2      	b.n	8002252 <_printf_float+0xb6>
 800250c:	2301      	movs	r3, #1
 800250e:	4631      	mov	r1, r6
 8002510:	4628      	mov	r0, r5
 8002512:	920b      	str	r2, [sp, #44]	; 0x2c
 8002514:	47b8      	blx	r7
 8002516:	3001      	adds	r0, #1
 8002518:	f43f ae9b 	beq.w	8002252 <_printf_float+0xb6>
 800251c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800251e:	f10b 0b01 	add.w	fp, fp, #1
 8002522:	e7b9      	b.n	8002498 <_printf_float+0x2fc>
 8002524:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002528:	4631      	mov	r1, r6
 800252a:	4628      	mov	r0, r5
 800252c:	47b8      	blx	r7
 800252e:	3001      	adds	r0, #1
 8002530:	d1bf      	bne.n	80024b2 <_printf_float+0x316>
 8002532:	e68e      	b.n	8002252 <_printf_float+0xb6>
 8002534:	464b      	mov	r3, r9
 8002536:	eb08 020a 	add.w	r2, r8, sl
 800253a:	4631      	mov	r1, r6
 800253c:	4628      	mov	r0, r5
 800253e:	47b8      	blx	r7
 8002540:	3001      	adds	r0, #1
 8002542:	d1c2      	bne.n	80024ca <_printf_float+0x32e>
 8002544:	e685      	b.n	8002252 <_printf_float+0xb6>
 8002546:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002548:	2a01      	cmp	r2, #1
 800254a:	dc01      	bgt.n	8002550 <_printf_float+0x3b4>
 800254c:	07db      	lsls	r3, r3, #31
 800254e:	d537      	bpl.n	80025c0 <_printf_float+0x424>
 8002550:	2301      	movs	r3, #1
 8002552:	4642      	mov	r2, r8
 8002554:	4631      	mov	r1, r6
 8002556:	4628      	mov	r0, r5
 8002558:	47b8      	blx	r7
 800255a:	3001      	adds	r0, #1
 800255c:	f43f ae79 	beq.w	8002252 <_printf_float+0xb6>
 8002560:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002564:	4631      	mov	r1, r6
 8002566:	4628      	mov	r0, r5
 8002568:	47b8      	blx	r7
 800256a:	3001      	adds	r0, #1
 800256c:	f43f ae71 	beq.w	8002252 <_printf_float+0xb6>
 8002570:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002574:	2200      	movs	r2, #0
 8002576:	2300      	movs	r3, #0
 8002578:	f7fe faae 	bl	8000ad8 <__aeabi_dcmpeq>
 800257c:	b9d8      	cbnz	r0, 80025b6 <_printf_float+0x41a>
 800257e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002580:	f108 0201 	add.w	r2, r8, #1
 8002584:	3b01      	subs	r3, #1
 8002586:	4631      	mov	r1, r6
 8002588:	4628      	mov	r0, r5
 800258a:	47b8      	blx	r7
 800258c:	3001      	adds	r0, #1
 800258e:	d10e      	bne.n	80025ae <_printf_float+0x412>
 8002590:	e65f      	b.n	8002252 <_printf_float+0xb6>
 8002592:	2301      	movs	r3, #1
 8002594:	464a      	mov	r2, r9
 8002596:	4631      	mov	r1, r6
 8002598:	4628      	mov	r0, r5
 800259a:	47b8      	blx	r7
 800259c:	3001      	adds	r0, #1
 800259e:	f43f ae58 	beq.w	8002252 <_printf_float+0xb6>
 80025a2:	f108 0801 	add.w	r8, r8, #1
 80025a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80025a8:	3b01      	subs	r3, #1
 80025aa:	4543      	cmp	r3, r8
 80025ac:	dcf1      	bgt.n	8002592 <_printf_float+0x3f6>
 80025ae:	4653      	mov	r3, sl
 80025b0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80025b4:	e6e1      	b.n	800237a <_printf_float+0x1de>
 80025b6:	f04f 0800 	mov.w	r8, #0
 80025ba:	f104 091a 	add.w	r9, r4, #26
 80025be:	e7f2      	b.n	80025a6 <_printf_float+0x40a>
 80025c0:	2301      	movs	r3, #1
 80025c2:	4642      	mov	r2, r8
 80025c4:	e7df      	b.n	8002586 <_printf_float+0x3ea>
 80025c6:	2301      	movs	r3, #1
 80025c8:	464a      	mov	r2, r9
 80025ca:	4631      	mov	r1, r6
 80025cc:	4628      	mov	r0, r5
 80025ce:	47b8      	blx	r7
 80025d0:	3001      	adds	r0, #1
 80025d2:	f43f ae3e 	beq.w	8002252 <_printf_float+0xb6>
 80025d6:	f108 0801 	add.w	r8, r8, #1
 80025da:	68e3      	ldr	r3, [r4, #12]
 80025dc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80025de:	1a5b      	subs	r3, r3, r1
 80025e0:	4543      	cmp	r3, r8
 80025e2:	dcf0      	bgt.n	80025c6 <_printf_float+0x42a>
 80025e4:	e6fe      	b.n	80023e4 <_printf_float+0x248>
 80025e6:	f04f 0800 	mov.w	r8, #0
 80025ea:	f104 0919 	add.w	r9, r4, #25
 80025ee:	e7f4      	b.n	80025da <_printf_float+0x43e>

080025f0 <_printf_common>:
 80025f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80025f4:	4616      	mov	r6, r2
 80025f6:	4699      	mov	r9, r3
 80025f8:	688a      	ldr	r2, [r1, #8]
 80025fa:	690b      	ldr	r3, [r1, #16]
 80025fc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002600:	4293      	cmp	r3, r2
 8002602:	bfb8      	it	lt
 8002604:	4613      	movlt	r3, r2
 8002606:	6033      	str	r3, [r6, #0]
 8002608:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800260c:	4607      	mov	r7, r0
 800260e:	460c      	mov	r4, r1
 8002610:	b10a      	cbz	r2, 8002616 <_printf_common+0x26>
 8002612:	3301      	adds	r3, #1
 8002614:	6033      	str	r3, [r6, #0]
 8002616:	6823      	ldr	r3, [r4, #0]
 8002618:	0699      	lsls	r1, r3, #26
 800261a:	bf42      	ittt	mi
 800261c:	6833      	ldrmi	r3, [r6, #0]
 800261e:	3302      	addmi	r3, #2
 8002620:	6033      	strmi	r3, [r6, #0]
 8002622:	6825      	ldr	r5, [r4, #0]
 8002624:	f015 0506 	ands.w	r5, r5, #6
 8002628:	d106      	bne.n	8002638 <_printf_common+0x48>
 800262a:	f104 0a19 	add.w	sl, r4, #25
 800262e:	68e3      	ldr	r3, [r4, #12]
 8002630:	6832      	ldr	r2, [r6, #0]
 8002632:	1a9b      	subs	r3, r3, r2
 8002634:	42ab      	cmp	r3, r5
 8002636:	dc26      	bgt.n	8002686 <_printf_common+0x96>
 8002638:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800263c:	1e13      	subs	r3, r2, #0
 800263e:	6822      	ldr	r2, [r4, #0]
 8002640:	bf18      	it	ne
 8002642:	2301      	movne	r3, #1
 8002644:	0692      	lsls	r2, r2, #26
 8002646:	d42b      	bmi.n	80026a0 <_printf_common+0xb0>
 8002648:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800264c:	4649      	mov	r1, r9
 800264e:	4638      	mov	r0, r7
 8002650:	47c0      	blx	r8
 8002652:	3001      	adds	r0, #1
 8002654:	d01e      	beq.n	8002694 <_printf_common+0xa4>
 8002656:	6823      	ldr	r3, [r4, #0]
 8002658:	68e5      	ldr	r5, [r4, #12]
 800265a:	6832      	ldr	r2, [r6, #0]
 800265c:	f003 0306 	and.w	r3, r3, #6
 8002660:	2b04      	cmp	r3, #4
 8002662:	bf08      	it	eq
 8002664:	1aad      	subeq	r5, r5, r2
 8002666:	68a3      	ldr	r3, [r4, #8]
 8002668:	6922      	ldr	r2, [r4, #16]
 800266a:	bf0c      	ite	eq
 800266c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002670:	2500      	movne	r5, #0
 8002672:	4293      	cmp	r3, r2
 8002674:	bfc4      	itt	gt
 8002676:	1a9b      	subgt	r3, r3, r2
 8002678:	18ed      	addgt	r5, r5, r3
 800267a:	2600      	movs	r6, #0
 800267c:	341a      	adds	r4, #26
 800267e:	42b5      	cmp	r5, r6
 8002680:	d11a      	bne.n	80026b8 <_printf_common+0xc8>
 8002682:	2000      	movs	r0, #0
 8002684:	e008      	b.n	8002698 <_printf_common+0xa8>
 8002686:	2301      	movs	r3, #1
 8002688:	4652      	mov	r2, sl
 800268a:	4649      	mov	r1, r9
 800268c:	4638      	mov	r0, r7
 800268e:	47c0      	blx	r8
 8002690:	3001      	adds	r0, #1
 8002692:	d103      	bne.n	800269c <_printf_common+0xac>
 8002694:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002698:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800269c:	3501      	adds	r5, #1
 800269e:	e7c6      	b.n	800262e <_printf_common+0x3e>
 80026a0:	18e1      	adds	r1, r4, r3
 80026a2:	1c5a      	adds	r2, r3, #1
 80026a4:	2030      	movs	r0, #48	; 0x30
 80026a6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80026aa:	4422      	add	r2, r4
 80026ac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80026b0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80026b4:	3302      	adds	r3, #2
 80026b6:	e7c7      	b.n	8002648 <_printf_common+0x58>
 80026b8:	2301      	movs	r3, #1
 80026ba:	4622      	mov	r2, r4
 80026bc:	4649      	mov	r1, r9
 80026be:	4638      	mov	r0, r7
 80026c0:	47c0      	blx	r8
 80026c2:	3001      	adds	r0, #1
 80026c4:	d0e6      	beq.n	8002694 <_printf_common+0xa4>
 80026c6:	3601      	adds	r6, #1
 80026c8:	e7d9      	b.n	800267e <_printf_common+0x8e>
	...

080026cc <_printf_i>:
 80026cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80026d0:	460c      	mov	r4, r1
 80026d2:	4691      	mov	r9, r2
 80026d4:	7e27      	ldrb	r7, [r4, #24]
 80026d6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80026d8:	2f78      	cmp	r7, #120	; 0x78
 80026da:	4680      	mov	r8, r0
 80026dc:	469a      	mov	sl, r3
 80026de:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80026e2:	d807      	bhi.n	80026f4 <_printf_i+0x28>
 80026e4:	2f62      	cmp	r7, #98	; 0x62
 80026e6:	d80a      	bhi.n	80026fe <_printf_i+0x32>
 80026e8:	2f00      	cmp	r7, #0
 80026ea:	f000 80d8 	beq.w	800289e <_printf_i+0x1d2>
 80026ee:	2f58      	cmp	r7, #88	; 0x58
 80026f0:	f000 80a3 	beq.w	800283a <_printf_i+0x16e>
 80026f4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80026f8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80026fc:	e03a      	b.n	8002774 <_printf_i+0xa8>
 80026fe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002702:	2b15      	cmp	r3, #21
 8002704:	d8f6      	bhi.n	80026f4 <_printf_i+0x28>
 8002706:	a001      	add	r0, pc, #4	; (adr r0, 800270c <_printf_i+0x40>)
 8002708:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 800270c:	08002765 	.word	0x08002765
 8002710:	08002779 	.word	0x08002779
 8002714:	080026f5 	.word	0x080026f5
 8002718:	080026f5 	.word	0x080026f5
 800271c:	080026f5 	.word	0x080026f5
 8002720:	080026f5 	.word	0x080026f5
 8002724:	08002779 	.word	0x08002779
 8002728:	080026f5 	.word	0x080026f5
 800272c:	080026f5 	.word	0x080026f5
 8002730:	080026f5 	.word	0x080026f5
 8002734:	080026f5 	.word	0x080026f5
 8002738:	08002885 	.word	0x08002885
 800273c:	080027a9 	.word	0x080027a9
 8002740:	08002867 	.word	0x08002867
 8002744:	080026f5 	.word	0x080026f5
 8002748:	080026f5 	.word	0x080026f5
 800274c:	080028a7 	.word	0x080028a7
 8002750:	080026f5 	.word	0x080026f5
 8002754:	080027a9 	.word	0x080027a9
 8002758:	080026f5 	.word	0x080026f5
 800275c:	080026f5 	.word	0x080026f5
 8002760:	0800286f 	.word	0x0800286f
 8002764:	680b      	ldr	r3, [r1, #0]
 8002766:	1d1a      	adds	r2, r3, #4
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	600a      	str	r2, [r1, #0]
 800276c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8002770:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002774:	2301      	movs	r3, #1
 8002776:	e0a3      	b.n	80028c0 <_printf_i+0x1f4>
 8002778:	6825      	ldr	r5, [r4, #0]
 800277a:	6808      	ldr	r0, [r1, #0]
 800277c:	062e      	lsls	r6, r5, #24
 800277e:	f100 0304 	add.w	r3, r0, #4
 8002782:	d50a      	bpl.n	800279a <_printf_i+0xce>
 8002784:	6805      	ldr	r5, [r0, #0]
 8002786:	600b      	str	r3, [r1, #0]
 8002788:	2d00      	cmp	r5, #0
 800278a:	da03      	bge.n	8002794 <_printf_i+0xc8>
 800278c:	232d      	movs	r3, #45	; 0x2d
 800278e:	426d      	negs	r5, r5
 8002790:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002794:	485e      	ldr	r0, [pc, #376]	; (8002910 <_printf_i+0x244>)
 8002796:	230a      	movs	r3, #10
 8002798:	e019      	b.n	80027ce <_printf_i+0x102>
 800279a:	f015 0f40 	tst.w	r5, #64	; 0x40
 800279e:	6805      	ldr	r5, [r0, #0]
 80027a0:	600b      	str	r3, [r1, #0]
 80027a2:	bf18      	it	ne
 80027a4:	b22d      	sxthne	r5, r5
 80027a6:	e7ef      	b.n	8002788 <_printf_i+0xbc>
 80027a8:	680b      	ldr	r3, [r1, #0]
 80027aa:	6825      	ldr	r5, [r4, #0]
 80027ac:	1d18      	adds	r0, r3, #4
 80027ae:	6008      	str	r0, [r1, #0]
 80027b0:	0628      	lsls	r0, r5, #24
 80027b2:	d501      	bpl.n	80027b8 <_printf_i+0xec>
 80027b4:	681d      	ldr	r5, [r3, #0]
 80027b6:	e002      	b.n	80027be <_printf_i+0xf2>
 80027b8:	0669      	lsls	r1, r5, #25
 80027ba:	d5fb      	bpl.n	80027b4 <_printf_i+0xe8>
 80027bc:	881d      	ldrh	r5, [r3, #0]
 80027be:	4854      	ldr	r0, [pc, #336]	; (8002910 <_printf_i+0x244>)
 80027c0:	2f6f      	cmp	r7, #111	; 0x6f
 80027c2:	bf0c      	ite	eq
 80027c4:	2308      	moveq	r3, #8
 80027c6:	230a      	movne	r3, #10
 80027c8:	2100      	movs	r1, #0
 80027ca:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80027ce:	6866      	ldr	r6, [r4, #4]
 80027d0:	60a6      	str	r6, [r4, #8]
 80027d2:	2e00      	cmp	r6, #0
 80027d4:	bfa2      	ittt	ge
 80027d6:	6821      	ldrge	r1, [r4, #0]
 80027d8:	f021 0104 	bicge.w	r1, r1, #4
 80027dc:	6021      	strge	r1, [r4, #0]
 80027de:	b90d      	cbnz	r5, 80027e4 <_printf_i+0x118>
 80027e0:	2e00      	cmp	r6, #0
 80027e2:	d04d      	beq.n	8002880 <_printf_i+0x1b4>
 80027e4:	4616      	mov	r6, r2
 80027e6:	fbb5 f1f3 	udiv	r1, r5, r3
 80027ea:	fb03 5711 	mls	r7, r3, r1, r5
 80027ee:	5dc7      	ldrb	r7, [r0, r7]
 80027f0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80027f4:	462f      	mov	r7, r5
 80027f6:	42bb      	cmp	r3, r7
 80027f8:	460d      	mov	r5, r1
 80027fa:	d9f4      	bls.n	80027e6 <_printf_i+0x11a>
 80027fc:	2b08      	cmp	r3, #8
 80027fe:	d10b      	bne.n	8002818 <_printf_i+0x14c>
 8002800:	6823      	ldr	r3, [r4, #0]
 8002802:	07df      	lsls	r7, r3, #31
 8002804:	d508      	bpl.n	8002818 <_printf_i+0x14c>
 8002806:	6923      	ldr	r3, [r4, #16]
 8002808:	6861      	ldr	r1, [r4, #4]
 800280a:	4299      	cmp	r1, r3
 800280c:	bfde      	ittt	le
 800280e:	2330      	movle	r3, #48	; 0x30
 8002810:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002814:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8002818:	1b92      	subs	r2, r2, r6
 800281a:	6122      	str	r2, [r4, #16]
 800281c:	f8cd a000 	str.w	sl, [sp]
 8002820:	464b      	mov	r3, r9
 8002822:	aa03      	add	r2, sp, #12
 8002824:	4621      	mov	r1, r4
 8002826:	4640      	mov	r0, r8
 8002828:	f7ff fee2 	bl	80025f0 <_printf_common>
 800282c:	3001      	adds	r0, #1
 800282e:	d14c      	bne.n	80028ca <_printf_i+0x1fe>
 8002830:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002834:	b004      	add	sp, #16
 8002836:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800283a:	4835      	ldr	r0, [pc, #212]	; (8002910 <_printf_i+0x244>)
 800283c:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8002840:	6823      	ldr	r3, [r4, #0]
 8002842:	680e      	ldr	r6, [r1, #0]
 8002844:	061f      	lsls	r7, r3, #24
 8002846:	f856 5b04 	ldr.w	r5, [r6], #4
 800284a:	600e      	str	r6, [r1, #0]
 800284c:	d514      	bpl.n	8002878 <_printf_i+0x1ac>
 800284e:	07d9      	lsls	r1, r3, #31
 8002850:	bf44      	itt	mi
 8002852:	f043 0320 	orrmi.w	r3, r3, #32
 8002856:	6023      	strmi	r3, [r4, #0]
 8002858:	b91d      	cbnz	r5, 8002862 <_printf_i+0x196>
 800285a:	6823      	ldr	r3, [r4, #0]
 800285c:	f023 0320 	bic.w	r3, r3, #32
 8002860:	6023      	str	r3, [r4, #0]
 8002862:	2310      	movs	r3, #16
 8002864:	e7b0      	b.n	80027c8 <_printf_i+0xfc>
 8002866:	6823      	ldr	r3, [r4, #0]
 8002868:	f043 0320 	orr.w	r3, r3, #32
 800286c:	6023      	str	r3, [r4, #0]
 800286e:	2378      	movs	r3, #120	; 0x78
 8002870:	4828      	ldr	r0, [pc, #160]	; (8002914 <_printf_i+0x248>)
 8002872:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002876:	e7e3      	b.n	8002840 <_printf_i+0x174>
 8002878:	065e      	lsls	r6, r3, #25
 800287a:	bf48      	it	mi
 800287c:	b2ad      	uxthmi	r5, r5
 800287e:	e7e6      	b.n	800284e <_printf_i+0x182>
 8002880:	4616      	mov	r6, r2
 8002882:	e7bb      	b.n	80027fc <_printf_i+0x130>
 8002884:	680b      	ldr	r3, [r1, #0]
 8002886:	6826      	ldr	r6, [r4, #0]
 8002888:	6960      	ldr	r0, [r4, #20]
 800288a:	1d1d      	adds	r5, r3, #4
 800288c:	600d      	str	r5, [r1, #0]
 800288e:	0635      	lsls	r5, r6, #24
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	d501      	bpl.n	8002898 <_printf_i+0x1cc>
 8002894:	6018      	str	r0, [r3, #0]
 8002896:	e002      	b.n	800289e <_printf_i+0x1d2>
 8002898:	0671      	lsls	r1, r6, #25
 800289a:	d5fb      	bpl.n	8002894 <_printf_i+0x1c8>
 800289c:	8018      	strh	r0, [r3, #0]
 800289e:	2300      	movs	r3, #0
 80028a0:	6123      	str	r3, [r4, #16]
 80028a2:	4616      	mov	r6, r2
 80028a4:	e7ba      	b.n	800281c <_printf_i+0x150>
 80028a6:	680b      	ldr	r3, [r1, #0]
 80028a8:	1d1a      	adds	r2, r3, #4
 80028aa:	600a      	str	r2, [r1, #0]
 80028ac:	681e      	ldr	r6, [r3, #0]
 80028ae:	6862      	ldr	r2, [r4, #4]
 80028b0:	2100      	movs	r1, #0
 80028b2:	4630      	mov	r0, r6
 80028b4:	f7fd fc9c 	bl	80001f0 <memchr>
 80028b8:	b108      	cbz	r0, 80028be <_printf_i+0x1f2>
 80028ba:	1b80      	subs	r0, r0, r6
 80028bc:	6060      	str	r0, [r4, #4]
 80028be:	6863      	ldr	r3, [r4, #4]
 80028c0:	6123      	str	r3, [r4, #16]
 80028c2:	2300      	movs	r3, #0
 80028c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80028c8:	e7a8      	b.n	800281c <_printf_i+0x150>
 80028ca:	6923      	ldr	r3, [r4, #16]
 80028cc:	4632      	mov	r2, r6
 80028ce:	4649      	mov	r1, r9
 80028d0:	4640      	mov	r0, r8
 80028d2:	47d0      	blx	sl
 80028d4:	3001      	adds	r0, #1
 80028d6:	d0ab      	beq.n	8002830 <_printf_i+0x164>
 80028d8:	6823      	ldr	r3, [r4, #0]
 80028da:	079b      	lsls	r3, r3, #30
 80028dc:	d413      	bmi.n	8002906 <_printf_i+0x23a>
 80028de:	68e0      	ldr	r0, [r4, #12]
 80028e0:	9b03      	ldr	r3, [sp, #12]
 80028e2:	4298      	cmp	r0, r3
 80028e4:	bfb8      	it	lt
 80028e6:	4618      	movlt	r0, r3
 80028e8:	e7a4      	b.n	8002834 <_printf_i+0x168>
 80028ea:	2301      	movs	r3, #1
 80028ec:	4632      	mov	r2, r6
 80028ee:	4649      	mov	r1, r9
 80028f0:	4640      	mov	r0, r8
 80028f2:	47d0      	blx	sl
 80028f4:	3001      	adds	r0, #1
 80028f6:	d09b      	beq.n	8002830 <_printf_i+0x164>
 80028f8:	3501      	adds	r5, #1
 80028fa:	68e3      	ldr	r3, [r4, #12]
 80028fc:	9903      	ldr	r1, [sp, #12]
 80028fe:	1a5b      	subs	r3, r3, r1
 8002900:	42ab      	cmp	r3, r5
 8002902:	dcf2      	bgt.n	80028ea <_printf_i+0x21e>
 8002904:	e7eb      	b.n	80028de <_printf_i+0x212>
 8002906:	2500      	movs	r5, #0
 8002908:	f104 0619 	add.w	r6, r4, #25
 800290c:	e7f5      	b.n	80028fa <_printf_i+0x22e>
 800290e:	bf00      	nop
 8002910:	08004a46 	.word	0x08004a46
 8002914:	08004a57 	.word	0x08004a57

08002918 <_puts_r>:
 8002918:	b570      	push	{r4, r5, r6, lr}
 800291a:	460e      	mov	r6, r1
 800291c:	4605      	mov	r5, r0
 800291e:	b118      	cbz	r0, 8002928 <_puts_r+0x10>
 8002920:	6983      	ldr	r3, [r0, #24]
 8002922:	b90b      	cbnz	r3, 8002928 <_puts_r+0x10>
 8002924:	f001 f8f0 	bl	8003b08 <__sinit>
 8002928:	69ab      	ldr	r3, [r5, #24]
 800292a:	68ac      	ldr	r4, [r5, #8]
 800292c:	b913      	cbnz	r3, 8002934 <_puts_r+0x1c>
 800292e:	4628      	mov	r0, r5
 8002930:	f001 f8ea 	bl	8003b08 <__sinit>
 8002934:	4b2c      	ldr	r3, [pc, #176]	; (80029e8 <_puts_r+0xd0>)
 8002936:	429c      	cmp	r4, r3
 8002938:	d120      	bne.n	800297c <_puts_r+0x64>
 800293a:	686c      	ldr	r4, [r5, #4]
 800293c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800293e:	07db      	lsls	r3, r3, #31
 8002940:	d405      	bmi.n	800294e <_puts_r+0x36>
 8002942:	89a3      	ldrh	r3, [r4, #12]
 8002944:	0598      	lsls	r0, r3, #22
 8002946:	d402      	bmi.n	800294e <_puts_r+0x36>
 8002948:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800294a:	f001 f992 	bl	8003c72 <__retarget_lock_acquire_recursive>
 800294e:	89a3      	ldrh	r3, [r4, #12]
 8002950:	0719      	lsls	r1, r3, #28
 8002952:	d51d      	bpl.n	8002990 <_puts_r+0x78>
 8002954:	6923      	ldr	r3, [r4, #16]
 8002956:	b1db      	cbz	r3, 8002990 <_puts_r+0x78>
 8002958:	3e01      	subs	r6, #1
 800295a:	68a3      	ldr	r3, [r4, #8]
 800295c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002960:	3b01      	subs	r3, #1
 8002962:	60a3      	str	r3, [r4, #8]
 8002964:	bb39      	cbnz	r1, 80029b6 <_puts_r+0x9e>
 8002966:	2b00      	cmp	r3, #0
 8002968:	da38      	bge.n	80029dc <_puts_r+0xc4>
 800296a:	4622      	mov	r2, r4
 800296c:	210a      	movs	r1, #10
 800296e:	4628      	mov	r0, r5
 8002970:	f000 f858 	bl	8002a24 <__swbuf_r>
 8002974:	3001      	adds	r0, #1
 8002976:	d011      	beq.n	800299c <_puts_r+0x84>
 8002978:	250a      	movs	r5, #10
 800297a:	e011      	b.n	80029a0 <_puts_r+0x88>
 800297c:	4b1b      	ldr	r3, [pc, #108]	; (80029ec <_puts_r+0xd4>)
 800297e:	429c      	cmp	r4, r3
 8002980:	d101      	bne.n	8002986 <_puts_r+0x6e>
 8002982:	68ac      	ldr	r4, [r5, #8]
 8002984:	e7da      	b.n	800293c <_puts_r+0x24>
 8002986:	4b1a      	ldr	r3, [pc, #104]	; (80029f0 <_puts_r+0xd8>)
 8002988:	429c      	cmp	r4, r3
 800298a:	bf08      	it	eq
 800298c:	68ec      	ldreq	r4, [r5, #12]
 800298e:	e7d5      	b.n	800293c <_puts_r+0x24>
 8002990:	4621      	mov	r1, r4
 8002992:	4628      	mov	r0, r5
 8002994:	f000 f898 	bl	8002ac8 <__swsetup_r>
 8002998:	2800      	cmp	r0, #0
 800299a:	d0dd      	beq.n	8002958 <_puts_r+0x40>
 800299c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80029a0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80029a2:	07da      	lsls	r2, r3, #31
 80029a4:	d405      	bmi.n	80029b2 <_puts_r+0x9a>
 80029a6:	89a3      	ldrh	r3, [r4, #12]
 80029a8:	059b      	lsls	r3, r3, #22
 80029aa:	d402      	bmi.n	80029b2 <_puts_r+0x9a>
 80029ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80029ae:	f001 f961 	bl	8003c74 <__retarget_lock_release_recursive>
 80029b2:	4628      	mov	r0, r5
 80029b4:	bd70      	pop	{r4, r5, r6, pc}
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	da04      	bge.n	80029c4 <_puts_r+0xac>
 80029ba:	69a2      	ldr	r2, [r4, #24]
 80029bc:	429a      	cmp	r2, r3
 80029be:	dc06      	bgt.n	80029ce <_puts_r+0xb6>
 80029c0:	290a      	cmp	r1, #10
 80029c2:	d004      	beq.n	80029ce <_puts_r+0xb6>
 80029c4:	6823      	ldr	r3, [r4, #0]
 80029c6:	1c5a      	adds	r2, r3, #1
 80029c8:	6022      	str	r2, [r4, #0]
 80029ca:	7019      	strb	r1, [r3, #0]
 80029cc:	e7c5      	b.n	800295a <_puts_r+0x42>
 80029ce:	4622      	mov	r2, r4
 80029d0:	4628      	mov	r0, r5
 80029d2:	f000 f827 	bl	8002a24 <__swbuf_r>
 80029d6:	3001      	adds	r0, #1
 80029d8:	d1bf      	bne.n	800295a <_puts_r+0x42>
 80029da:	e7df      	b.n	800299c <_puts_r+0x84>
 80029dc:	6823      	ldr	r3, [r4, #0]
 80029de:	250a      	movs	r5, #10
 80029e0:	1c5a      	adds	r2, r3, #1
 80029e2:	6022      	str	r2, [r4, #0]
 80029e4:	701d      	strb	r5, [r3, #0]
 80029e6:	e7db      	b.n	80029a0 <_puts_r+0x88>
 80029e8:	08004b58 	.word	0x08004b58
 80029ec:	08004b78 	.word	0x08004b78
 80029f0:	08004b38 	.word	0x08004b38

080029f4 <puts>:
 80029f4:	4b02      	ldr	r3, [pc, #8]	; (8002a00 <puts+0xc>)
 80029f6:	4601      	mov	r1, r0
 80029f8:	6818      	ldr	r0, [r3, #0]
 80029fa:	f7ff bf8d 	b.w	8002918 <_puts_r>
 80029fe:	bf00      	nop
 8002a00:	20000000 	.word	0x20000000

08002a04 <_sbrk_r>:
 8002a04:	b538      	push	{r3, r4, r5, lr}
 8002a06:	4d06      	ldr	r5, [pc, #24]	; (8002a20 <_sbrk_r+0x1c>)
 8002a08:	2300      	movs	r3, #0
 8002a0a:	4604      	mov	r4, r0
 8002a0c:	4608      	mov	r0, r1
 8002a0e:	602b      	str	r3, [r5, #0]
 8002a10:	f001 ffe4 	bl	80049dc <_sbrk>
 8002a14:	1c43      	adds	r3, r0, #1
 8002a16:	d102      	bne.n	8002a1e <_sbrk_r+0x1a>
 8002a18:	682b      	ldr	r3, [r5, #0]
 8002a1a:	b103      	cbz	r3, 8002a1e <_sbrk_r+0x1a>
 8002a1c:	6023      	str	r3, [r4, #0]
 8002a1e:	bd38      	pop	{r3, r4, r5, pc}
 8002a20:	20000210 	.word	0x20000210

08002a24 <__swbuf_r>:
 8002a24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a26:	460e      	mov	r6, r1
 8002a28:	4614      	mov	r4, r2
 8002a2a:	4605      	mov	r5, r0
 8002a2c:	b118      	cbz	r0, 8002a36 <__swbuf_r+0x12>
 8002a2e:	6983      	ldr	r3, [r0, #24]
 8002a30:	b90b      	cbnz	r3, 8002a36 <__swbuf_r+0x12>
 8002a32:	f001 f869 	bl	8003b08 <__sinit>
 8002a36:	4b21      	ldr	r3, [pc, #132]	; (8002abc <__swbuf_r+0x98>)
 8002a38:	429c      	cmp	r4, r3
 8002a3a:	d12b      	bne.n	8002a94 <__swbuf_r+0x70>
 8002a3c:	686c      	ldr	r4, [r5, #4]
 8002a3e:	69a3      	ldr	r3, [r4, #24]
 8002a40:	60a3      	str	r3, [r4, #8]
 8002a42:	89a3      	ldrh	r3, [r4, #12]
 8002a44:	071a      	lsls	r2, r3, #28
 8002a46:	d52f      	bpl.n	8002aa8 <__swbuf_r+0x84>
 8002a48:	6923      	ldr	r3, [r4, #16]
 8002a4a:	b36b      	cbz	r3, 8002aa8 <__swbuf_r+0x84>
 8002a4c:	6923      	ldr	r3, [r4, #16]
 8002a4e:	6820      	ldr	r0, [r4, #0]
 8002a50:	1ac0      	subs	r0, r0, r3
 8002a52:	6963      	ldr	r3, [r4, #20]
 8002a54:	b2f6      	uxtb	r6, r6
 8002a56:	4283      	cmp	r3, r0
 8002a58:	4637      	mov	r7, r6
 8002a5a:	dc04      	bgt.n	8002a66 <__swbuf_r+0x42>
 8002a5c:	4621      	mov	r1, r4
 8002a5e:	4628      	mov	r0, r5
 8002a60:	f000 ffbe 	bl	80039e0 <_fflush_r>
 8002a64:	bb30      	cbnz	r0, 8002ab4 <__swbuf_r+0x90>
 8002a66:	68a3      	ldr	r3, [r4, #8]
 8002a68:	3b01      	subs	r3, #1
 8002a6a:	60a3      	str	r3, [r4, #8]
 8002a6c:	6823      	ldr	r3, [r4, #0]
 8002a6e:	1c5a      	adds	r2, r3, #1
 8002a70:	6022      	str	r2, [r4, #0]
 8002a72:	701e      	strb	r6, [r3, #0]
 8002a74:	6963      	ldr	r3, [r4, #20]
 8002a76:	3001      	adds	r0, #1
 8002a78:	4283      	cmp	r3, r0
 8002a7a:	d004      	beq.n	8002a86 <__swbuf_r+0x62>
 8002a7c:	89a3      	ldrh	r3, [r4, #12]
 8002a7e:	07db      	lsls	r3, r3, #31
 8002a80:	d506      	bpl.n	8002a90 <__swbuf_r+0x6c>
 8002a82:	2e0a      	cmp	r6, #10
 8002a84:	d104      	bne.n	8002a90 <__swbuf_r+0x6c>
 8002a86:	4621      	mov	r1, r4
 8002a88:	4628      	mov	r0, r5
 8002a8a:	f000 ffa9 	bl	80039e0 <_fflush_r>
 8002a8e:	b988      	cbnz	r0, 8002ab4 <__swbuf_r+0x90>
 8002a90:	4638      	mov	r0, r7
 8002a92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a94:	4b0a      	ldr	r3, [pc, #40]	; (8002ac0 <__swbuf_r+0x9c>)
 8002a96:	429c      	cmp	r4, r3
 8002a98:	d101      	bne.n	8002a9e <__swbuf_r+0x7a>
 8002a9a:	68ac      	ldr	r4, [r5, #8]
 8002a9c:	e7cf      	b.n	8002a3e <__swbuf_r+0x1a>
 8002a9e:	4b09      	ldr	r3, [pc, #36]	; (8002ac4 <__swbuf_r+0xa0>)
 8002aa0:	429c      	cmp	r4, r3
 8002aa2:	bf08      	it	eq
 8002aa4:	68ec      	ldreq	r4, [r5, #12]
 8002aa6:	e7ca      	b.n	8002a3e <__swbuf_r+0x1a>
 8002aa8:	4621      	mov	r1, r4
 8002aaa:	4628      	mov	r0, r5
 8002aac:	f000 f80c 	bl	8002ac8 <__swsetup_r>
 8002ab0:	2800      	cmp	r0, #0
 8002ab2:	d0cb      	beq.n	8002a4c <__swbuf_r+0x28>
 8002ab4:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8002ab8:	e7ea      	b.n	8002a90 <__swbuf_r+0x6c>
 8002aba:	bf00      	nop
 8002abc:	08004b58 	.word	0x08004b58
 8002ac0:	08004b78 	.word	0x08004b78
 8002ac4:	08004b38 	.word	0x08004b38

08002ac8 <__swsetup_r>:
 8002ac8:	4b32      	ldr	r3, [pc, #200]	; (8002b94 <__swsetup_r+0xcc>)
 8002aca:	b570      	push	{r4, r5, r6, lr}
 8002acc:	681d      	ldr	r5, [r3, #0]
 8002ace:	4606      	mov	r6, r0
 8002ad0:	460c      	mov	r4, r1
 8002ad2:	b125      	cbz	r5, 8002ade <__swsetup_r+0x16>
 8002ad4:	69ab      	ldr	r3, [r5, #24]
 8002ad6:	b913      	cbnz	r3, 8002ade <__swsetup_r+0x16>
 8002ad8:	4628      	mov	r0, r5
 8002ada:	f001 f815 	bl	8003b08 <__sinit>
 8002ade:	4b2e      	ldr	r3, [pc, #184]	; (8002b98 <__swsetup_r+0xd0>)
 8002ae0:	429c      	cmp	r4, r3
 8002ae2:	d10f      	bne.n	8002b04 <__swsetup_r+0x3c>
 8002ae4:	686c      	ldr	r4, [r5, #4]
 8002ae6:	89a3      	ldrh	r3, [r4, #12]
 8002ae8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002aec:	0719      	lsls	r1, r3, #28
 8002aee:	d42c      	bmi.n	8002b4a <__swsetup_r+0x82>
 8002af0:	06dd      	lsls	r5, r3, #27
 8002af2:	d411      	bmi.n	8002b18 <__swsetup_r+0x50>
 8002af4:	2309      	movs	r3, #9
 8002af6:	6033      	str	r3, [r6, #0]
 8002af8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8002afc:	81a3      	strh	r3, [r4, #12]
 8002afe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002b02:	e03e      	b.n	8002b82 <__swsetup_r+0xba>
 8002b04:	4b25      	ldr	r3, [pc, #148]	; (8002b9c <__swsetup_r+0xd4>)
 8002b06:	429c      	cmp	r4, r3
 8002b08:	d101      	bne.n	8002b0e <__swsetup_r+0x46>
 8002b0a:	68ac      	ldr	r4, [r5, #8]
 8002b0c:	e7eb      	b.n	8002ae6 <__swsetup_r+0x1e>
 8002b0e:	4b24      	ldr	r3, [pc, #144]	; (8002ba0 <__swsetup_r+0xd8>)
 8002b10:	429c      	cmp	r4, r3
 8002b12:	bf08      	it	eq
 8002b14:	68ec      	ldreq	r4, [r5, #12]
 8002b16:	e7e6      	b.n	8002ae6 <__swsetup_r+0x1e>
 8002b18:	0758      	lsls	r0, r3, #29
 8002b1a:	d512      	bpl.n	8002b42 <__swsetup_r+0x7a>
 8002b1c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002b1e:	b141      	cbz	r1, 8002b32 <__swsetup_r+0x6a>
 8002b20:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002b24:	4299      	cmp	r1, r3
 8002b26:	d002      	beq.n	8002b2e <__swsetup_r+0x66>
 8002b28:	4630      	mov	r0, r6
 8002b2a:	f7ff f9f1 	bl	8001f10 <_free_r>
 8002b2e:	2300      	movs	r3, #0
 8002b30:	6363      	str	r3, [r4, #52]	; 0x34
 8002b32:	89a3      	ldrh	r3, [r4, #12]
 8002b34:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8002b38:	81a3      	strh	r3, [r4, #12]
 8002b3a:	2300      	movs	r3, #0
 8002b3c:	6063      	str	r3, [r4, #4]
 8002b3e:	6923      	ldr	r3, [r4, #16]
 8002b40:	6023      	str	r3, [r4, #0]
 8002b42:	89a3      	ldrh	r3, [r4, #12]
 8002b44:	f043 0308 	orr.w	r3, r3, #8
 8002b48:	81a3      	strh	r3, [r4, #12]
 8002b4a:	6923      	ldr	r3, [r4, #16]
 8002b4c:	b94b      	cbnz	r3, 8002b62 <__swsetup_r+0x9a>
 8002b4e:	89a3      	ldrh	r3, [r4, #12]
 8002b50:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8002b54:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002b58:	d003      	beq.n	8002b62 <__swsetup_r+0x9a>
 8002b5a:	4621      	mov	r1, r4
 8002b5c:	4630      	mov	r0, r6
 8002b5e:	f001 f8af 	bl	8003cc0 <__smakebuf_r>
 8002b62:	89a0      	ldrh	r0, [r4, #12]
 8002b64:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002b68:	f010 0301 	ands.w	r3, r0, #1
 8002b6c:	d00a      	beq.n	8002b84 <__swsetup_r+0xbc>
 8002b6e:	2300      	movs	r3, #0
 8002b70:	60a3      	str	r3, [r4, #8]
 8002b72:	6963      	ldr	r3, [r4, #20]
 8002b74:	425b      	negs	r3, r3
 8002b76:	61a3      	str	r3, [r4, #24]
 8002b78:	6923      	ldr	r3, [r4, #16]
 8002b7a:	b943      	cbnz	r3, 8002b8e <__swsetup_r+0xc6>
 8002b7c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8002b80:	d1ba      	bne.n	8002af8 <__swsetup_r+0x30>
 8002b82:	bd70      	pop	{r4, r5, r6, pc}
 8002b84:	0781      	lsls	r1, r0, #30
 8002b86:	bf58      	it	pl
 8002b88:	6963      	ldrpl	r3, [r4, #20]
 8002b8a:	60a3      	str	r3, [r4, #8]
 8002b8c:	e7f4      	b.n	8002b78 <__swsetup_r+0xb0>
 8002b8e:	2000      	movs	r0, #0
 8002b90:	e7f7      	b.n	8002b82 <__swsetup_r+0xba>
 8002b92:	bf00      	nop
 8002b94:	20000000 	.word	0x20000000
 8002b98:	08004b58 	.word	0x08004b58
 8002b9c:	08004b78 	.word	0x08004b78
 8002ba0:	08004b38 	.word	0x08004b38

08002ba4 <__assert_func>:
 8002ba4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002ba6:	4614      	mov	r4, r2
 8002ba8:	461a      	mov	r2, r3
 8002baa:	4b09      	ldr	r3, [pc, #36]	; (8002bd0 <__assert_func+0x2c>)
 8002bac:	681b      	ldr	r3, [r3, #0]
 8002bae:	4605      	mov	r5, r0
 8002bb0:	68d8      	ldr	r0, [r3, #12]
 8002bb2:	b14c      	cbz	r4, 8002bc8 <__assert_func+0x24>
 8002bb4:	4b07      	ldr	r3, [pc, #28]	; (8002bd4 <__assert_func+0x30>)
 8002bb6:	9100      	str	r1, [sp, #0]
 8002bb8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002bbc:	4906      	ldr	r1, [pc, #24]	; (8002bd8 <__assert_func+0x34>)
 8002bbe:	462b      	mov	r3, r5
 8002bc0:	f001 f820 	bl	8003c04 <fiprintf>
 8002bc4:	f001 fe10 	bl	80047e8 <abort>
 8002bc8:	4b04      	ldr	r3, [pc, #16]	; (8002bdc <__assert_func+0x38>)
 8002bca:	461c      	mov	r4, r3
 8002bcc:	e7f3      	b.n	8002bb6 <__assert_func+0x12>
 8002bce:	bf00      	nop
 8002bd0:	20000000 	.word	0x20000000
 8002bd4:	08004a68 	.word	0x08004a68
 8002bd8:	08004a75 	.word	0x08004a75
 8002bdc:	08004aa3 	.word	0x08004aa3

08002be0 <quorem>:
 8002be0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002be4:	6903      	ldr	r3, [r0, #16]
 8002be6:	690c      	ldr	r4, [r1, #16]
 8002be8:	42a3      	cmp	r3, r4
 8002bea:	4607      	mov	r7, r0
 8002bec:	f2c0 8081 	blt.w	8002cf2 <quorem+0x112>
 8002bf0:	3c01      	subs	r4, #1
 8002bf2:	f101 0814 	add.w	r8, r1, #20
 8002bf6:	f100 0514 	add.w	r5, r0, #20
 8002bfa:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002bfe:	9301      	str	r3, [sp, #4]
 8002c00:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002c04:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002c08:	3301      	adds	r3, #1
 8002c0a:	429a      	cmp	r2, r3
 8002c0c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002c10:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002c14:	fbb2 f6f3 	udiv	r6, r2, r3
 8002c18:	d331      	bcc.n	8002c7e <quorem+0x9e>
 8002c1a:	f04f 0e00 	mov.w	lr, #0
 8002c1e:	4640      	mov	r0, r8
 8002c20:	46ac      	mov	ip, r5
 8002c22:	46f2      	mov	sl, lr
 8002c24:	f850 2b04 	ldr.w	r2, [r0], #4
 8002c28:	b293      	uxth	r3, r2
 8002c2a:	fb06 e303 	mla	r3, r6, r3, lr
 8002c2e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8002c32:	b29b      	uxth	r3, r3
 8002c34:	ebaa 0303 	sub.w	r3, sl, r3
 8002c38:	0c12      	lsrs	r2, r2, #16
 8002c3a:	f8dc a000 	ldr.w	sl, [ip]
 8002c3e:	fb06 e202 	mla	r2, r6, r2, lr
 8002c42:	fa13 f38a 	uxtah	r3, r3, sl
 8002c46:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002c4a:	fa1f fa82 	uxth.w	sl, r2
 8002c4e:	f8dc 2000 	ldr.w	r2, [ip]
 8002c52:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 8002c56:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002c5a:	b29b      	uxth	r3, r3
 8002c5c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002c60:	4581      	cmp	r9, r0
 8002c62:	f84c 3b04 	str.w	r3, [ip], #4
 8002c66:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002c6a:	d2db      	bcs.n	8002c24 <quorem+0x44>
 8002c6c:	f855 300b 	ldr.w	r3, [r5, fp]
 8002c70:	b92b      	cbnz	r3, 8002c7e <quorem+0x9e>
 8002c72:	9b01      	ldr	r3, [sp, #4]
 8002c74:	3b04      	subs	r3, #4
 8002c76:	429d      	cmp	r5, r3
 8002c78:	461a      	mov	r2, r3
 8002c7a:	d32e      	bcc.n	8002cda <quorem+0xfa>
 8002c7c:	613c      	str	r4, [r7, #16]
 8002c7e:	4638      	mov	r0, r7
 8002c80:	f001 faf4 	bl	800426c <__mcmp>
 8002c84:	2800      	cmp	r0, #0
 8002c86:	db24      	blt.n	8002cd2 <quorem+0xf2>
 8002c88:	3601      	adds	r6, #1
 8002c8a:	4628      	mov	r0, r5
 8002c8c:	f04f 0c00 	mov.w	ip, #0
 8002c90:	f858 2b04 	ldr.w	r2, [r8], #4
 8002c94:	f8d0 e000 	ldr.w	lr, [r0]
 8002c98:	b293      	uxth	r3, r2
 8002c9a:	ebac 0303 	sub.w	r3, ip, r3
 8002c9e:	0c12      	lsrs	r2, r2, #16
 8002ca0:	fa13 f38e 	uxtah	r3, r3, lr
 8002ca4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8002ca8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002cac:	b29b      	uxth	r3, r3
 8002cae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002cb2:	45c1      	cmp	r9, r8
 8002cb4:	f840 3b04 	str.w	r3, [r0], #4
 8002cb8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8002cbc:	d2e8      	bcs.n	8002c90 <quorem+0xb0>
 8002cbe:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002cc2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002cc6:	b922      	cbnz	r2, 8002cd2 <quorem+0xf2>
 8002cc8:	3b04      	subs	r3, #4
 8002cca:	429d      	cmp	r5, r3
 8002ccc:	461a      	mov	r2, r3
 8002cce:	d30a      	bcc.n	8002ce6 <quorem+0x106>
 8002cd0:	613c      	str	r4, [r7, #16]
 8002cd2:	4630      	mov	r0, r6
 8002cd4:	b003      	add	sp, #12
 8002cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002cda:	6812      	ldr	r2, [r2, #0]
 8002cdc:	3b04      	subs	r3, #4
 8002cde:	2a00      	cmp	r2, #0
 8002ce0:	d1cc      	bne.n	8002c7c <quorem+0x9c>
 8002ce2:	3c01      	subs	r4, #1
 8002ce4:	e7c7      	b.n	8002c76 <quorem+0x96>
 8002ce6:	6812      	ldr	r2, [r2, #0]
 8002ce8:	3b04      	subs	r3, #4
 8002cea:	2a00      	cmp	r2, #0
 8002cec:	d1f0      	bne.n	8002cd0 <quorem+0xf0>
 8002cee:	3c01      	subs	r4, #1
 8002cf0:	e7eb      	b.n	8002cca <quorem+0xea>
 8002cf2:	2000      	movs	r0, #0
 8002cf4:	e7ee      	b.n	8002cd4 <quorem+0xf4>
	...

08002cf8 <_dtoa_r>:
 8002cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cfc:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8002cfe:	b099      	sub	sp, #100	; 0x64
 8002d00:	4616      	mov	r6, r2
 8002d02:	461f      	mov	r7, r3
 8002d04:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8002d08:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8002d0c:	4605      	mov	r5, r0
 8002d0e:	b974      	cbnz	r4, 8002d2e <_dtoa_r+0x36>
 8002d10:	2010      	movs	r0, #16
 8002d12:	f7ff f8ed 	bl	8001ef0 <malloc>
 8002d16:	4602      	mov	r2, r0
 8002d18:	6268      	str	r0, [r5, #36]	; 0x24
 8002d1a:	b920      	cbnz	r0, 8002d26 <_dtoa_r+0x2e>
 8002d1c:	4ba8      	ldr	r3, [pc, #672]	; (8002fc0 <_dtoa_r+0x2c8>)
 8002d1e:	21ea      	movs	r1, #234	; 0xea
 8002d20:	48a8      	ldr	r0, [pc, #672]	; (8002fc4 <_dtoa_r+0x2cc>)
 8002d22:	f7ff ff3f 	bl	8002ba4 <__assert_func>
 8002d26:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002d2a:	6004      	str	r4, [r0, #0]
 8002d2c:	60c4      	str	r4, [r0, #12]
 8002d2e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002d30:	6819      	ldr	r1, [r3, #0]
 8002d32:	b151      	cbz	r1, 8002d4a <_dtoa_r+0x52>
 8002d34:	685a      	ldr	r2, [r3, #4]
 8002d36:	604a      	str	r2, [r1, #4]
 8002d38:	2301      	movs	r3, #1
 8002d3a:	4093      	lsls	r3, r2
 8002d3c:	608b      	str	r3, [r1, #8]
 8002d3e:	4628      	mov	r0, r5
 8002d40:	f001 f858 	bl	8003df4 <_Bfree>
 8002d44:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002d46:	2200      	movs	r2, #0
 8002d48:	601a      	str	r2, [r3, #0]
 8002d4a:	1e3b      	subs	r3, r7, #0
 8002d4c:	bfb9      	ittee	lt
 8002d4e:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002d52:	9305      	strlt	r3, [sp, #20]
 8002d54:	2300      	movge	r3, #0
 8002d56:	f8c8 3000 	strge.w	r3, [r8]
 8002d5a:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8002d5e:	4b9a      	ldr	r3, [pc, #616]	; (8002fc8 <_dtoa_r+0x2d0>)
 8002d60:	bfbc      	itt	lt
 8002d62:	2201      	movlt	r2, #1
 8002d64:	f8c8 2000 	strlt.w	r2, [r8]
 8002d68:	ea33 0309 	bics.w	r3, r3, r9
 8002d6c:	d119      	bne.n	8002da2 <_dtoa_r+0xaa>
 8002d6e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002d70:	f242 730f 	movw	r3, #9999	; 0x270f
 8002d74:	6013      	str	r3, [r2, #0]
 8002d76:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002d7a:	4333      	orrs	r3, r6
 8002d7c:	f000 8581 	beq.w	8003882 <_dtoa_r+0xb8a>
 8002d80:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002d82:	b953      	cbnz	r3, 8002d9a <_dtoa_r+0xa2>
 8002d84:	4b91      	ldr	r3, [pc, #580]	; (8002fcc <_dtoa_r+0x2d4>)
 8002d86:	e022      	b.n	8002dce <_dtoa_r+0xd6>
 8002d88:	4b91      	ldr	r3, [pc, #580]	; (8002fd0 <_dtoa_r+0x2d8>)
 8002d8a:	9308      	str	r3, [sp, #32]
 8002d8c:	3308      	adds	r3, #8
 8002d8e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8002d90:	6013      	str	r3, [r2, #0]
 8002d92:	9808      	ldr	r0, [sp, #32]
 8002d94:	b019      	add	sp, #100	; 0x64
 8002d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d9a:	4b8c      	ldr	r3, [pc, #560]	; (8002fcc <_dtoa_r+0x2d4>)
 8002d9c:	9308      	str	r3, [sp, #32]
 8002d9e:	3303      	adds	r3, #3
 8002da0:	e7f5      	b.n	8002d8e <_dtoa_r+0x96>
 8002da2:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8002da6:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8002daa:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002dae:	2200      	movs	r2, #0
 8002db0:	2300      	movs	r3, #0
 8002db2:	f7fd fe91 	bl	8000ad8 <__aeabi_dcmpeq>
 8002db6:	4680      	mov	r8, r0
 8002db8:	b158      	cbz	r0, 8002dd2 <_dtoa_r+0xda>
 8002dba:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002dbc:	2301      	movs	r3, #1
 8002dbe:	6013      	str	r3, [r2, #0]
 8002dc0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	f000 855a 	beq.w	800387c <_dtoa_r+0xb84>
 8002dc8:	4882      	ldr	r0, [pc, #520]	; (8002fd4 <_dtoa_r+0x2dc>)
 8002dca:	6018      	str	r0, [r3, #0]
 8002dcc:	1e43      	subs	r3, r0, #1
 8002dce:	9308      	str	r3, [sp, #32]
 8002dd0:	e7df      	b.n	8002d92 <_dtoa_r+0x9a>
 8002dd2:	ab16      	add	r3, sp, #88	; 0x58
 8002dd4:	9301      	str	r3, [sp, #4]
 8002dd6:	ab17      	add	r3, sp, #92	; 0x5c
 8002dd8:	9300      	str	r3, [sp, #0]
 8002dda:	4628      	mov	r0, r5
 8002ddc:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002de0:	f001 faea 	bl	80043b8 <__d2b>
 8002de4:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8002de8:	4682      	mov	sl, r0
 8002dea:	2c00      	cmp	r4, #0
 8002dec:	d07e      	beq.n	8002eec <_dtoa_r+0x1f4>
 8002dee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002df0:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8002df4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002df8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002dfc:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8002e00:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8002e04:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8002e08:	4b73      	ldr	r3, [pc, #460]	; (8002fd8 <_dtoa_r+0x2e0>)
 8002e0a:	2200      	movs	r2, #0
 8002e0c:	f7fd fa44 	bl	8000298 <__aeabi_dsub>
 8002e10:	a365      	add	r3, pc, #404	; (adr r3, 8002fa8 <_dtoa_r+0x2b0>)
 8002e12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e16:	f7fd fbf7 	bl	8000608 <__aeabi_dmul>
 8002e1a:	a365      	add	r3, pc, #404	; (adr r3, 8002fb0 <_dtoa_r+0x2b8>)
 8002e1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e20:	f7fd fa3c 	bl	800029c <__adddf3>
 8002e24:	4606      	mov	r6, r0
 8002e26:	4620      	mov	r0, r4
 8002e28:	460f      	mov	r7, r1
 8002e2a:	f7fd fb83 	bl	8000534 <__aeabi_i2d>
 8002e2e:	a362      	add	r3, pc, #392	; (adr r3, 8002fb8 <_dtoa_r+0x2c0>)
 8002e30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e34:	f7fd fbe8 	bl	8000608 <__aeabi_dmul>
 8002e38:	4602      	mov	r2, r0
 8002e3a:	460b      	mov	r3, r1
 8002e3c:	4630      	mov	r0, r6
 8002e3e:	4639      	mov	r1, r7
 8002e40:	f7fd fa2c 	bl	800029c <__adddf3>
 8002e44:	4606      	mov	r6, r0
 8002e46:	460f      	mov	r7, r1
 8002e48:	f7fd fe8e 	bl	8000b68 <__aeabi_d2iz>
 8002e4c:	2200      	movs	r2, #0
 8002e4e:	4681      	mov	r9, r0
 8002e50:	2300      	movs	r3, #0
 8002e52:	4630      	mov	r0, r6
 8002e54:	4639      	mov	r1, r7
 8002e56:	f7fd fe49 	bl	8000aec <__aeabi_dcmplt>
 8002e5a:	b148      	cbz	r0, 8002e70 <_dtoa_r+0x178>
 8002e5c:	4648      	mov	r0, r9
 8002e5e:	f7fd fb69 	bl	8000534 <__aeabi_i2d>
 8002e62:	4632      	mov	r2, r6
 8002e64:	463b      	mov	r3, r7
 8002e66:	f7fd fe37 	bl	8000ad8 <__aeabi_dcmpeq>
 8002e6a:	b908      	cbnz	r0, 8002e70 <_dtoa_r+0x178>
 8002e6c:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8002e70:	f1b9 0f16 	cmp.w	r9, #22
 8002e74:	d857      	bhi.n	8002f26 <_dtoa_r+0x22e>
 8002e76:	4b59      	ldr	r3, [pc, #356]	; (8002fdc <_dtoa_r+0x2e4>)
 8002e78:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8002e7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e80:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002e84:	f7fd fe32 	bl	8000aec <__aeabi_dcmplt>
 8002e88:	2800      	cmp	r0, #0
 8002e8a:	d04e      	beq.n	8002f2a <_dtoa_r+0x232>
 8002e8c:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8002e90:	2300      	movs	r3, #0
 8002e92:	930f      	str	r3, [sp, #60]	; 0x3c
 8002e94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002e96:	1b1c      	subs	r4, r3, r4
 8002e98:	1e63      	subs	r3, r4, #1
 8002e9a:	9309      	str	r3, [sp, #36]	; 0x24
 8002e9c:	bf45      	ittet	mi
 8002e9e:	f1c4 0301 	rsbmi	r3, r4, #1
 8002ea2:	9306      	strmi	r3, [sp, #24]
 8002ea4:	2300      	movpl	r3, #0
 8002ea6:	2300      	movmi	r3, #0
 8002ea8:	bf4c      	ite	mi
 8002eaa:	9309      	strmi	r3, [sp, #36]	; 0x24
 8002eac:	9306      	strpl	r3, [sp, #24]
 8002eae:	f1b9 0f00 	cmp.w	r9, #0
 8002eb2:	db3c      	blt.n	8002f2e <_dtoa_r+0x236>
 8002eb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002eb6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8002eba:	444b      	add	r3, r9
 8002ebc:	9309      	str	r3, [sp, #36]	; 0x24
 8002ebe:	2300      	movs	r3, #0
 8002ec0:	930a      	str	r3, [sp, #40]	; 0x28
 8002ec2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002ec4:	2b09      	cmp	r3, #9
 8002ec6:	f200 808d 	bhi.w	8002fe4 <_dtoa_r+0x2ec>
 8002eca:	2b05      	cmp	r3, #5
 8002ecc:	bfc4      	itt	gt
 8002ece:	3b04      	subgt	r3, #4
 8002ed0:	9322      	strgt	r3, [sp, #136]	; 0x88
 8002ed2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002ed4:	f1a3 0302 	sub.w	r3, r3, #2
 8002ed8:	bfcc      	ite	gt
 8002eda:	2400      	movgt	r4, #0
 8002edc:	2401      	movle	r4, #1
 8002ede:	2b03      	cmp	r3, #3
 8002ee0:	f200 808c 	bhi.w	8002ffc <_dtoa_r+0x304>
 8002ee4:	e8df f003 	tbb	[pc, r3]
 8002ee8:	5b4d4f2d 	.word	0x5b4d4f2d
 8002eec:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8002ef0:	441c      	add	r4, r3
 8002ef2:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8002ef6:	2b20      	cmp	r3, #32
 8002ef8:	bfc3      	ittte	gt
 8002efa:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8002efe:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8002f02:	fa09 f303 	lslgt.w	r3, r9, r3
 8002f06:	f1c3 0320 	rsble	r3, r3, #32
 8002f0a:	bfc6      	itte	gt
 8002f0c:	fa26 f000 	lsrgt.w	r0, r6, r0
 8002f10:	4318      	orrgt	r0, r3
 8002f12:	fa06 f003 	lslle.w	r0, r6, r3
 8002f16:	f7fd fafd 	bl	8000514 <__aeabi_ui2d>
 8002f1a:	2301      	movs	r3, #1
 8002f1c:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8002f20:	3c01      	subs	r4, #1
 8002f22:	9313      	str	r3, [sp, #76]	; 0x4c
 8002f24:	e770      	b.n	8002e08 <_dtoa_r+0x110>
 8002f26:	2301      	movs	r3, #1
 8002f28:	e7b3      	b.n	8002e92 <_dtoa_r+0x19a>
 8002f2a:	900f      	str	r0, [sp, #60]	; 0x3c
 8002f2c:	e7b2      	b.n	8002e94 <_dtoa_r+0x19c>
 8002f2e:	9b06      	ldr	r3, [sp, #24]
 8002f30:	eba3 0309 	sub.w	r3, r3, r9
 8002f34:	9306      	str	r3, [sp, #24]
 8002f36:	f1c9 0300 	rsb	r3, r9, #0
 8002f3a:	930a      	str	r3, [sp, #40]	; 0x28
 8002f3c:	2300      	movs	r3, #0
 8002f3e:	930e      	str	r3, [sp, #56]	; 0x38
 8002f40:	e7bf      	b.n	8002ec2 <_dtoa_r+0x1ca>
 8002f42:	2300      	movs	r3, #0
 8002f44:	930b      	str	r3, [sp, #44]	; 0x2c
 8002f46:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002f48:	2b00      	cmp	r3, #0
 8002f4a:	dc5a      	bgt.n	8003002 <_dtoa_r+0x30a>
 8002f4c:	f04f 0b01 	mov.w	fp, #1
 8002f50:	f8cd b008 	str.w	fp, [sp, #8]
 8002f54:	465b      	mov	r3, fp
 8002f56:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8002f5a:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8002f5c:	2200      	movs	r2, #0
 8002f5e:	6042      	str	r2, [r0, #4]
 8002f60:	2204      	movs	r2, #4
 8002f62:	f102 0614 	add.w	r6, r2, #20
 8002f66:	429e      	cmp	r6, r3
 8002f68:	6841      	ldr	r1, [r0, #4]
 8002f6a:	d950      	bls.n	800300e <_dtoa_r+0x316>
 8002f6c:	4628      	mov	r0, r5
 8002f6e:	f000 ff01 	bl	8003d74 <_Balloc>
 8002f72:	9008      	str	r0, [sp, #32]
 8002f74:	2800      	cmp	r0, #0
 8002f76:	d14e      	bne.n	8003016 <_dtoa_r+0x31e>
 8002f78:	4b19      	ldr	r3, [pc, #100]	; (8002fe0 <_dtoa_r+0x2e8>)
 8002f7a:	4602      	mov	r2, r0
 8002f7c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8002f80:	e6ce      	b.n	8002d20 <_dtoa_r+0x28>
 8002f82:	2301      	movs	r3, #1
 8002f84:	e7de      	b.n	8002f44 <_dtoa_r+0x24c>
 8002f86:	2300      	movs	r3, #0
 8002f88:	930b      	str	r3, [sp, #44]	; 0x2c
 8002f8a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002f8c:	eb09 0b03 	add.w	fp, r9, r3
 8002f90:	f10b 0301 	add.w	r3, fp, #1
 8002f94:	2b01      	cmp	r3, #1
 8002f96:	9302      	str	r3, [sp, #8]
 8002f98:	bfb8      	it	lt
 8002f9a:	2301      	movlt	r3, #1
 8002f9c:	e7dd      	b.n	8002f5a <_dtoa_r+0x262>
 8002f9e:	2301      	movs	r3, #1
 8002fa0:	e7f2      	b.n	8002f88 <_dtoa_r+0x290>
 8002fa2:	bf00      	nop
 8002fa4:	f3af 8000 	nop.w
 8002fa8:	636f4361 	.word	0x636f4361
 8002fac:	3fd287a7 	.word	0x3fd287a7
 8002fb0:	8b60c8b3 	.word	0x8b60c8b3
 8002fb4:	3fc68a28 	.word	0x3fc68a28
 8002fb8:	509f79fb 	.word	0x509f79fb
 8002fbc:	3fd34413 	.word	0x3fd34413
 8002fc0:	08004ab1 	.word	0x08004ab1
 8002fc4:	08004ac8 	.word	0x08004ac8
 8002fc8:	7ff00000 	.word	0x7ff00000
 8002fcc:	08004aad 	.word	0x08004aad
 8002fd0:	08004aa4 	.word	0x08004aa4
 8002fd4:	08004a45 	.word	0x08004a45
 8002fd8:	3ff80000 	.word	0x3ff80000
 8002fdc:	08004c20 	.word	0x08004c20
 8002fe0:	08004b27 	.word	0x08004b27
 8002fe4:	2401      	movs	r4, #1
 8002fe6:	2300      	movs	r3, #0
 8002fe8:	9322      	str	r3, [sp, #136]	; 0x88
 8002fea:	940b      	str	r4, [sp, #44]	; 0x2c
 8002fec:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 8002ff0:	2200      	movs	r2, #0
 8002ff2:	f8cd b008 	str.w	fp, [sp, #8]
 8002ff6:	2312      	movs	r3, #18
 8002ff8:	9223      	str	r2, [sp, #140]	; 0x8c
 8002ffa:	e7ae      	b.n	8002f5a <_dtoa_r+0x262>
 8002ffc:	2301      	movs	r3, #1
 8002ffe:	930b      	str	r3, [sp, #44]	; 0x2c
 8003000:	e7f4      	b.n	8002fec <_dtoa_r+0x2f4>
 8003002:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8003006:	f8cd b008 	str.w	fp, [sp, #8]
 800300a:	465b      	mov	r3, fp
 800300c:	e7a5      	b.n	8002f5a <_dtoa_r+0x262>
 800300e:	3101      	adds	r1, #1
 8003010:	6041      	str	r1, [r0, #4]
 8003012:	0052      	lsls	r2, r2, #1
 8003014:	e7a5      	b.n	8002f62 <_dtoa_r+0x26a>
 8003016:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003018:	9a08      	ldr	r2, [sp, #32]
 800301a:	601a      	str	r2, [r3, #0]
 800301c:	9b02      	ldr	r3, [sp, #8]
 800301e:	2b0e      	cmp	r3, #14
 8003020:	f200 80a8 	bhi.w	8003174 <_dtoa_r+0x47c>
 8003024:	2c00      	cmp	r4, #0
 8003026:	f000 80a5 	beq.w	8003174 <_dtoa_r+0x47c>
 800302a:	f1b9 0f00 	cmp.w	r9, #0
 800302e:	dd34      	ble.n	800309a <_dtoa_r+0x3a2>
 8003030:	4a9a      	ldr	r2, [pc, #616]	; (800329c <_dtoa_r+0x5a4>)
 8003032:	f009 030f 	and.w	r3, r9, #15
 8003036:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800303a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800303e:	f419 7f80 	tst.w	r9, #256	; 0x100
 8003042:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8003046:	ea4f 1429 	mov.w	r4, r9, asr #4
 800304a:	d016      	beq.n	800307a <_dtoa_r+0x382>
 800304c:	4b94      	ldr	r3, [pc, #592]	; (80032a0 <_dtoa_r+0x5a8>)
 800304e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003052:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003056:	f7fd fc01 	bl	800085c <__aeabi_ddiv>
 800305a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800305e:	f004 040f 	and.w	r4, r4, #15
 8003062:	2703      	movs	r7, #3
 8003064:	4e8e      	ldr	r6, [pc, #568]	; (80032a0 <_dtoa_r+0x5a8>)
 8003066:	b954      	cbnz	r4, 800307e <_dtoa_r+0x386>
 8003068:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800306c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003070:	f7fd fbf4 	bl	800085c <__aeabi_ddiv>
 8003074:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003078:	e029      	b.n	80030ce <_dtoa_r+0x3d6>
 800307a:	2702      	movs	r7, #2
 800307c:	e7f2      	b.n	8003064 <_dtoa_r+0x36c>
 800307e:	07e1      	lsls	r1, r4, #31
 8003080:	d508      	bpl.n	8003094 <_dtoa_r+0x39c>
 8003082:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003086:	e9d6 2300 	ldrd	r2, r3, [r6]
 800308a:	f7fd fabd 	bl	8000608 <__aeabi_dmul>
 800308e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003092:	3701      	adds	r7, #1
 8003094:	1064      	asrs	r4, r4, #1
 8003096:	3608      	adds	r6, #8
 8003098:	e7e5      	b.n	8003066 <_dtoa_r+0x36e>
 800309a:	f000 80a5 	beq.w	80031e8 <_dtoa_r+0x4f0>
 800309e:	f1c9 0400 	rsb	r4, r9, #0
 80030a2:	4b7e      	ldr	r3, [pc, #504]	; (800329c <_dtoa_r+0x5a4>)
 80030a4:	4e7e      	ldr	r6, [pc, #504]	; (80032a0 <_dtoa_r+0x5a8>)
 80030a6:	f004 020f 	and.w	r2, r4, #15
 80030aa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80030ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80030b2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80030b6:	f7fd faa7 	bl	8000608 <__aeabi_dmul>
 80030ba:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80030be:	1124      	asrs	r4, r4, #4
 80030c0:	2300      	movs	r3, #0
 80030c2:	2702      	movs	r7, #2
 80030c4:	2c00      	cmp	r4, #0
 80030c6:	f040 8084 	bne.w	80031d2 <_dtoa_r+0x4da>
 80030ca:	2b00      	cmp	r3, #0
 80030cc:	d1d2      	bne.n	8003074 <_dtoa_r+0x37c>
 80030ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80030d0:	2b00      	cmp	r3, #0
 80030d2:	f000 808b 	beq.w	80031ec <_dtoa_r+0x4f4>
 80030d6:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80030da:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80030de:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80030e2:	4b70      	ldr	r3, [pc, #448]	; (80032a4 <_dtoa_r+0x5ac>)
 80030e4:	2200      	movs	r2, #0
 80030e6:	f7fd fd01 	bl	8000aec <__aeabi_dcmplt>
 80030ea:	2800      	cmp	r0, #0
 80030ec:	d07e      	beq.n	80031ec <_dtoa_r+0x4f4>
 80030ee:	9b02      	ldr	r3, [sp, #8]
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d07b      	beq.n	80031ec <_dtoa_r+0x4f4>
 80030f4:	f1bb 0f00 	cmp.w	fp, #0
 80030f8:	dd38      	ble.n	800316c <_dtoa_r+0x474>
 80030fa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80030fe:	4b6a      	ldr	r3, [pc, #424]	; (80032a8 <_dtoa_r+0x5b0>)
 8003100:	2200      	movs	r2, #0
 8003102:	f7fd fa81 	bl	8000608 <__aeabi_dmul>
 8003106:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800310a:	f109 38ff 	add.w	r8, r9, #4294967295	; 0xffffffff
 800310e:	3701      	adds	r7, #1
 8003110:	465c      	mov	r4, fp
 8003112:	4638      	mov	r0, r7
 8003114:	f7fd fa0e 	bl	8000534 <__aeabi_i2d>
 8003118:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800311c:	f7fd fa74 	bl	8000608 <__aeabi_dmul>
 8003120:	4b62      	ldr	r3, [pc, #392]	; (80032ac <_dtoa_r+0x5b4>)
 8003122:	2200      	movs	r2, #0
 8003124:	f7fd f8ba 	bl	800029c <__adddf3>
 8003128:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800312c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003130:	9611      	str	r6, [sp, #68]	; 0x44
 8003132:	2c00      	cmp	r4, #0
 8003134:	d15d      	bne.n	80031f2 <_dtoa_r+0x4fa>
 8003136:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800313a:	4b5d      	ldr	r3, [pc, #372]	; (80032b0 <_dtoa_r+0x5b8>)
 800313c:	2200      	movs	r2, #0
 800313e:	f7fd f8ab 	bl	8000298 <__aeabi_dsub>
 8003142:	4602      	mov	r2, r0
 8003144:	460b      	mov	r3, r1
 8003146:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800314a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800314c:	4633      	mov	r3, r6
 800314e:	f7fd fceb 	bl	8000b28 <__aeabi_dcmpgt>
 8003152:	2800      	cmp	r0, #0
 8003154:	f040 829e 	bne.w	8003694 <_dtoa_r+0x99c>
 8003158:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800315c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800315e:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8003162:	f7fd fcc3 	bl	8000aec <__aeabi_dcmplt>
 8003166:	2800      	cmp	r0, #0
 8003168:	f040 8292 	bne.w	8003690 <_dtoa_r+0x998>
 800316c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8003170:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003174:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003176:	2b00      	cmp	r3, #0
 8003178:	f2c0 8153 	blt.w	8003422 <_dtoa_r+0x72a>
 800317c:	f1b9 0f0e 	cmp.w	r9, #14
 8003180:	f300 814f 	bgt.w	8003422 <_dtoa_r+0x72a>
 8003184:	4b45      	ldr	r3, [pc, #276]	; (800329c <_dtoa_r+0x5a4>)
 8003186:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 800318a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800318e:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8003192:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003194:	2b00      	cmp	r3, #0
 8003196:	f280 80db 	bge.w	8003350 <_dtoa_r+0x658>
 800319a:	9b02      	ldr	r3, [sp, #8]
 800319c:	2b00      	cmp	r3, #0
 800319e:	f300 80d7 	bgt.w	8003350 <_dtoa_r+0x658>
 80031a2:	f040 8274 	bne.w	800368e <_dtoa_r+0x996>
 80031a6:	4b42      	ldr	r3, [pc, #264]	; (80032b0 <_dtoa_r+0x5b8>)
 80031a8:	2200      	movs	r2, #0
 80031aa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80031ae:	f7fd fa2b 	bl	8000608 <__aeabi_dmul>
 80031b2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80031b6:	f7fd fcad 	bl	8000b14 <__aeabi_dcmpge>
 80031ba:	9c02      	ldr	r4, [sp, #8]
 80031bc:	4626      	mov	r6, r4
 80031be:	2800      	cmp	r0, #0
 80031c0:	f040 824a 	bne.w	8003658 <_dtoa_r+0x960>
 80031c4:	9f08      	ldr	r7, [sp, #32]
 80031c6:	2331      	movs	r3, #49	; 0x31
 80031c8:	f807 3b01 	strb.w	r3, [r7], #1
 80031cc:	f109 0901 	add.w	r9, r9, #1
 80031d0:	e246      	b.n	8003660 <_dtoa_r+0x968>
 80031d2:	07e2      	lsls	r2, r4, #31
 80031d4:	d505      	bpl.n	80031e2 <_dtoa_r+0x4ea>
 80031d6:	e9d6 2300 	ldrd	r2, r3, [r6]
 80031da:	f7fd fa15 	bl	8000608 <__aeabi_dmul>
 80031de:	3701      	adds	r7, #1
 80031e0:	2301      	movs	r3, #1
 80031e2:	1064      	asrs	r4, r4, #1
 80031e4:	3608      	adds	r6, #8
 80031e6:	e76d      	b.n	80030c4 <_dtoa_r+0x3cc>
 80031e8:	2702      	movs	r7, #2
 80031ea:	e770      	b.n	80030ce <_dtoa_r+0x3d6>
 80031ec:	9c02      	ldr	r4, [sp, #8]
 80031ee:	46c8      	mov	r8, r9
 80031f0:	e78f      	b.n	8003112 <_dtoa_r+0x41a>
 80031f2:	9908      	ldr	r1, [sp, #32]
 80031f4:	4b29      	ldr	r3, [pc, #164]	; (800329c <_dtoa_r+0x5a4>)
 80031f6:	4421      	add	r1, r4
 80031f8:	9112      	str	r1, [sp, #72]	; 0x48
 80031fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80031fc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003200:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003204:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003208:	2900      	cmp	r1, #0
 800320a:	d055      	beq.n	80032b8 <_dtoa_r+0x5c0>
 800320c:	4929      	ldr	r1, [pc, #164]	; (80032b4 <_dtoa_r+0x5bc>)
 800320e:	2000      	movs	r0, #0
 8003210:	f7fd fb24 	bl	800085c <__aeabi_ddiv>
 8003214:	463b      	mov	r3, r7
 8003216:	4632      	mov	r2, r6
 8003218:	f7fd f83e 	bl	8000298 <__aeabi_dsub>
 800321c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003220:	9f08      	ldr	r7, [sp, #32]
 8003222:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003226:	f7fd fc9f 	bl	8000b68 <__aeabi_d2iz>
 800322a:	4604      	mov	r4, r0
 800322c:	f7fd f982 	bl	8000534 <__aeabi_i2d>
 8003230:	4602      	mov	r2, r0
 8003232:	460b      	mov	r3, r1
 8003234:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003238:	f7fd f82e 	bl	8000298 <__aeabi_dsub>
 800323c:	3430      	adds	r4, #48	; 0x30
 800323e:	4602      	mov	r2, r0
 8003240:	460b      	mov	r3, r1
 8003242:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003246:	f807 4b01 	strb.w	r4, [r7], #1
 800324a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800324e:	f7fd fc4d 	bl	8000aec <__aeabi_dcmplt>
 8003252:	2800      	cmp	r0, #0
 8003254:	d174      	bne.n	8003340 <_dtoa_r+0x648>
 8003256:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800325a:	4912      	ldr	r1, [pc, #72]	; (80032a4 <_dtoa_r+0x5ac>)
 800325c:	2000      	movs	r0, #0
 800325e:	f7fd f81b 	bl	8000298 <__aeabi_dsub>
 8003262:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003266:	f7fd fc41 	bl	8000aec <__aeabi_dcmplt>
 800326a:	2800      	cmp	r0, #0
 800326c:	f040 80b6 	bne.w	80033dc <_dtoa_r+0x6e4>
 8003270:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003272:	429f      	cmp	r7, r3
 8003274:	f43f af7a 	beq.w	800316c <_dtoa_r+0x474>
 8003278:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800327c:	4b0a      	ldr	r3, [pc, #40]	; (80032a8 <_dtoa_r+0x5b0>)
 800327e:	2200      	movs	r2, #0
 8003280:	f7fd f9c2 	bl	8000608 <__aeabi_dmul>
 8003284:	4b08      	ldr	r3, [pc, #32]	; (80032a8 <_dtoa_r+0x5b0>)
 8003286:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800328a:	2200      	movs	r2, #0
 800328c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003290:	f7fd f9ba 	bl	8000608 <__aeabi_dmul>
 8003294:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003298:	e7c3      	b.n	8003222 <_dtoa_r+0x52a>
 800329a:	bf00      	nop
 800329c:	08004c20 	.word	0x08004c20
 80032a0:	08004bf8 	.word	0x08004bf8
 80032a4:	3ff00000 	.word	0x3ff00000
 80032a8:	40240000 	.word	0x40240000
 80032ac:	401c0000 	.word	0x401c0000
 80032b0:	40140000 	.word	0x40140000
 80032b4:	3fe00000 	.word	0x3fe00000
 80032b8:	4630      	mov	r0, r6
 80032ba:	4639      	mov	r1, r7
 80032bc:	f7fd f9a4 	bl	8000608 <__aeabi_dmul>
 80032c0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80032c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80032c6:	9c08      	ldr	r4, [sp, #32]
 80032c8:	9314      	str	r3, [sp, #80]	; 0x50
 80032ca:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80032ce:	f7fd fc4b 	bl	8000b68 <__aeabi_d2iz>
 80032d2:	9015      	str	r0, [sp, #84]	; 0x54
 80032d4:	f7fd f92e 	bl	8000534 <__aeabi_i2d>
 80032d8:	4602      	mov	r2, r0
 80032da:	460b      	mov	r3, r1
 80032dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80032e0:	f7fc ffda 	bl	8000298 <__aeabi_dsub>
 80032e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80032e6:	3330      	adds	r3, #48	; 0x30
 80032e8:	f804 3b01 	strb.w	r3, [r4], #1
 80032ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80032ee:	429c      	cmp	r4, r3
 80032f0:	4606      	mov	r6, r0
 80032f2:	460f      	mov	r7, r1
 80032f4:	f04f 0200 	mov.w	r2, #0
 80032f8:	d124      	bne.n	8003344 <_dtoa_r+0x64c>
 80032fa:	4bb2      	ldr	r3, [pc, #712]	; (80035c4 <_dtoa_r+0x8cc>)
 80032fc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003300:	f7fc ffcc 	bl	800029c <__adddf3>
 8003304:	4602      	mov	r2, r0
 8003306:	460b      	mov	r3, r1
 8003308:	4630      	mov	r0, r6
 800330a:	4639      	mov	r1, r7
 800330c:	f7fd fc0c 	bl	8000b28 <__aeabi_dcmpgt>
 8003310:	2800      	cmp	r0, #0
 8003312:	d162      	bne.n	80033da <_dtoa_r+0x6e2>
 8003314:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003318:	49aa      	ldr	r1, [pc, #680]	; (80035c4 <_dtoa_r+0x8cc>)
 800331a:	2000      	movs	r0, #0
 800331c:	f7fc ffbc 	bl	8000298 <__aeabi_dsub>
 8003320:	4602      	mov	r2, r0
 8003322:	460b      	mov	r3, r1
 8003324:	4630      	mov	r0, r6
 8003326:	4639      	mov	r1, r7
 8003328:	f7fd fbe0 	bl	8000aec <__aeabi_dcmplt>
 800332c:	2800      	cmp	r0, #0
 800332e:	f43f af1d 	beq.w	800316c <_dtoa_r+0x474>
 8003332:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8003334:	1e7b      	subs	r3, r7, #1
 8003336:	9314      	str	r3, [sp, #80]	; 0x50
 8003338:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800333c:	2b30      	cmp	r3, #48	; 0x30
 800333e:	d0f8      	beq.n	8003332 <_dtoa_r+0x63a>
 8003340:	46c1      	mov	r9, r8
 8003342:	e03a      	b.n	80033ba <_dtoa_r+0x6c2>
 8003344:	4ba0      	ldr	r3, [pc, #640]	; (80035c8 <_dtoa_r+0x8d0>)
 8003346:	f7fd f95f 	bl	8000608 <__aeabi_dmul>
 800334a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800334e:	e7bc      	b.n	80032ca <_dtoa_r+0x5d2>
 8003350:	9f08      	ldr	r7, [sp, #32]
 8003352:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003356:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800335a:	f7fd fa7f 	bl	800085c <__aeabi_ddiv>
 800335e:	f7fd fc03 	bl	8000b68 <__aeabi_d2iz>
 8003362:	4604      	mov	r4, r0
 8003364:	f7fd f8e6 	bl	8000534 <__aeabi_i2d>
 8003368:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800336c:	f7fd f94c 	bl	8000608 <__aeabi_dmul>
 8003370:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8003374:	460b      	mov	r3, r1
 8003376:	4602      	mov	r2, r0
 8003378:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800337c:	f7fc ff8c 	bl	8000298 <__aeabi_dsub>
 8003380:	f807 6b01 	strb.w	r6, [r7], #1
 8003384:	9e08      	ldr	r6, [sp, #32]
 8003386:	9b02      	ldr	r3, [sp, #8]
 8003388:	1bbe      	subs	r6, r7, r6
 800338a:	42b3      	cmp	r3, r6
 800338c:	d13a      	bne.n	8003404 <_dtoa_r+0x70c>
 800338e:	4602      	mov	r2, r0
 8003390:	460b      	mov	r3, r1
 8003392:	f7fc ff83 	bl	800029c <__adddf3>
 8003396:	4602      	mov	r2, r0
 8003398:	460b      	mov	r3, r1
 800339a:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800339e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80033a2:	f7fd fbc1 	bl	8000b28 <__aeabi_dcmpgt>
 80033a6:	bb58      	cbnz	r0, 8003400 <_dtoa_r+0x708>
 80033a8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80033ac:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80033b0:	f7fd fb92 	bl	8000ad8 <__aeabi_dcmpeq>
 80033b4:	b108      	cbz	r0, 80033ba <_dtoa_r+0x6c2>
 80033b6:	07e1      	lsls	r1, r4, #31
 80033b8:	d422      	bmi.n	8003400 <_dtoa_r+0x708>
 80033ba:	4628      	mov	r0, r5
 80033bc:	4651      	mov	r1, sl
 80033be:	f000 fd19 	bl	8003df4 <_Bfree>
 80033c2:	2300      	movs	r3, #0
 80033c4:	703b      	strb	r3, [r7, #0]
 80033c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80033c8:	f109 0001 	add.w	r0, r9, #1
 80033cc:	6018      	str	r0, [r3, #0]
 80033ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80033d0:	2b00      	cmp	r3, #0
 80033d2:	f43f acde 	beq.w	8002d92 <_dtoa_r+0x9a>
 80033d6:	601f      	str	r7, [r3, #0]
 80033d8:	e4db      	b.n	8002d92 <_dtoa_r+0x9a>
 80033da:	4627      	mov	r7, r4
 80033dc:	463b      	mov	r3, r7
 80033de:	461f      	mov	r7, r3
 80033e0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80033e4:	2a39      	cmp	r2, #57	; 0x39
 80033e6:	d107      	bne.n	80033f8 <_dtoa_r+0x700>
 80033e8:	9a08      	ldr	r2, [sp, #32]
 80033ea:	429a      	cmp	r2, r3
 80033ec:	d1f7      	bne.n	80033de <_dtoa_r+0x6e6>
 80033ee:	9908      	ldr	r1, [sp, #32]
 80033f0:	2230      	movs	r2, #48	; 0x30
 80033f2:	f108 0801 	add.w	r8, r8, #1
 80033f6:	700a      	strb	r2, [r1, #0]
 80033f8:	781a      	ldrb	r2, [r3, #0]
 80033fa:	3201      	adds	r2, #1
 80033fc:	701a      	strb	r2, [r3, #0]
 80033fe:	e79f      	b.n	8003340 <_dtoa_r+0x648>
 8003400:	46c8      	mov	r8, r9
 8003402:	e7eb      	b.n	80033dc <_dtoa_r+0x6e4>
 8003404:	4b70      	ldr	r3, [pc, #448]	; (80035c8 <_dtoa_r+0x8d0>)
 8003406:	2200      	movs	r2, #0
 8003408:	f7fd f8fe 	bl	8000608 <__aeabi_dmul>
 800340c:	4602      	mov	r2, r0
 800340e:	460b      	mov	r3, r1
 8003410:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003414:	2200      	movs	r2, #0
 8003416:	2300      	movs	r3, #0
 8003418:	f7fd fb5e 	bl	8000ad8 <__aeabi_dcmpeq>
 800341c:	2800      	cmp	r0, #0
 800341e:	d098      	beq.n	8003352 <_dtoa_r+0x65a>
 8003420:	e7cb      	b.n	80033ba <_dtoa_r+0x6c2>
 8003422:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003424:	2a00      	cmp	r2, #0
 8003426:	f000 80d1 	beq.w	80035cc <_dtoa_r+0x8d4>
 800342a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800342c:	2a01      	cmp	r2, #1
 800342e:	f300 80af 	bgt.w	8003590 <_dtoa_r+0x898>
 8003432:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8003434:	2a00      	cmp	r2, #0
 8003436:	f000 80a7 	beq.w	8003588 <_dtoa_r+0x890>
 800343a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800343e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8003440:	9f06      	ldr	r7, [sp, #24]
 8003442:	9a06      	ldr	r2, [sp, #24]
 8003444:	441a      	add	r2, r3
 8003446:	9206      	str	r2, [sp, #24]
 8003448:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800344a:	2101      	movs	r1, #1
 800344c:	441a      	add	r2, r3
 800344e:	4628      	mov	r0, r5
 8003450:	9209      	str	r2, [sp, #36]	; 0x24
 8003452:	f000 fd89 	bl	8003f68 <__i2b>
 8003456:	4606      	mov	r6, r0
 8003458:	2f00      	cmp	r7, #0
 800345a:	dd0c      	ble.n	8003476 <_dtoa_r+0x77e>
 800345c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800345e:	2b00      	cmp	r3, #0
 8003460:	dd09      	ble.n	8003476 <_dtoa_r+0x77e>
 8003462:	42bb      	cmp	r3, r7
 8003464:	9a06      	ldr	r2, [sp, #24]
 8003466:	bfa8      	it	ge
 8003468:	463b      	movge	r3, r7
 800346a:	1ad2      	subs	r2, r2, r3
 800346c:	9206      	str	r2, [sp, #24]
 800346e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003470:	1aff      	subs	r7, r7, r3
 8003472:	1ad3      	subs	r3, r2, r3
 8003474:	9309      	str	r3, [sp, #36]	; 0x24
 8003476:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003478:	b1f3      	cbz	r3, 80034b8 <_dtoa_r+0x7c0>
 800347a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800347c:	2b00      	cmp	r3, #0
 800347e:	f000 80a9 	beq.w	80035d4 <_dtoa_r+0x8dc>
 8003482:	2c00      	cmp	r4, #0
 8003484:	dd10      	ble.n	80034a8 <_dtoa_r+0x7b0>
 8003486:	4631      	mov	r1, r6
 8003488:	4622      	mov	r2, r4
 800348a:	4628      	mov	r0, r5
 800348c:	f000 fe28 	bl	80040e0 <__pow5mult>
 8003490:	4652      	mov	r2, sl
 8003492:	4601      	mov	r1, r0
 8003494:	4606      	mov	r6, r0
 8003496:	4628      	mov	r0, r5
 8003498:	f000 fd7c 	bl	8003f94 <__multiply>
 800349c:	4651      	mov	r1, sl
 800349e:	4680      	mov	r8, r0
 80034a0:	4628      	mov	r0, r5
 80034a2:	f000 fca7 	bl	8003df4 <_Bfree>
 80034a6:	46c2      	mov	sl, r8
 80034a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80034aa:	1b1a      	subs	r2, r3, r4
 80034ac:	d004      	beq.n	80034b8 <_dtoa_r+0x7c0>
 80034ae:	4651      	mov	r1, sl
 80034b0:	4628      	mov	r0, r5
 80034b2:	f000 fe15 	bl	80040e0 <__pow5mult>
 80034b6:	4682      	mov	sl, r0
 80034b8:	2101      	movs	r1, #1
 80034ba:	4628      	mov	r0, r5
 80034bc:	f000 fd54 	bl	8003f68 <__i2b>
 80034c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80034c2:	2b00      	cmp	r3, #0
 80034c4:	4604      	mov	r4, r0
 80034c6:	f340 8087 	ble.w	80035d8 <_dtoa_r+0x8e0>
 80034ca:	461a      	mov	r2, r3
 80034cc:	4601      	mov	r1, r0
 80034ce:	4628      	mov	r0, r5
 80034d0:	f000 fe06 	bl	80040e0 <__pow5mult>
 80034d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80034d6:	2b01      	cmp	r3, #1
 80034d8:	4604      	mov	r4, r0
 80034da:	f340 8080 	ble.w	80035de <_dtoa_r+0x8e6>
 80034de:	f04f 0800 	mov.w	r8, #0
 80034e2:	6923      	ldr	r3, [r4, #16]
 80034e4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80034e8:	6918      	ldr	r0, [r3, #16]
 80034ea:	f000 fcef 	bl	8003ecc <__hi0bits>
 80034ee:	f1c0 0020 	rsb	r0, r0, #32
 80034f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80034f4:	4418      	add	r0, r3
 80034f6:	f010 001f 	ands.w	r0, r0, #31
 80034fa:	f000 8092 	beq.w	8003622 <_dtoa_r+0x92a>
 80034fe:	f1c0 0320 	rsb	r3, r0, #32
 8003502:	2b04      	cmp	r3, #4
 8003504:	f340 808a 	ble.w	800361c <_dtoa_r+0x924>
 8003508:	f1c0 001c 	rsb	r0, r0, #28
 800350c:	9b06      	ldr	r3, [sp, #24]
 800350e:	4403      	add	r3, r0
 8003510:	9306      	str	r3, [sp, #24]
 8003512:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003514:	4403      	add	r3, r0
 8003516:	4407      	add	r7, r0
 8003518:	9309      	str	r3, [sp, #36]	; 0x24
 800351a:	9b06      	ldr	r3, [sp, #24]
 800351c:	2b00      	cmp	r3, #0
 800351e:	dd05      	ble.n	800352c <_dtoa_r+0x834>
 8003520:	4651      	mov	r1, sl
 8003522:	461a      	mov	r2, r3
 8003524:	4628      	mov	r0, r5
 8003526:	f000 fe35 	bl	8004194 <__lshift>
 800352a:	4682      	mov	sl, r0
 800352c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800352e:	2b00      	cmp	r3, #0
 8003530:	dd05      	ble.n	800353e <_dtoa_r+0x846>
 8003532:	4621      	mov	r1, r4
 8003534:	461a      	mov	r2, r3
 8003536:	4628      	mov	r0, r5
 8003538:	f000 fe2c 	bl	8004194 <__lshift>
 800353c:	4604      	mov	r4, r0
 800353e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003540:	2b00      	cmp	r3, #0
 8003542:	d070      	beq.n	8003626 <_dtoa_r+0x92e>
 8003544:	4621      	mov	r1, r4
 8003546:	4650      	mov	r0, sl
 8003548:	f000 fe90 	bl	800426c <__mcmp>
 800354c:	2800      	cmp	r0, #0
 800354e:	da6a      	bge.n	8003626 <_dtoa_r+0x92e>
 8003550:	2300      	movs	r3, #0
 8003552:	4651      	mov	r1, sl
 8003554:	220a      	movs	r2, #10
 8003556:	4628      	mov	r0, r5
 8003558:	f000 fc6e 	bl	8003e38 <__multadd>
 800355c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800355e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8003562:	4682      	mov	sl, r0
 8003564:	2b00      	cmp	r3, #0
 8003566:	f000 8193 	beq.w	8003890 <_dtoa_r+0xb98>
 800356a:	4631      	mov	r1, r6
 800356c:	2300      	movs	r3, #0
 800356e:	220a      	movs	r2, #10
 8003570:	4628      	mov	r0, r5
 8003572:	f000 fc61 	bl	8003e38 <__multadd>
 8003576:	f1bb 0f00 	cmp.w	fp, #0
 800357a:	4606      	mov	r6, r0
 800357c:	f300 8093 	bgt.w	80036a6 <_dtoa_r+0x9ae>
 8003580:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003582:	2b02      	cmp	r3, #2
 8003584:	dc57      	bgt.n	8003636 <_dtoa_r+0x93e>
 8003586:	e08e      	b.n	80036a6 <_dtoa_r+0x9ae>
 8003588:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800358a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800358e:	e756      	b.n	800343e <_dtoa_r+0x746>
 8003590:	9b02      	ldr	r3, [sp, #8]
 8003592:	1e5c      	subs	r4, r3, #1
 8003594:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003596:	42a3      	cmp	r3, r4
 8003598:	bfbf      	itttt	lt
 800359a:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800359c:	940a      	strlt	r4, [sp, #40]	; 0x28
 800359e:	1ae2      	sublt	r2, r4, r3
 80035a0:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 80035a2:	bfb6      	itet	lt
 80035a4:	189b      	addlt	r3, r3, r2
 80035a6:	1b1c      	subge	r4, r3, r4
 80035a8:	930e      	strlt	r3, [sp, #56]	; 0x38
 80035aa:	9b02      	ldr	r3, [sp, #8]
 80035ac:	bfb8      	it	lt
 80035ae:	2400      	movlt	r4, #0
 80035b0:	2b00      	cmp	r3, #0
 80035b2:	bfb9      	ittee	lt
 80035b4:	9b06      	ldrlt	r3, [sp, #24]
 80035b6:	9a02      	ldrlt	r2, [sp, #8]
 80035b8:	9f06      	ldrge	r7, [sp, #24]
 80035ba:	9b02      	ldrge	r3, [sp, #8]
 80035bc:	bfbc      	itt	lt
 80035be:	1a9f      	sublt	r7, r3, r2
 80035c0:	2300      	movlt	r3, #0
 80035c2:	e73e      	b.n	8003442 <_dtoa_r+0x74a>
 80035c4:	3fe00000 	.word	0x3fe00000
 80035c8:	40240000 	.word	0x40240000
 80035cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80035ce:	9f06      	ldr	r7, [sp, #24]
 80035d0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80035d2:	e741      	b.n	8003458 <_dtoa_r+0x760>
 80035d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80035d6:	e76a      	b.n	80034ae <_dtoa_r+0x7b6>
 80035d8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80035da:	2b01      	cmp	r3, #1
 80035dc:	dc19      	bgt.n	8003612 <_dtoa_r+0x91a>
 80035de:	9b04      	ldr	r3, [sp, #16]
 80035e0:	b9bb      	cbnz	r3, 8003612 <_dtoa_r+0x91a>
 80035e2:	9b05      	ldr	r3, [sp, #20]
 80035e4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80035e8:	b99b      	cbnz	r3, 8003612 <_dtoa_r+0x91a>
 80035ea:	9b05      	ldr	r3, [sp, #20]
 80035ec:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80035f0:	0d1b      	lsrs	r3, r3, #20
 80035f2:	051b      	lsls	r3, r3, #20
 80035f4:	b183      	cbz	r3, 8003618 <_dtoa_r+0x920>
 80035f6:	9b06      	ldr	r3, [sp, #24]
 80035f8:	3301      	adds	r3, #1
 80035fa:	9306      	str	r3, [sp, #24]
 80035fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80035fe:	3301      	adds	r3, #1
 8003600:	9309      	str	r3, [sp, #36]	; 0x24
 8003602:	f04f 0801 	mov.w	r8, #1
 8003606:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003608:	2b00      	cmp	r3, #0
 800360a:	f47f af6a 	bne.w	80034e2 <_dtoa_r+0x7ea>
 800360e:	2001      	movs	r0, #1
 8003610:	e76f      	b.n	80034f2 <_dtoa_r+0x7fa>
 8003612:	f04f 0800 	mov.w	r8, #0
 8003616:	e7f6      	b.n	8003606 <_dtoa_r+0x90e>
 8003618:	4698      	mov	r8, r3
 800361a:	e7f4      	b.n	8003606 <_dtoa_r+0x90e>
 800361c:	f43f af7d 	beq.w	800351a <_dtoa_r+0x822>
 8003620:	4618      	mov	r0, r3
 8003622:	301c      	adds	r0, #28
 8003624:	e772      	b.n	800350c <_dtoa_r+0x814>
 8003626:	9b02      	ldr	r3, [sp, #8]
 8003628:	2b00      	cmp	r3, #0
 800362a:	dc36      	bgt.n	800369a <_dtoa_r+0x9a2>
 800362c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800362e:	2b02      	cmp	r3, #2
 8003630:	dd33      	ble.n	800369a <_dtoa_r+0x9a2>
 8003632:	f8dd b008 	ldr.w	fp, [sp, #8]
 8003636:	f1bb 0f00 	cmp.w	fp, #0
 800363a:	d10d      	bne.n	8003658 <_dtoa_r+0x960>
 800363c:	4621      	mov	r1, r4
 800363e:	465b      	mov	r3, fp
 8003640:	2205      	movs	r2, #5
 8003642:	4628      	mov	r0, r5
 8003644:	f000 fbf8 	bl	8003e38 <__multadd>
 8003648:	4601      	mov	r1, r0
 800364a:	4604      	mov	r4, r0
 800364c:	4650      	mov	r0, sl
 800364e:	f000 fe0d 	bl	800426c <__mcmp>
 8003652:	2800      	cmp	r0, #0
 8003654:	f73f adb6 	bgt.w	80031c4 <_dtoa_r+0x4cc>
 8003658:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800365a:	9f08      	ldr	r7, [sp, #32]
 800365c:	ea6f 0903 	mvn.w	r9, r3
 8003660:	f04f 0800 	mov.w	r8, #0
 8003664:	4621      	mov	r1, r4
 8003666:	4628      	mov	r0, r5
 8003668:	f000 fbc4 	bl	8003df4 <_Bfree>
 800366c:	2e00      	cmp	r6, #0
 800366e:	f43f aea4 	beq.w	80033ba <_dtoa_r+0x6c2>
 8003672:	f1b8 0f00 	cmp.w	r8, #0
 8003676:	d005      	beq.n	8003684 <_dtoa_r+0x98c>
 8003678:	45b0      	cmp	r8, r6
 800367a:	d003      	beq.n	8003684 <_dtoa_r+0x98c>
 800367c:	4641      	mov	r1, r8
 800367e:	4628      	mov	r0, r5
 8003680:	f000 fbb8 	bl	8003df4 <_Bfree>
 8003684:	4631      	mov	r1, r6
 8003686:	4628      	mov	r0, r5
 8003688:	f000 fbb4 	bl	8003df4 <_Bfree>
 800368c:	e695      	b.n	80033ba <_dtoa_r+0x6c2>
 800368e:	2400      	movs	r4, #0
 8003690:	4626      	mov	r6, r4
 8003692:	e7e1      	b.n	8003658 <_dtoa_r+0x960>
 8003694:	46c1      	mov	r9, r8
 8003696:	4626      	mov	r6, r4
 8003698:	e594      	b.n	80031c4 <_dtoa_r+0x4cc>
 800369a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800369c:	f8dd b008 	ldr.w	fp, [sp, #8]
 80036a0:	2b00      	cmp	r3, #0
 80036a2:	f000 80fc 	beq.w	800389e <_dtoa_r+0xba6>
 80036a6:	2f00      	cmp	r7, #0
 80036a8:	dd05      	ble.n	80036b6 <_dtoa_r+0x9be>
 80036aa:	4631      	mov	r1, r6
 80036ac:	463a      	mov	r2, r7
 80036ae:	4628      	mov	r0, r5
 80036b0:	f000 fd70 	bl	8004194 <__lshift>
 80036b4:	4606      	mov	r6, r0
 80036b6:	f1b8 0f00 	cmp.w	r8, #0
 80036ba:	d05c      	beq.n	8003776 <_dtoa_r+0xa7e>
 80036bc:	6871      	ldr	r1, [r6, #4]
 80036be:	4628      	mov	r0, r5
 80036c0:	f000 fb58 	bl	8003d74 <_Balloc>
 80036c4:	4607      	mov	r7, r0
 80036c6:	b928      	cbnz	r0, 80036d4 <_dtoa_r+0x9dc>
 80036c8:	4b7f      	ldr	r3, [pc, #508]	; (80038c8 <_dtoa_r+0xbd0>)
 80036ca:	4602      	mov	r2, r0
 80036cc:	f240 21ea 	movw	r1, #746	; 0x2ea
 80036d0:	f7ff bb26 	b.w	8002d20 <_dtoa_r+0x28>
 80036d4:	6932      	ldr	r2, [r6, #16]
 80036d6:	3202      	adds	r2, #2
 80036d8:	0092      	lsls	r2, r2, #2
 80036da:	f106 010c 	add.w	r1, r6, #12
 80036de:	300c      	adds	r0, #12
 80036e0:	f000 fb2e 	bl	8003d40 <memcpy>
 80036e4:	2201      	movs	r2, #1
 80036e6:	4639      	mov	r1, r7
 80036e8:	4628      	mov	r0, r5
 80036ea:	f000 fd53 	bl	8004194 <__lshift>
 80036ee:	9b08      	ldr	r3, [sp, #32]
 80036f0:	3301      	adds	r3, #1
 80036f2:	9302      	str	r3, [sp, #8]
 80036f4:	9b08      	ldr	r3, [sp, #32]
 80036f6:	445b      	add	r3, fp
 80036f8:	930a      	str	r3, [sp, #40]	; 0x28
 80036fa:	9b04      	ldr	r3, [sp, #16]
 80036fc:	f003 0301 	and.w	r3, r3, #1
 8003700:	46b0      	mov	r8, r6
 8003702:	9309      	str	r3, [sp, #36]	; 0x24
 8003704:	4606      	mov	r6, r0
 8003706:	9b02      	ldr	r3, [sp, #8]
 8003708:	4621      	mov	r1, r4
 800370a:	4650      	mov	r0, sl
 800370c:	f103 3bff 	add.w	fp, r3, #4294967295	; 0xffffffff
 8003710:	f7ff fa66 	bl	8002be0 <quorem>
 8003714:	4603      	mov	r3, r0
 8003716:	3330      	adds	r3, #48	; 0x30
 8003718:	9004      	str	r0, [sp, #16]
 800371a:	4641      	mov	r1, r8
 800371c:	4650      	mov	r0, sl
 800371e:	930b      	str	r3, [sp, #44]	; 0x2c
 8003720:	f000 fda4 	bl	800426c <__mcmp>
 8003724:	4632      	mov	r2, r6
 8003726:	9006      	str	r0, [sp, #24]
 8003728:	4621      	mov	r1, r4
 800372a:	4628      	mov	r0, r5
 800372c:	f000 fdba 	bl	80042a4 <__mdiff>
 8003730:	68c2      	ldr	r2, [r0, #12]
 8003732:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003734:	4607      	mov	r7, r0
 8003736:	bb02      	cbnz	r2, 800377a <_dtoa_r+0xa82>
 8003738:	4601      	mov	r1, r0
 800373a:	4650      	mov	r0, sl
 800373c:	f000 fd96 	bl	800426c <__mcmp>
 8003740:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003742:	4602      	mov	r2, r0
 8003744:	4639      	mov	r1, r7
 8003746:	4628      	mov	r0, r5
 8003748:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 800374c:	f000 fb52 	bl	8003df4 <_Bfree>
 8003750:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003752:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003754:	9f02      	ldr	r7, [sp, #8]
 8003756:	ea43 0102 	orr.w	r1, r3, r2
 800375a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800375c:	430b      	orrs	r3, r1
 800375e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003760:	d10d      	bne.n	800377e <_dtoa_r+0xa86>
 8003762:	2b39      	cmp	r3, #57	; 0x39
 8003764:	d027      	beq.n	80037b6 <_dtoa_r+0xabe>
 8003766:	9a06      	ldr	r2, [sp, #24]
 8003768:	2a00      	cmp	r2, #0
 800376a:	dd01      	ble.n	8003770 <_dtoa_r+0xa78>
 800376c:	9b04      	ldr	r3, [sp, #16]
 800376e:	3331      	adds	r3, #49	; 0x31
 8003770:	f88b 3000 	strb.w	r3, [fp]
 8003774:	e776      	b.n	8003664 <_dtoa_r+0x96c>
 8003776:	4630      	mov	r0, r6
 8003778:	e7b9      	b.n	80036ee <_dtoa_r+0x9f6>
 800377a:	2201      	movs	r2, #1
 800377c:	e7e2      	b.n	8003744 <_dtoa_r+0xa4c>
 800377e:	9906      	ldr	r1, [sp, #24]
 8003780:	2900      	cmp	r1, #0
 8003782:	db04      	blt.n	800378e <_dtoa_r+0xa96>
 8003784:	9822      	ldr	r0, [sp, #136]	; 0x88
 8003786:	4301      	orrs	r1, r0
 8003788:	9809      	ldr	r0, [sp, #36]	; 0x24
 800378a:	4301      	orrs	r1, r0
 800378c:	d120      	bne.n	80037d0 <_dtoa_r+0xad8>
 800378e:	2a00      	cmp	r2, #0
 8003790:	ddee      	ble.n	8003770 <_dtoa_r+0xa78>
 8003792:	4651      	mov	r1, sl
 8003794:	2201      	movs	r2, #1
 8003796:	4628      	mov	r0, r5
 8003798:	9302      	str	r3, [sp, #8]
 800379a:	f000 fcfb 	bl	8004194 <__lshift>
 800379e:	4621      	mov	r1, r4
 80037a0:	4682      	mov	sl, r0
 80037a2:	f000 fd63 	bl	800426c <__mcmp>
 80037a6:	2800      	cmp	r0, #0
 80037a8:	9b02      	ldr	r3, [sp, #8]
 80037aa:	dc02      	bgt.n	80037b2 <_dtoa_r+0xaba>
 80037ac:	d1e0      	bne.n	8003770 <_dtoa_r+0xa78>
 80037ae:	07da      	lsls	r2, r3, #31
 80037b0:	d5de      	bpl.n	8003770 <_dtoa_r+0xa78>
 80037b2:	2b39      	cmp	r3, #57	; 0x39
 80037b4:	d1da      	bne.n	800376c <_dtoa_r+0xa74>
 80037b6:	2339      	movs	r3, #57	; 0x39
 80037b8:	f88b 3000 	strb.w	r3, [fp]
 80037bc:	463b      	mov	r3, r7
 80037be:	461f      	mov	r7, r3
 80037c0:	3b01      	subs	r3, #1
 80037c2:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 80037c6:	2a39      	cmp	r2, #57	; 0x39
 80037c8:	d050      	beq.n	800386c <_dtoa_r+0xb74>
 80037ca:	3201      	adds	r2, #1
 80037cc:	701a      	strb	r2, [r3, #0]
 80037ce:	e749      	b.n	8003664 <_dtoa_r+0x96c>
 80037d0:	2a00      	cmp	r2, #0
 80037d2:	dd03      	ble.n	80037dc <_dtoa_r+0xae4>
 80037d4:	2b39      	cmp	r3, #57	; 0x39
 80037d6:	d0ee      	beq.n	80037b6 <_dtoa_r+0xabe>
 80037d8:	3301      	adds	r3, #1
 80037da:	e7c9      	b.n	8003770 <_dtoa_r+0xa78>
 80037dc:	9a02      	ldr	r2, [sp, #8]
 80037de:	990a      	ldr	r1, [sp, #40]	; 0x28
 80037e0:	f802 3c01 	strb.w	r3, [r2, #-1]
 80037e4:	428a      	cmp	r2, r1
 80037e6:	d02a      	beq.n	800383e <_dtoa_r+0xb46>
 80037e8:	4651      	mov	r1, sl
 80037ea:	2300      	movs	r3, #0
 80037ec:	220a      	movs	r2, #10
 80037ee:	4628      	mov	r0, r5
 80037f0:	f000 fb22 	bl	8003e38 <__multadd>
 80037f4:	45b0      	cmp	r8, r6
 80037f6:	4682      	mov	sl, r0
 80037f8:	f04f 0300 	mov.w	r3, #0
 80037fc:	f04f 020a 	mov.w	r2, #10
 8003800:	4641      	mov	r1, r8
 8003802:	4628      	mov	r0, r5
 8003804:	d107      	bne.n	8003816 <_dtoa_r+0xb1e>
 8003806:	f000 fb17 	bl	8003e38 <__multadd>
 800380a:	4680      	mov	r8, r0
 800380c:	4606      	mov	r6, r0
 800380e:	9b02      	ldr	r3, [sp, #8]
 8003810:	3301      	adds	r3, #1
 8003812:	9302      	str	r3, [sp, #8]
 8003814:	e777      	b.n	8003706 <_dtoa_r+0xa0e>
 8003816:	f000 fb0f 	bl	8003e38 <__multadd>
 800381a:	4631      	mov	r1, r6
 800381c:	4680      	mov	r8, r0
 800381e:	2300      	movs	r3, #0
 8003820:	220a      	movs	r2, #10
 8003822:	4628      	mov	r0, r5
 8003824:	f000 fb08 	bl	8003e38 <__multadd>
 8003828:	4606      	mov	r6, r0
 800382a:	e7f0      	b.n	800380e <_dtoa_r+0xb16>
 800382c:	f1bb 0f00 	cmp.w	fp, #0
 8003830:	9a08      	ldr	r2, [sp, #32]
 8003832:	bfcc      	ite	gt
 8003834:	465f      	movgt	r7, fp
 8003836:	2701      	movle	r7, #1
 8003838:	4417      	add	r7, r2
 800383a:	f04f 0800 	mov.w	r8, #0
 800383e:	4651      	mov	r1, sl
 8003840:	2201      	movs	r2, #1
 8003842:	4628      	mov	r0, r5
 8003844:	9302      	str	r3, [sp, #8]
 8003846:	f000 fca5 	bl	8004194 <__lshift>
 800384a:	4621      	mov	r1, r4
 800384c:	4682      	mov	sl, r0
 800384e:	f000 fd0d 	bl	800426c <__mcmp>
 8003852:	2800      	cmp	r0, #0
 8003854:	dcb2      	bgt.n	80037bc <_dtoa_r+0xac4>
 8003856:	d102      	bne.n	800385e <_dtoa_r+0xb66>
 8003858:	9b02      	ldr	r3, [sp, #8]
 800385a:	07db      	lsls	r3, r3, #31
 800385c:	d4ae      	bmi.n	80037bc <_dtoa_r+0xac4>
 800385e:	463b      	mov	r3, r7
 8003860:	461f      	mov	r7, r3
 8003862:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003866:	2a30      	cmp	r2, #48	; 0x30
 8003868:	d0fa      	beq.n	8003860 <_dtoa_r+0xb68>
 800386a:	e6fb      	b.n	8003664 <_dtoa_r+0x96c>
 800386c:	9a08      	ldr	r2, [sp, #32]
 800386e:	429a      	cmp	r2, r3
 8003870:	d1a5      	bne.n	80037be <_dtoa_r+0xac6>
 8003872:	2331      	movs	r3, #49	; 0x31
 8003874:	f109 0901 	add.w	r9, r9, #1
 8003878:	7013      	strb	r3, [r2, #0]
 800387a:	e6f3      	b.n	8003664 <_dtoa_r+0x96c>
 800387c:	4b13      	ldr	r3, [pc, #76]	; (80038cc <_dtoa_r+0xbd4>)
 800387e:	f7ff baa6 	b.w	8002dce <_dtoa_r+0xd6>
 8003882:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003884:	2b00      	cmp	r3, #0
 8003886:	f47f aa7f 	bne.w	8002d88 <_dtoa_r+0x90>
 800388a:	4b11      	ldr	r3, [pc, #68]	; (80038d0 <_dtoa_r+0xbd8>)
 800388c:	f7ff ba9f 	b.w	8002dce <_dtoa_r+0xd6>
 8003890:	f1bb 0f00 	cmp.w	fp, #0
 8003894:	dc03      	bgt.n	800389e <_dtoa_r+0xba6>
 8003896:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003898:	2b02      	cmp	r3, #2
 800389a:	f73f aecc 	bgt.w	8003636 <_dtoa_r+0x93e>
 800389e:	9f08      	ldr	r7, [sp, #32]
 80038a0:	4621      	mov	r1, r4
 80038a2:	4650      	mov	r0, sl
 80038a4:	f7ff f99c 	bl	8002be0 <quorem>
 80038a8:	f100 0330 	add.w	r3, r0, #48	; 0x30
 80038ac:	f807 3b01 	strb.w	r3, [r7], #1
 80038b0:	9a08      	ldr	r2, [sp, #32]
 80038b2:	1aba      	subs	r2, r7, r2
 80038b4:	4593      	cmp	fp, r2
 80038b6:	ddb9      	ble.n	800382c <_dtoa_r+0xb34>
 80038b8:	4651      	mov	r1, sl
 80038ba:	2300      	movs	r3, #0
 80038bc:	220a      	movs	r2, #10
 80038be:	4628      	mov	r0, r5
 80038c0:	f000 faba 	bl	8003e38 <__multadd>
 80038c4:	4682      	mov	sl, r0
 80038c6:	e7eb      	b.n	80038a0 <_dtoa_r+0xba8>
 80038c8:	08004b27 	.word	0x08004b27
 80038cc:	08004a44 	.word	0x08004a44
 80038d0:	08004aa4 	.word	0x08004aa4

080038d4 <__sflush_r>:
 80038d4:	898a      	ldrh	r2, [r1, #12]
 80038d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038da:	4605      	mov	r5, r0
 80038dc:	0710      	lsls	r0, r2, #28
 80038de:	460c      	mov	r4, r1
 80038e0:	d458      	bmi.n	8003994 <__sflush_r+0xc0>
 80038e2:	684b      	ldr	r3, [r1, #4]
 80038e4:	2b00      	cmp	r3, #0
 80038e6:	dc05      	bgt.n	80038f4 <__sflush_r+0x20>
 80038e8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	dc02      	bgt.n	80038f4 <__sflush_r+0x20>
 80038ee:	2000      	movs	r0, #0
 80038f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80038f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80038f6:	2e00      	cmp	r6, #0
 80038f8:	d0f9      	beq.n	80038ee <__sflush_r+0x1a>
 80038fa:	2300      	movs	r3, #0
 80038fc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003900:	682f      	ldr	r7, [r5, #0]
 8003902:	602b      	str	r3, [r5, #0]
 8003904:	d032      	beq.n	800396c <__sflush_r+0x98>
 8003906:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003908:	89a3      	ldrh	r3, [r4, #12]
 800390a:	075a      	lsls	r2, r3, #29
 800390c:	d505      	bpl.n	800391a <__sflush_r+0x46>
 800390e:	6863      	ldr	r3, [r4, #4]
 8003910:	1ac0      	subs	r0, r0, r3
 8003912:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003914:	b10b      	cbz	r3, 800391a <__sflush_r+0x46>
 8003916:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003918:	1ac0      	subs	r0, r0, r3
 800391a:	2300      	movs	r3, #0
 800391c:	4602      	mov	r2, r0
 800391e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003920:	6a21      	ldr	r1, [r4, #32]
 8003922:	4628      	mov	r0, r5
 8003924:	47b0      	blx	r6
 8003926:	1c43      	adds	r3, r0, #1
 8003928:	89a3      	ldrh	r3, [r4, #12]
 800392a:	d106      	bne.n	800393a <__sflush_r+0x66>
 800392c:	6829      	ldr	r1, [r5, #0]
 800392e:	291d      	cmp	r1, #29
 8003930:	d82c      	bhi.n	800398c <__sflush_r+0xb8>
 8003932:	4a2a      	ldr	r2, [pc, #168]	; (80039dc <__sflush_r+0x108>)
 8003934:	40ca      	lsrs	r2, r1
 8003936:	07d6      	lsls	r6, r2, #31
 8003938:	d528      	bpl.n	800398c <__sflush_r+0xb8>
 800393a:	2200      	movs	r2, #0
 800393c:	6062      	str	r2, [r4, #4]
 800393e:	04d9      	lsls	r1, r3, #19
 8003940:	6922      	ldr	r2, [r4, #16]
 8003942:	6022      	str	r2, [r4, #0]
 8003944:	d504      	bpl.n	8003950 <__sflush_r+0x7c>
 8003946:	1c42      	adds	r2, r0, #1
 8003948:	d101      	bne.n	800394e <__sflush_r+0x7a>
 800394a:	682b      	ldr	r3, [r5, #0]
 800394c:	b903      	cbnz	r3, 8003950 <__sflush_r+0x7c>
 800394e:	6560      	str	r0, [r4, #84]	; 0x54
 8003950:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003952:	602f      	str	r7, [r5, #0]
 8003954:	2900      	cmp	r1, #0
 8003956:	d0ca      	beq.n	80038ee <__sflush_r+0x1a>
 8003958:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800395c:	4299      	cmp	r1, r3
 800395e:	d002      	beq.n	8003966 <__sflush_r+0x92>
 8003960:	4628      	mov	r0, r5
 8003962:	f7fe fad5 	bl	8001f10 <_free_r>
 8003966:	2000      	movs	r0, #0
 8003968:	6360      	str	r0, [r4, #52]	; 0x34
 800396a:	e7c1      	b.n	80038f0 <__sflush_r+0x1c>
 800396c:	6a21      	ldr	r1, [r4, #32]
 800396e:	2301      	movs	r3, #1
 8003970:	4628      	mov	r0, r5
 8003972:	47b0      	blx	r6
 8003974:	1c41      	adds	r1, r0, #1
 8003976:	d1c7      	bne.n	8003908 <__sflush_r+0x34>
 8003978:	682b      	ldr	r3, [r5, #0]
 800397a:	2b00      	cmp	r3, #0
 800397c:	d0c4      	beq.n	8003908 <__sflush_r+0x34>
 800397e:	2b1d      	cmp	r3, #29
 8003980:	d001      	beq.n	8003986 <__sflush_r+0xb2>
 8003982:	2b16      	cmp	r3, #22
 8003984:	d101      	bne.n	800398a <__sflush_r+0xb6>
 8003986:	602f      	str	r7, [r5, #0]
 8003988:	e7b1      	b.n	80038ee <__sflush_r+0x1a>
 800398a:	89a3      	ldrh	r3, [r4, #12]
 800398c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003990:	81a3      	strh	r3, [r4, #12]
 8003992:	e7ad      	b.n	80038f0 <__sflush_r+0x1c>
 8003994:	690f      	ldr	r7, [r1, #16]
 8003996:	2f00      	cmp	r7, #0
 8003998:	d0a9      	beq.n	80038ee <__sflush_r+0x1a>
 800399a:	0793      	lsls	r3, r2, #30
 800399c:	680e      	ldr	r6, [r1, #0]
 800399e:	bf08      	it	eq
 80039a0:	694b      	ldreq	r3, [r1, #20]
 80039a2:	600f      	str	r7, [r1, #0]
 80039a4:	bf18      	it	ne
 80039a6:	2300      	movne	r3, #0
 80039a8:	eba6 0807 	sub.w	r8, r6, r7
 80039ac:	608b      	str	r3, [r1, #8]
 80039ae:	f1b8 0f00 	cmp.w	r8, #0
 80039b2:	dd9c      	ble.n	80038ee <__sflush_r+0x1a>
 80039b4:	6a21      	ldr	r1, [r4, #32]
 80039b6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80039b8:	4643      	mov	r3, r8
 80039ba:	463a      	mov	r2, r7
 80039bc:	4628      	mov	r0, r5
 80039be:	47b0      	blx	r6
 80039c0:	2800      	cmp	r0, #0
 80039c2:	dc06      	bgt.n	80039d2 <__sflush_r+0xfe>
 80039c4:	89a3      	ldrh	r3, [r4, #12]
 80039c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80039ca:	81a3      	strh	r3, [r4, #12]
 80039cc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80039d0:	e78e      	b.n	80038f0 <__sflush_r+0x1c>
 80039d2:	4407      	add	r7, r0
 80039d4:	eba8 0800 	sub.w	r8, r8, r0
 80039d8:	e7e9      	b.n	80039ae <__sflush_r+0xda>
 80039da:	bf00      	nop
 80039dc:	20400001 	.word	0x20400001

080039e0 <_fflush_r>:
 80039e0:	b538      	push	{r3, r4, r5, lr}
 80039e2:	690b      	ldr	r3, [r1, #16]
 80039e4:	4605      	mov	r5, r0
 80039e6:	460c      	mov	r4, r1
 80039e8:	b913      	cbnz	r3, 80039f0 <_fflush_r+0x10>
 80039ea:	2500      	movs	r5, #0
 80039ec:	4628      	mov	r0, r5
 80039ee:	bd38      	pop	{r3, r4, r5, pc}
 80039f0:	b118      	cbz	r0, 80039fa <_fflush_r+0x1a>
 80039f2:	6983      	ldr	r3, [r0, #24]
 80039f4:	b90b      	cbnz	r3, 80039fa <_fflush_r+0x1a>
 80039f6:	f000 f887 	bl	8003b08 <__sinit>
 80039fa:	4b14      	ldr	r3, [pc, #80]	; (8003a4c <_fflush_r+0x6c>)
 80039fc:	429c      	cmp	r4, r3
 80039fe:	d11b      	bne.n	8003a38 <_fflush_r+0x58>
 8003a00:	686c      	ldr	r4, [r5, #4]
 8003a02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d0ef      	beq.n	80039ea <_fflush_r+0xa>
 8003a0a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003a0c:	07d0      	lsls	r0, r2, #31
 8003a0e:	d404      	bmi.n	8003a1a <_fflush_r+0x3a>
 8003a10:	0599      	lsls	r1, r3, #22
 8003a12:	d402      	bmi.n	8003a1a <_fflush_r+0x3a>
 8003a14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003a16:	f000 f92c 	bl	8003c72 <__retarget_lock_acquire_recursive>
 8003a1a:	4628      	mov	r0, r5
 8003a1c:	4621      	mov	r1, r4
 8003a1e:	f7ff ff59 	bl	80038d4 <__sflush_r>
 8003a22:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003a24:	07da      	lsls	r2, r3, #31
 8003a26:	4605      	mov	r5, r0
 8003a28:	d4e0      	bmi.n	80039ec <_fflush_r+0xc>
 8003a2a:	89a3      	ldrh	r3, [r4, #12]
 8003a2c:	059b      	lsls	r3, r3, #22
 8003a2e:	d4dd      	bmi.n	80039ec <_fflush_r+0xc>
 8003a30:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003a32:	f000 f91f 	bl	8003c74 <__retarget_lock_release_recursive>
 8003a36:	e7d9      	b.n	80039ec <_fflush_r+0xc>
 8003a38:	4b05      	ldr	r3, [pc, #20]	; (8003a50 <_fflush_r+0x70>)
 8003a3a:	429c      	cmp	r4, r3
 8003a3c:	d101      	bne.n	8003a42 <_fflush_r+0x62>
 8003a3e:	68ac      	ldr	r4, [r5, #8]
 8003a40:	e7df      	b.n	8003a02 <_fflush_r+0x22>
 8003a42:	4b04      	ldr	r3, [pc, #16]	; (8003a54 <_fflush_r+0x74>)
 8003a44:	429c      	cmp	r4, r3
 8003a46:	bf08      	it	eq
 8003a48:	68ec      	ldreq	r4, [r5, #12]
 8003a4a:	e7da      	b.n	8003a02 <_fflush_r+0x22>
 8003a4c:	08004b58 	.word	0x08004b58
 8003a50:	08004b78 	.word	0x08004b78
 8003a54:	08004b38 	.word	0x08004b38

08003a58 <std>:
 8003a58:	2300      	movs	r3, #0
 8003a5a:	b510      	push	{r4, lr}
 8003a5c:	4604      	mov	r4, r0
 8003a5e:	e9c0 3300 	strd	r3, r3, [r0]
 8003a62:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003a66:	6083      	str	r3, [r0, #8]
 8003a68:	8181      	strh	r1, [r0, #12]
 8003a6a:	6643      	str	r3, [r0, #100]	; 0x64
 8003a6c:	81c2      	strh	r2, [r0, #14]
 8003a6e:	6183      	str	r3, [r0, #24]
 8003a70:	4619      	mov	r1, r3
 8003a72:	2208      	movs	r2, #8
 8003a74:	305c      	adds	r0, #92	; 0x5c
 8003a76:	f7fe fa43 	bl	8001f00 <memset>
 8003a7a:	4b05      	ldr	r3, [pc, #20]	; (8003a90 <std+0x38>)
 8003a7c:	6263      	str	r3, [r4, #36]	; 0x24
 8003a7e:	4b05      	ldr	r3, [pc, #20]	; (8003a94 <std+0x3c>)
 8003a80:	62a3      	str	r3, [r4, #40]	; 0x28
 8003a82:	4b05      	ldr	r3, [pc, #20]	; (8003a98 <std+0x40>)
 8003a84:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003a86:	4b05      	ldr	r3, [pc, #20]	; (8003a9c <std+0x44>)
 8003a88:	6224      	str	r4, [r4, #32]
 8003a8a:	6323      	str	r3, [r4, #48]	; 0x30
 8003a8c:	bd10      	pop	{r4, pc}
 8003a8e:	bf00      	nop
 8003a90:	0800473d 	.word	0x0800473d
 8003a94:	0800475f 	.word	0x0800475f
 8003a98:	08004797 	.word	0x08004797
 8003a9c:	080047bb 	.word	0x080047bb

08003aa0 <_cleanup_r>:
 8003aa0:	4901      	ldr	r1, [pc, #4]	; (8003aa8 <_cleanup_r+0x8>)
 8003aa2:	f000 b8c1 	b.w	8003c28 <_fwalk_reent>
 8003aa6:	bf00      	nop
 8003aa8:	080039e1 	.word	0x080039e1

08003aac <__sfmoreglue>:
 8003aac:	b570      	push	{r4, r5, r6, lr}
 8003aae:	1e4a      	subs	r2, r1, #1
 8003ab0:	2568      	movs	r5, #104	; 0x68
 8003ab2:	4355      	muls	r5, r2
 8003ab4:	460e      	mov	r6, r1
 8003ab6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003aba:	f7fe fa77 	bl	8001fac <_malloc_r>
 8003abe:	4604      	mov	r4, r0
 8003ac0:	b140      	cbz	r0, 8003ad4 <__sfmoreglue+0x28>
 8003ac2:	2100      	movs	r1, #0
 8003ac4:	e9c0 1600 	strd	r1, r6, [r0]
 8003ac8:	300c      	adds	r0, #12
 8003aca:	60a0      	str	r0, [r4, #8]
 8003acc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003ad0:	f7fe fa16 	bl	8001f00 <memset>
 8003ad4:	4620      	mov	r0, r4
 8003ad6:	bd70      	pop	{r4, r5, r6, pc}

08003ad8 <__sfp_lock_acquire>:
 8003ad8:	4801      	ldr	r0, [pc, #4]	; (8003ae0 <__sfp_lock_acquire+0x8>)
 8003ada:	f000 b8ca 	b.w	8003c72 <__retarget_lock_acquire_recursive>
 8003ade:	bf00      	nop
 8003ae0:	2000020c 	.word	0x2000020c

08003ae4 <__sfp_lock_release>:
 8003ae4:	4801      	ldr	r0, [pc, #4]	; (8003aec <__sfp_lock_release+0x8>)
 8003ae6:	f000 b8c5 	b.w	8003c74 <__retarget_lock_release_recursive>
 8003aea:	bf00      	nop
 8003aec:	2000020c 	.word	0x2000020c

08003af0 <__sinit_lock_acquire>:
 8003af0:	4801      	ldr	r0, [pc, #4]	; (8003af8 <__sinit_lock_acquire+0x8>)
 8003af2:	f000 b8be 	b.w	8003c72 <__retarget_lock_acquire_recursive>
 8003af6:	bf00      	nop
 8003af8:	20000207 	.word	0x20000207

08003afc <__sinit_lock_release>:
 8003afc:	4801      	ldr	r0, [pc, #4]	; (8003b04 <__sinit_lock_release+0x8>)
 8003afe:	f000 b8b9 	b.w	8003c74 <__retarget_lock_release_recursive>
 8003b02:	bf00      	nop
 8003b04:	20000207 	.word	0x20000207

08003b08 <__sinit>:
 8003b08:	b510      	push	{r4, lr}
 8003b0a:	4604      	mov	r4, r0
 8003b0c:	f7ff fff0 	bl	8003af0 <__sinit_lock_acquire>
 8003b10:	69a3      	ldr	r3, [r4, #24]
 8003b12:	b11b      	cbz	r3, 8003b1c <__sinit+0x14>
 8003b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003b18:	f7ff bff0 	b.w	8003afc <__sinit_lock_release>
 8003b1c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003b20:	6523      	str	r3, [r4, #80]	; 0x50
 8003b22:	4b13      	ldr	r3, [pc, #76]	; (8003b70 <__sinit+0x68>)
 8003b24:	4a13      	ldr	r2, [pc, #76]	; (8003b74 <__sinit+0x6c>)
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	62a2      	str	r2, [r4, #40]	; 0x28
 8003b2a:	42a3      	cmp	r3, r4
 8003b2c:	bf04      	itt	eq
 8003b2e:	2301      	moveq	r3, #1
 8003b30:	61a3      	streq	r3, [r4, #24]
 8003b32:	4620      	mov	r0, r4
 8003b34:	f000 f820 	bl	8003b78 <__sfp>
 8003b38:	6060      	str	r0, [r4, #4]
 8003b3a:	4620      	mov	r0, r4
 8003b3c:	f000 f81c 	bl	8003b78 <__sfp>
 8003b40:	60a0      	str	r0, [r4, #8]
 8003b42:	4620      	mov	r0, r4
 8003b44:	f000 f818 	bl	8003b78 <__sfp>
 8003b48:	2200      	movs	r2, #0
 8003b4a:	60e0      	str	r0, [r4, #12]
 8003b4c:	2104      	movs	r1, #4
 8003b4e:	6860      	ldr	r0, [r4, #4]
 8003b50:	f7ff ff82 	bl	8003a58 <std>
 8003b54:	68a0      	ldr	r0, [r4, #8]
 8003b56:	2201      	movs	r2, #1
 8003b58:	2109      	movs	r1, #9
 8003b5a:	f7ff ff7d 	bl	8003a58 <std>
 8003b5e:	68e0      	ldr	r0, [r4, #12]
 8003b60:	2202      	movs	r2, #2
 8003b62:	2112      	movs	r1, #18
 8003b64:	f7ff ff78 	bl	8003a58 <std>
 8003b68:	2301      	movs	r3, #1
 8003b6a:	61a3      	str	r3, [r4, #24]
 8003b6c:	e7d2      	b.n	8003b14 <__sinit+0xc>
 8003b6e:	bf00      	nop
 8003b70:	08004a30 	.word	0x08004a30
 8003b74:	08003aa1 	.word	0x08003aa1

08003b78 <__sfp>:
 8003b78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b7a:	4607      	mov	r7, r0
 8003b7c:	f7ff ffac 	bl	8003ad8 <__sfp_lock_acquire>
 8003b80:	4b1e      	ldr	r3, [pc, #120]	; (8003bfc <__sfp+0x84>)
 8003b82:	681e      	ldr	r6, [r3, #0]
 8003b84:	69b3      	ldr	r3, [r6, #24]
 8003b86:	b913      	cbnz	r3, 8003b8e <__sfp+0x16>
 8003b88:	4630      	mov	r0, r6
 8003b8a:	f7ff ffbd 	bl	8003b08 <__sinit>
 8003b8e:	3648      	adds	r6, #72	; 0x48
 8003b90:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8003b94:	3b01      	subs	r3, #1
 8003b96:	d503      	bpl.n	8003ba0 <__sfp+0x28>
 8003b98:	6833      	ldr	r3, [r6, #0]
 8003b9a:	b30b      	cbz	r3, 8003be0 <__sfp+0x68>
 8003b9c:	6836      	ldr	r6, [r6, #0]
 8003b9e:	e7f7      	b.n	8003b90 <__sfp+0x18>
 8003ba0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8003ba4:	b9d5      	cbnz	r5, 8003bdc <__sfp+0x64>
 8003ba6:	4b16      	ldr	r3, [pc, #88]	; (8003c00 <__sfp+0x88>)
 8003ba8:	60e3      	str	r3, [r4, #12]
 8003baa:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003bae:	6665      	str	r5, [r4, #100]	; 0x64
 8003bb0:	f000 f85e 	bl	8003c70 <__retarget_lock_init_recursive>
 8003bb4:	f7ff ff96 	bl	8003ae4 <__sfp_lock_release>
 8003bb8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003bbc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8003bc0:	6025      	str	r5, [r4, #0]
 8003bc2:	61a5      	str	r5, [r4, #24]
 8003bc4:	2208      	movs	r2, #8
 8003bc6:	4629      	mov	r1, r5
 8003bc8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003bcc:	f7fe f998 	bl	8001f00 <memset>
 8003bd0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8003bd4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003bd8:	4620      	mov	r0, r4
 8003bda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003bdc:	3468      	adds	r4, #104	; 0x68
 8003bde:	e7d9      	b.n	8003b94 <__sfp+0x1c>
 8003be0:	2104      	movs	r1, #4
 8003be2:	4638      	mov	r0, r7
 8003be4:	f7ff ff62 	bl	8003aac <__sfmoreglue>
 8003be8:	4604      	mov	r4, r0
 8003bea:	6030      	str	r0, [r6, #0]
 8003bec:	2800      	cmp	r0, #0
 8003bee:	d1d5      	bne.n	8003b9c <__sfp+0x24>
 8003bf0:	f7ff ff78 	bl	8003ae4 <__sfp_lock_release>
 8003bf4:	230c      	movs	r3, #12
 8003bf6:	603b      	str	r3, [r7, #0]
 8003bf8:	e7ee      	b.n	8003bd8 <__sfp+0x60>
 8003bfa:	bf00      	nop
 8003bfc:	08004a30 	.word	0x08004a30
 8003c00:	ffff0001 	.word	0xffff0001

08003c04 <fiprintf>:
 8003c04:	b40e      	push	{r1, r2, r3}
 8003c06:	b503      	push	{r0, r1, lr}
 8003c08:	4601      	mov	r1, r0
 8003c0a:	ab03      	add	r3, sp, #12
 8003c0c:	4805      	ldr	r0, [pc, #20]	; (8003c24 <fiprintf+0x20>)
 8003c0e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003c12:	6800      	ldr	r0, [r0, #0]
 8003c14:	9301      	str	r3, [sp, #4]
 8003c16:	f000 fc61 	bl	80044dc <_vfiprintf_r>
 8003c1a:	b002      	add	sp, #8
 8003c1c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003c20:	b003      	add	sp, #12
 8003c22:	4770      	bx	lr
 8003c24:	20000000 	.word	0x20000000

08003c28 <_fwalk_reent>:
 8003c28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003c2c:	4606      	mov	r6, r0
 8003c2e:	4688      	mov	r8, r1
 8003c30:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003c34:	2700      	movs	r7, #0
 8003c36:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003c3a:	f1b9 0901 	subs.w	r9, r9, #1
 8003c3e:	d505      	bpl.n	8003c4c <_fwalk_reent+0x24>
 8003c40:	6824      	ldr	r4, [r4, #0]
 8003c42:	2c00      	cmp	r4, #0
 8003c44:	d1f7      	bne.n	8003c36 <_fwalk_reent+0xe>
 8003c46:	4638      	mov	r0, r7
 8003c48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c4c:	89ab      	ldrh	r3, [r5, #12]
 8003c4e:	2b01      	cmp	r3, #1
 8003c50:	d907      	bls.n	8003c62 <_fwalk_reent+0x3a>
 8003c52:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003c56:	3301      	adds	r3, #1
 8003c58:	d003      	beq.n	8003c62 <_fwalk_reent+0x3a>
 8003c5a:	4629      	mov	r1, r5
 8003c5c:	4630      	mov	r0, r6
 8003c5e:	47c0      	blx	r8
 8003c60:	4307      	orrs	r7, r0
 8003c62:	3568      	adds	r5, #104	; 0x68
 8003c64:	e7e9      	b.n	8003c3a <_fwalk_reent+0x12>
	...

08003c68 <_localeconv_r>:
 8003c68:	4800      	ldr	r0, [pc, #0]	; (8003c6c <_localeconv_r+0x4>)
 8003c6a:	4770      	bx	lr
 8003c6c:	20000154 	.word	0x20000154

08003c70 <__retarget_lock_init_recursive>:
 8003c70:	4770      	bx	lr

08003c72 <__retarget_lock_acquire_recursive>:
 8003c72:	4770      	bx	lr

08003c74 <__retarget_lock_release_recursive>:
 8003c74:	4770      	bx	lr

08003c76 <__swhatbuf_r>:
 8003c76:	b570      	push	{r4, r5, r6, lr}
 8003c78:	460e      	mov	r6, r1
 8003c7a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003c7e:	2900      	cmp	r1, #0
 8003c80:	b096      	sub	sp, #88	; 0x58
 8003c82:	4614      	mov	r4, r2
 8003c84:	461d      	mov	r5, r3
 8003c86:	da07      	bge.n	8003c98 <__swhatbuf_r+0x22>
 8003c88:	2300      	movs	r3, #0
 8003c8a:	602b      	str	r3, [r5, #0]
 8003c8c:	89b3      	ldrh	r3, [r6, #12]
 8003c8e:	061a      	lsls	r2, r3, #24
 8003c90:	d410      	bmi.n	8003cb4 <__swhatbuf_r+0x3e>
 8003c92:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003c96:	e00e      	b.n	8003cb6 <__swhatbuf_r+0x40>
 8003c98:	466a      	mov	r2, sp
 8003c9a:	f000 fdbd 	bl	8004818 <_fstat_r>
 8003c9e:	2800      	cmp	r0, #0
 8003ca0:	dbf2      	blt.n	8003c88 <__swhatbuf_r+0x12>
 8003ca2:	9a01      	ldr	r2, [sp, #4]
 8003ca4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003ca8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003cac:	425a      	negs	r2, r3
 8003cae:	415a      	adcs	r2, r3
 8003cb0:	602a      	str	r2, [r5, #0]
 8003cb2:	e7ee      	b.n	8003c92 <__swhatbuf_r+0x1c>
 8003cb4:	2340      	movs	r3, #64	; 0x40
 8003cb6:	2000      	movs	r0, #0
 8003cb8:	6023      	str	r3, [r4, #0]
 8003cba:	b016      	add	sp, #88	; 0x58
 8003cbc:	bd70      	pop	{r4, r5, r6, pc}
	...

08003cc0 <__smakebuf_r>:
 8003cc0:	898b      	ldrh	r3, [r1, #12]
 8003cc2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003cc4:	079d      	lsls	r5, r3, #30
 8003cc6:	4606      	mov	r6, r0
 8003cc8:	460c      	mov	r4, r1
 8003cca:	d507      	bpl.n	8003cdc <__smakebuf_r+0x1c>
 8003ccc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003cd0:	6023      	str	r3, [r4, #0]
 8003cd2:	6123      	str	r3, [r4, #16]
 8003cd4:	2301      	movs	r3, #1
 8003cd6:	6163      	str	r3, [r4, #20]
 8003cd8:	b002      	add	sp, #8
 8003cda:	bd70      	pop	{r4, r5, r6, pc}
 8003cdc:	ab01      	add	r3, sp, #4
 8003cde:	466a      	mov	r2, sp
 8003ce0:	f7ff ffc9 	bl	8003c76 <__swhatbuf_r>
 8003ce4:	9900      	ldr	r1, [sp, #0]
 8003ce6:	4605      	mov	r5, r0
 8003ce8:	4630      	mov	r0, r6
 8003cea:	f7fe f95f 	bl	8001fac <_malloc_r>
 8003cee:	b948      	cbnz	r0, 8003d04 <__smakebuf_r+0x44>
 8003cf0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003cf4:	059a      	lsls	r2, r3, #22
 8003cf6:	d4ef      	bmi.n	8003cd8 <__smakebuf_r+0x18>
 8003cf8:	f023 0303 	bic.w	r3, r3, #3
 8003cfc:	f043 0302 	orr.w	r3, r3, #2
 8003d00:	81a3      	strh	r3, [r4, #12]
 8003d02:	e7e3      	b.n	8003ccc <__smakebuf_r+0xc>
 8003d04:	4b0d      	ldr	r3, [pc, #52]	; (8003d3c <__smakebuf_r+0x7c>)
 8003d06:	62b3      	str	r3, [r6, #40]	; 0x28
 8003d08:	89a3      	ldrh	r3, [r4, #12]
 8003d0a:	6020      	str	r0, [r4, #0]
 8003d0c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003d10:	81a3      	strh	r3, [r4, #12]
 8003d12:	9b00      	ldr	r3, [sp, #0]
 8003d14:	6163      	str	r3, [r4, #20]
 8003d16:	9b01      	ldr	r3, [sp, #4]
 8003d18:	6120      	str	r0, [r4, #16]
 8003d1a:	b15b      	cbz	r3, 8003d34 <__smakebuf_r+0x74>
 8003d1c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003d20:	4630      	mov	r0, r6
 8003d22:	f000 fd8b 	bl	800483c <_isatty_r>
 8003d26:	b128      	cbz	r0, 8003d34 <__smakebuf_r+0x74>
 8003d28:	89a3      	ldrh	r3, [r4, #12]
 8003d2a:	f023 0303 	bic.w	r3, r3, #3
 8003d2e:	f043 0301 	orr.w	r3, r3, #1
 8003d32:	81a3      	strh	r3, [r4, #12]
 8003d34:	89a0      	ldrh	r0, [r4, #12]
 8003d36:	4305      	orrs	r5, r0
 8003d38:	81a5      	strh	r5, [r4, #12]
 8003d3a:	e7cd      	b.n	8003cd8 <__smakebuf_r+0x18>
 8003d3c:	08003aa1 	.word	0x08003aa1

08003d40 <memcpy>:
 8003d40:	440a      	add	r2, r1
 8003d42:	4291      	cmp	r1, r2
 8003d44:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8003d48:	d100      	bne.n	8003d4c <memcpy+0xc>
 8003d4a:	4770      	bx	lr
 8003d4c:	b510      	push	{r4, lr}
 8003d4e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003d52:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003d56:	4291      	cmp	r1, r2
 8003d58:	d1f9      	bne.n	8003d4e <memcpy+0xe>
 8003d5a:	bd10      	pop	{r4, pc}

08003d5c <__malloc_lock>:
 8003d5c:	4801      	ldr	r0, [pc, #4]	; (8003d64 <__malloc_lock+0x8>)
 8003d5e:	f7ff bf88 	b.w	8003c72 <__retarget_lock_acquire_recursive>
 8003d62:	bf00      	nop
 8003d64:	20000208 	.word	0x20000208

08003d68 <__malloc_unlock>:
 8003d68:	4801      	ldr	r0, [pc, #4]	; (8003d70 <__malloc_unlock+0x8>)
 8003d6a:	f7ff bf83 	b.w	8003c74 <__retarget_lock_release_recursive>
 8003d6e:	bf00      	nop
 8003d70:	20000208 	.word	0x20000208

08003d74 <_Balloc>:
 8003d74:	b570      	push	{r4, r5, r6, lr}
 8003d76:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003d78:	4604      	mov	r4, r0
 8003d7a:	460d      	mov	r5, r1
 8003d7c:	b976      	cbnz	r6, 8003d9c <_Balloc+0x28>
 8003d7e:	2010      	movs	r0, #16
 8003d80:	f7fe f8b6 	bl	8001ef0 <malloc>
 8003d84:	4602      	mov	r2, r0
 8003d86:	6260      	str	r0, [r4, #36]	; 0x24
 8003d88:	b920      	cbnz	r0, 8003d94 <_Balloc+0x20>
 8003d8a:	4b18      	ldr	r3, [pc, #96]	; (8003dec <_Balloc+0x78>)
 8003d8c:	4818      	ldr	r0, [pc, #96]	; (8003df0 <_Balloc+0x7c>)
 8003d8e:	2166      	movs	r1, #102	; 0x66
 8003d90:	f7fe ff08 	bl	8002ba4 <__assert_func>
 8003d94:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003d98:	6006      	str	r6, [r0, #0]
 8003d9a:	60c6      	str	r6, [r0, #12]
 8003d9c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8003d9e:	68f3      	ldr	r3, [r6, #12]
 8003da0:	b183      	cbz	r3, 8003dc4 <_Balloc+0x50>
 8003da2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003da4:	68db      	ldr	r3, [r3, #12]
 8003da6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003daa:	b9b8      	cbnz	r0, 8003ddc <_Balloc+0x68>
 8003dac:	2101      	movs	r1, #1
 8003dae:	fa01 f605 	lsl.w	r6, r1, r5
 8003db2:	1d72      	adds	r2, r6, #5
 8003db4:	0092      	lsls	r2, r2, #2
 8003db6:	4620      	mov	r0, r4
 8003db8:	f000 fb5a 	bl	8004470 <_calloc_r>
 8003dbc:	b160      	cbz	r0, 8003dd8 <_Balloc+0x64>
 8003dbe:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003dc2:	e00e      	b.n	8003de2 <_Balloc+0x6e>
 8003dc4:	2221      	movs	r2, #33	; 0x21
 8003dc6:	2104      	movs	r1, #4
 8003dc8:	4620      	mov	r0, r4
 8003dca:	f000 fb51 	bl	8004470 <_calloc_r>
 8003dce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003dd0:	60f0      	str	r0, [r6, #12]
 8003dd2:	68db      	ldr	r3, [r3, #12]
 8003dd4:	2b00      	cmp	r3, #0
 8003dd6:	d1e4      	bne.n	8003da2 <_Balloc+0x2e>
 8003dd8:	2000      	movs	r0, #0
 8003dda:	bd70      	pop	{r4, r5, r6, pc}
 8003ddc:	6802      	ldr	r2, [r0, #0]
 8003dde:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003de2:	2300      	movs	r3, #0
 8003de4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003de8:	e7f7      	b.n	8003dda <_Balloc+0x66>
 8003dea:	bf00      	nop
 8003dec:	08004ab1 	.word	0x08004ab1
 8003df0:	08004b98 	.word	0x08004b98

08003df4 <_Bfree>:
 8003df4:	b570      	push	{r4, r5, r6, lr}
 8003df6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003df8:	4605      	mov	r5, r0
 8003dfa:	460c      	mov	r4, r1
 8003dfc:	b976      	cbnz	r6, 8003e1c <_Bfree+0x28>
 8003dfe:	2010      	movs	r0, #16
 8003e00:	f7fe f876 	bl	8001ef0 <malloc>
 8003e04:	4602      	mov	r2, r0
 8003e06:	6268      	str	r0, [r5, #36]	; 0x24
 8003e08:	b920      	cbnz	r0, 8003e14 <_Bfree+0x20>
 8003e0a:	4b09      	ldr	r3, [pc, #36]	; (8003e30 <_Bfree+0x3c>)
 8003e0c:	4809      	ldr	r0, [pc, #36]	; (8003e34 <_Bfree+0x40>)
 8003e0e:	218a      	movs	r1, #138	; 0x8a
 8003e10:	f7fe fec8 	bl	8002ba4 <__assert_func>
 8003e14:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003e18:	6006      	str	r6, [r0, #0]
 8003e1a:	60c6      	str	r6, [r0, #12]
 8003e1c:	b13c      	cbz	r4, 8003e2e <_Bfree+0x3a>
 8003e1e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003e20:	6862      	ldr	r2, [r4, #4]
 8003e22:	68db      	ldr	r3, [r3, #12]
 8003e24:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003e28:	6021      	str	r1, [r4, #0]
 8003e2a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003e2e:	bd70      	pop	{r4, r5, r6, pc}
 8003e30:	08004ab1 	.word	0x08004ab1
 8003e34:	08004b98 	.word	0x08004b98

08003e38 <__multadd>:
 8003e38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e3c:	690e      	ldr	r6, [r1, #16]
 8003e3e:	4607      	mov	r7, r0
 8003e40:	4698      	mov	r8, r3
 8003e42:	460c      	mov	r4, r1
 8003e44:	f101 0014 	add.w	r0, r1, #20
 8003e48:	2300      	movs	r3, #0
 8003e4a:	6805      	ldr	r5, [r0, #0]
 8003e4c:	b2a9      	uxth	r1, r5
 8003e4e:	fb02 8101 	mla	r1, r2, r1, r8
 8003e52:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8003e56:	0c2d      	lsrs	r5, r5, #16
 8003e58:	fb02 c505 	mla	r5, r2, r5, ip
 8003e5c:	b289      	uxth	r1, r1
 8003e5e:	3301      	adds	r3, #1
 8003e60:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8003e64:	429e      	cmp	r6, r3
 8003e66:	f840 1b04 	str.w	r1, [r0], #4
 8003e6a:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8003e6e:	dcec      	bgt.n	8003e4a <__multadd+0x12>
 8003e70:	f1b8 0f00 	cmp.w	r8, #0
 8003e74:	d022      	beq.n	8003ebc <__multadd+0x84>
 8003e76:	68a3      	ldr	r3, [r4, #8]
 8003e78:	42b3      	cmp	r3, r6
 8003e7a:	dc19      	bgt.n	8003eb0 <__multadd+0x78>
 8003e7c:	6861      	ldr	r1, [r4, #4]
 8003e7e:	4638      	mov	r0, r7
 8003e80:	3101      	adds	r1, #1
 8003e82:	f7ff ff77 	bl	8003d74 <_Balloc>
 8003e86:	4605      	mov	r5, r0
 8003e88:	b928      	cbnz	r0, 8003e96 <__multadd+0x5e>
 8003e8a:	4602      	mov	r2, r0
 8003e8c:	4b0d      	ldr	r3, [pc, #52]	; (8003ec4 <__multadd+0x8c>)
 8003e8e:	480e      	ldr	r0, [pc, #56]	; (8003ec8 <__multadd+0x90>)
 8003e90:	21b5      	movs	r1, #181	; 0xb5
 8003e92:	f7fe fe87 	bl	8002ba4 <__assert_func>
 8003e96:	6922      	ldr	r2, [r4, #16]
 8003e98:	3202      	adds	r2, #2
 8003e9a:	f104 010c 	add.w	r1, r4, #12
 8003e9e:	0092      	lsls	r2, r2, #2
 8003ea0:	300c      	adds	r0, #12
 8003ea2:	f7ff ff4d 	bl	8003d40 <memcpy>
 8003ea6:	4621      	mov	r1, r4
 8003ea8:	4638      	mov	r0, r7
 8003eaa:	f7ff ffa3 	bl	8003df4 <_Bfree>
 8003eae:	462c      	mov	r4, r5
 8003eb0:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8003eb4:	3601      	adds	r6, #1
 8003eb6:	f8c3 8014 	str.w	r8, [r3, #20]
 8003eba:	6126      	str	r6, [r4, #16]
 8003ebc:	4620      	mov	r0, r4
 8003ebe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003ec2:	bf00      	nop
 8003ec4:	08004b27 	.word	0x08004b27
 8003ec8:	08004b98 	.word	0x08004b98

08003ecc <__hi0bits>:
 8003ecc:	0c02      	lsrs	r2, r0, #16
 8003ece:	0412      	lsls	r2, r2, #16
 8003ed0:	4603      	mov	r3, r0
 8003ed2:	b9ca      	cbnz	r2, 8003f08 <__hi0bits+0x3c>
 8003ed4:	0403      	lsls	r3, r0, #16
 8003ed6:	2010      	movs	r0, #16
 8003ed8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8003edc:	bf04      	itt	eq
 8003ede:	021b      	lsleq	r3, r3, #8
 8003ee0:	3008      	addeq	r0, #8
 8003ee2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8003ee6:	bf04      	itt	eq
 8003ee8:	011b      	lsleq	r3, r3, #4
 8003eea:	3004      	addeq	r0, #4
 8003eec:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8003ef0:	bf04      	itt	eq
 8003ef2:	009b      	lsleq	r3, r3, #2
 8003ef4:	3002      	addeq	r0, #2
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	db05      	blt.n	8003f06 <__hi0bits+0x3a>
 8003efa:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8003efe:	f100 0001 	add.w	r0, r0, #1
 8003f02:	bf08      	it	eq
 8003f04:	2020      	moveq	r0, #32
 8003f06:	4770      	bx	lr
 8003f08:	2000      	movs	r0, #0
 8003f0a:	e7e5      	b.n	8003ed8 <__hi0bits+0xc>

08003f0c <__lo0bits>:
 8003f0c:	6803      	ldr	r3, [r0, #0]
 8003f0e:	4602      	mov	r2, r0
 8003f10:	f013 0007 	ands.w	r0, r3, #7
 8003f14:	d00b      	beq.n	8003f2e <__lo0bits+0x22>
 8003f16:	07d9      	lsls	r1, r3, #31
 8003f18:	d422      	bmi.n	8003f60 <__lo0bits+0x54>
 8003f1a:	0798      	lsls	r0, r3, #30
 8003f1c:	bf49      	itett	mi
 8003f1e:	085b      	lsrmi	r3, r3, #1
 8003f20:	089b      	lsrpl	r3, r3, #2
 8003f22:	2001      	movmi	r0, #1
 8003f24:	6013      	strmi	r3, [r2, #0]
 8003f26:	bf5c      	itt	pl
 8003f28:	6013      	strpl	r3, [r2, #0]
 8003f2a:	2002      	movpl	r0, #2
 8003f2c:	4770      	bx	lr
 8003f2e:	b299      	uxth	r1, r3
 8003f30:	b909      	cbnz	r1, 8003f36 <__lo0bits+0x2a>
 8003f32:	0c1b      	lsrs	r3, r3, #16
 8003f34:	2010      	movs	r0, #16
 8003f36:	f013 0fff 	tst.w	r3, #255	; 0xff
 8003f3a:	bf04      	itt	eq
 8003f3c:	0a1b      	lsreq	r3, r3, #8
 8003f3e:	3008      	addeq	r0, #8
 8003f40:	0719      	lsls	r1, r3, #28
 8003f42:	bf04      	itt	eq
 8003f44:	091b      	lsreq	r3, r3, #4
 8003f46:	3004      	addeq	r0, #4
 8003f48:	0799      	lsls	r1, r3, #30
 8003f4a:	bf04      	itt	eq
 8003f4c:	089b      	lsreq	r3, r3, #2
 8003f4e:	3002      	addeq	r0, #2
 8003f50:	07d9      	lsls	r1, r3, #31
 8003f52:	d403      	bmi.n	8003f5c <__lo0bits+0x50>
 8003f54:	085b      	lsrs	r3, r3, #1
 8003f56:	f100 0001 	add.w	r0, r0, #1
 8003f5a:	d003      	beq.n	8003f64 <__lo0bits+0x58>
 8003f5c:	6013      	str	r3, [r2, #0]
 8003f5e:	4770      	bx	lr
 8003f60:	2000      	movs	r0, #0
 8003f62:	4770      	bx	lr
 8003f64:	2020      	movs	r0, #32
 8003f66:	4770      	bx	lr

08003f68 <__i2b>:
 8003f68:	b510      	push	{r4, lr}
 8003f6a:	460c      	mov	r4, r1
 8003f6c:	2101      	movs	r1, #1
 8003f6e:	f7ff ff01 	bl	8003d74 <_Balloc>
 8003f72:	4602      	mov	r2, r0
 8003f74:	b928      	cbnz	r0, 8003f82 <__i2b+0x1a>
 8003f76:	4b05      	ldr	r3, [pc, #20]	; (8003f8c <__i2b+0x24>)
 8003f78:	4805      	ldr	r0, [pc, #20]	; (8003f90 <__i2b+0x28>)
 8003f7a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003f7e:	f7fe fe11 	bl	8002ba4 <__assert_func>
 8003f82:	2301      	movs	r3, #1
 8003f84:	6144      	str	r4, [r0, #20]
 8003f86:	6103      	str	r3, [r0, #16]
 8003f88:	bd10      	pop	{r4, pc}
 8003f8a:	bf00      	nop
 8003f8c:	08004b27 	.word	0x08004b27
 8003f90:	08004b98 	.word	0x08004b98

08003f94 <__multiply>:
 8003f94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f98:	4614      	mov	r4, r2
 8003f9a:	690a      	ldr	r2, [r1, #16]
 8003f9c:	6923      	ldr	r3, [r4, #16]
 8003f9e:	429a      	cmp	r2, r3
 8003fa0:	bfb8      	it	lt
 8003fa2:	460b      	movlt	r3, r1
 8003fa4:	460d      	mov	r5, r1
 8003fa6:	bfbc      	itt	lt
 8003fa8:	4625      	movlt	r5, r4
 8003faa:	461c      	movlt	r4, r3
 8003fac:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8003fb0:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8003fb4:	68ab      	ldr	r3, [r5, #8]
 8003fb6:	6869      	ldr	r1, [r5, #4]
 8003fb8:	eb0a 0709 	add.w	r7, sl, r9
 8003fbc:	42bb      	cmp	r3, r7
 8003fbe:	b085      	sub	sp, #20
 8003fc0:	bfb8      	it	lt
 8003fc2:	3101      	addlt	r1, #1
 8003fc4:	f7ff fed6 	bl	8003d74 <_Balloc>
 8003fc8:	b930      	cbnz	r0, 8003fd8 <__multiply+0x44>
 8003fca:	4602      	mov	r2, r0
 8003fcc:	4b42      	ldr	r3, [pc, #264]	; (80040d8 <__multiply+0x144>)
 8003fce:	4843      	ldr	r0, [pc, #268]	; (80040dc <__multiply+0x148>)
 8003fd0:	f240 115d 	movw	r1, #349	; 0x15d
 8003fd4:	f7fe fde6 	bl	8002ba4 <__assert_func>
 8003fd8:	f100 0614 	add.w	r6, r0, #20
 8003fdc:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8003fe0:	4633      	mov	r3, r6
 8003fe2:	2200      	movs	r2, #0
 8003fe4:	4543      	cmp	r3, r8
 8003fe6:	d31e      	bcc.n	8004026 <__multiply+0x92>
 8003fe8:	f105 0c14 	add.w	ip, r5, #20
 8003fec:	f104 0314 	add.w	r3, r4, #20
 8003ff0:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8003ff4:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8003ff8:	9202      	str	r2, [sp, #8]
 8003ffa:	ebac 0205 	sub.w	r2, ip, r5
 8003ffe:	3a15      	subs	r2, #21
 8004000:	f022 0203 	bic.w	r2, r2, #3
 8004004:	3204      	adds	r2, #4
 8004006:	f105 0115 	add.w	r1, r5, #21
 800400a:	458c      	cmp	ip, r1
 800400c:	bf38      	it	cc
 800400e:	2204      	movcc	r2, #4
 8004010:	9201      	str	r2, [sp, #4]
 8004012:	9a02      	ldr	r2, [sp, #8]
 8004014:	9303      	str	r3, [sp, #12]
 8004016:	429a      	cmp	r2, r3
 8004018:	d808      	bhi.n	800402c <__multiply+0x98>
 800401a:	2f00      	cmp	r7, #0
 800401c:	dc55      	bgt.n	80040ca <__multiply+0x136>
 800401e:	6107      	str	r7, [r0, #16]
 8004020:	b005      	add	sp, #20
 8004022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004026:	f843 2b04 	str.w	r2, [r3], #4
 800402a:	e7db      	b.n	8003fe4 <__multiply+0x50>
 800402c:	f8b3 a000 	ldrh.w	sl, [r3]
 8004030:	f1ba 0f00 	cmp.w	sl, #0
 8004034:	d020      	beq.n	8004078 <__multiply+0xe4>
 8004036:	f105 0e14 	add.w	lr, r5, #20
 800403a:	46b1      	mov	r9, r6
 800403c:	2200      	movs	r2, #0
 800403e:	f85e 4b04 	ldr.w	r4, [lr], #4
 8004042:	f8d9 b000 	ldr.w	fp, [r9]
 8004046:	b2a1      	uxth	r1, r4
 8004048:	fa1f fb8b 	uxth.w	fp, fp
 800404c:	fb0a b101 	mla	r1, sl, r1, fp
 8004050:	4411      	add	r1, r2
 8004052:	f8d9 2000 	ldr.w	r2, [r9]
 8004056:	0c24      	lsrs	r4, r4, #16
 8004058:	0c12      	lsrs	r2, r2, #16
 800405a:	fb0a 2404 	mla	r4, sl, r4, r2
 800405e:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8004062:	b289      	uxth	r1, r1
 8004064:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8004068:	45f4      	cmp	ip, lr
 800406a:	f849 1b04 	str.w	r1, [r9], #4
 800406e:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8004072:	d8e4      	bhi.n	800403e <__multiply+0xaa>
 8004074:	9901      	ldr	r1, [sp, #4]
 8004076:	5072      	str	r2, [r6, r1]
 8004078:	9a03      	ldr	r2, [sp, #12]
 800407a:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800407e:	3304      	adds	r3, #4
 8004080:	f1b9 0f00 	cmp.w	r9, #0
 8004084:	d01f      	beq.n	80040c6 <__multiply+0x132>
 8004086:	6834      	ldr	r4, [r6, #0]
 8004088:	f105 0114 	add.w	r1, r5, #20
 800408c:	46b6      	mov	lr, r6
 800408e:	f04f 0a00 	mov.w	sl, #0
 8004092:	880a      	ldrh	r2, [r1, #0]
 8004094:	f8be b002 	ldrh.w	fp, [lr, #2]
 8004098:	fb09 b202 	mla	r2, r9, r2, fp
 800409c:	4492      	add	sl, r2
 800409e:	b2a4      	uxth	r4, r4
 80040a0:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80040a4:	f84e 4b04 	str.w	r4, [lr], #4
 80040a8:	f851 4b04 	ldr.w	r4, [r1], #4
 80040ac:	f8be 2000 	ldrh.w	r2, [lr]
 80040b0:	0c24      	lsrs	r4, r4, #16
 80040b2:	fb09 2404 	mla	r4, r9, r4, r2
 80040b6:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 80040ba:	458c      	cmp	ip, r1
 80040bc:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 80040c0:	d8e7      	bhi.n	8004092 <__multiply+0xfe>
 80040c2:	9a01      	ldr	r2, [sp, #4]
 80040c4:	50b4      	str	r4, [r6, r2]
 80040c6:	3604      	adds	r6, #4
 80040c8:	e7a3      	b.n	8004012 <__multiply+0x7e>
 80040ca:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80040ce:	2b00      	cmp	r3, #0
 80040d0:	d1a5      	bne.n	800401e <__multiply+0x8a>
 80040d2:	3f01      	subs	r7, #1
 80040d4:	e7a1      	b.n	800401a <__multiply+0x86>
 80040d6:	bf00      	nop
 80040d8:	08004b27 	.word	0x08004b27
 80040dc:	08004b98 	.word	0x08004b98

080040e0 <__pow5mult>:
 80040e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80040e4:	4615      	mov	r5, r2
 80040e6:	f012 0203 	ands.w	r2, r2, #3
 80040ea:	4606      	mov	r6, r0
 80040ec:	460f      	mov	r7, r1
 80040ee:	d007      	beq.n	8004100 <__pow5mult+0x20>
 80040f0:	4c25      	ldr	r4, [pc, #148]	; (8004188 <__pow5mult+0xa8>)
 80040f2:	3a01      	subs	r2, #1
 80040f4:	2300      	movs	r3, #0
 80040f6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80040fa:	f7ff fe9d 	bl	8003e38 <__multadd>
 80040fe:	4607      	mov	r7, r0
 8004100:	10ad      	asrs	r5, r5, #2
 8004102:	d03d      	beq.n	8004180 <__pow5mult+0xa0>
 8004104:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8004106:	b97c      	cbnz	r4, 8004128 <__pow5mult+0x48>
 8004108:	2010      	movs	r0, #16
 800410a:	f7fd fef1 	bl	8001ef0 <malloc>
 800410e:	4602      	mov	r2, r0
 8004110:	6270      	str	r0, [r6, #36]	; 0x24
 8004112:	b928      	cbnz	r0, 8004120 <__pow5mult+0x40>
 8004114:	4b1d      	ldr	r3, [pc, #116]	; (800418c <__pow5mult+0xac>)
 8004116:	481e      	ldr	r0, [pc, #120]	; (8004190 <__pow5mult+0xb0>)
 8004118:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800411c:	f7fe fd42 	bl	8002ba4 <__assert_func>
 8004120:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004124:	6004      	str	r4, [r0, #0]
 8004126:	60c4      	str	r4, [r0, #12]
 8004128:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800412c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004130:	b94c      	cbnz	r4, 8004146 <__pow5mult+0x66>
 8004132:	f240 2171 	movw	r1, #625	; 0x271
 8004136:	4630      	mov	r0, r6
 8004138:	f7ff ff16 	bl	8003f68 <__i2b>
 800413c:	2300      	movs	r3, #0
 800413e:	f8c8 0008 	str.w	r0, [r8, #8]
 8004142:	4604      	mov	r4, r0
 8004144:	6003      	str	r3, [r0, #0]
 8004146:	f04f 0900 	mov.w	r9, #0
 800414a:	07eb      	lsls	r3, r5, #31
 800414c:	d50a      	bpl.n	8004164 <__pow5mult+0x84>
 800414e:	4639      	mov	r1, r7
 8004150:	4622      	mov	r2, r4
 8004152:	4630      	mov	r0, r6
 8004154:	f7ff ff1e 	bl	8003f94 <__multiply>
 8004158:	4639      	mov	r1, r7
 800415a:	4680      	mov	r8, r0
 800415c:	4630      	mov	r0, r6
 800415e:	f7ff fe49 	bl	8003df4 <_Bfree>
 8004162:	4647      	mov	r7, r8
 8004164:	106d      	asrs	r5, r5, #1
 8004166:	d00b      	beq.n	8004180 <__pow5mult+0xa0>
 8004168:	6820      	ldr	r0, [r4, #0]
 800416a:	b938      	cbnz	r0, 800417c <__pow5mult+0x9c>
 800416c:	4622      	mov	r2, r4
 800416e:	4621      	mov	r1, r4
 8004170:	4630      	mov	r0, r6
 8004172:	f7ff ff0f 	bl	8003f94 <__multiply>
 8004176:	6020      	str	r0, [r4, #0]
 8004178:	f8c0 9000 	str.w	r9, [r0]
 800417c:	4604      	mov	r4, r0
 800417e:	e7e4      	b.n	800414a <__pow5mult+0x6a>
 8004180:	4638      	mov	r0, r7
 8004182:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004186:	bf00      	nop
 8004188:	08004ce8 	.word	0x08004ce8
 800418c:	08004ab1 	.word	0x08004ab1
 8004190:	08004b98 	.word	0x08004b98

08004194 <__lshift>:
 8004194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004198:	460c      	mov	r4, r1
 800419a:	6849      	ldr	r1, [r1, #4]
 800419c:	6923      	ldr	r3, [r4, #16]
 800419e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80041a2:	68a3      	ldr	r3, [r4, #8]
 80041a4:	4607      	mov	r7, r0
 80041a6:	4691      	mov	r9, r2
 80041a8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80041ac:	f108 0601 	add.w	r6, r8, #1
 80041b0:	42b3      	cmp	r3, r6
 80041b2:	db0b      	blt.n	80041cc <__lshift+0x38>
 80041b4:	4638      	mov	r0, r7
 80041b6:	f7ff fddd 	bl	8003d74 <_Balloc>
 80041ba:	4605      	mov	r5, r0
 80041bc:	b948      	cbnz	r0, 80041d2 <__lshift+0x3e>
 80041be:	4602      	mov	r2, r0
 80041c0:	4b28      	ldr	r3, [pc, #160]	; (8004264 <__lshift+0xd0>)
 80041c2:	4829      	ldr	r0, [pc, #164]	; (8004268 <__lshift+0xd4>)
 80041c4:	f240 11d9 	movw	r1, #473	; 0x1d9
 80041c8:	f7fe fcec 	bl	8002ba4 <__assert_func>
 80041cc:	3101      	adds	r1, #1
 80041ce:	005b      	lsls	r3, r3, #1
 80041d0:	e7ee      	b.n	80041b0 <__lshift+0x1c>
 80041d2:	2300      	movs	r3, #0
 80041d4:	f100 0114 	add.w	r1, r0, #20
 80041d8:	f100 0210 	add.w	r2, r0, #16
 80041dc:	4618      	mov	r0, r3
 80041de:	4553      	cmp	r3, sl
 80041e0:	db33      	blt.n	800424a <__lshift+0xb6>
 80041e2:	6920      	ldr	r0, [r4, #16]
 80041e4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80041e8:	f104 0314 	add.w	r3, r4, #20
 80041ec:	f019 091f 	ands.w	r9, r9, #31
 80041f0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80041f4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80041f8:	d02b      	beq.n	8004252 <__lshift+0xbe>
 80041fa:	f1c9 0e20 	rsb	lr, r9, #32
 80041fe:	468a      	mov	sl, r1
 8004200:	2200      	movs	r2, #0
 8004202:	6818      	ldr	r0, [r3, #0]
 8004204:	fa00 f009 	lsl.w	r0, r0, r9
 8004208:	4302      	orrs	r2, r0
 800420a:	f84a 2b04 	str.w	r2, [sl], #4
 800420e:	f853 2b04 	ldr.w	r2, [r3], #4
 8004212:	459c      	cmp	ip, r3
 8004214:	fa22 f20e 	lsr.w	r2, r2, lr
 8004218:	d8f3      	bhi.n	8004202 <__lshift+0x6e>
 800421a:	ebac 0304 	sub.w	r3, ip, r4
 800421e:	3b15      	subs	r3, #21
 8004220:	f023 0303 	bic.w	r3, r3, #3
 8004224:	3304      	adds	r3, #4
 8004226:	f104 0015 	add.w	r0, r4, #21
 800422a:	4584      	cmp	ip, r0
 800422c:	bf38      	it	cc
 800422e:	2304      	movcc	r3, #4
 8004230:	50ca      	str	r2, [r1, r3]
 8004232:	b10a      	cbz	r2, 8004238 <__lshift+0xa4>
 8004234:	f108 0602 	add.w	r6, r8, #2
 8004238:	3e01      	subs	r6, #1
 800423a:	4638      	mov	r0, r7
 800423c:	612e      	str	r6, [r5, #16]
 800423e:	4621      	mov	r1, r4
 8004240:	f7ff fdd8 	bl	8003df4 <_Bfree>
 8004244:	4628      	mov	r0, r5
 8004246:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800424a:	f842 0f04 	str.w	r0, [r2, #4]!
 800424e:	3301      	adds	r3, #1
 8004250:	e7c5      	b.n	80041de <__lshift+0x4a>
 8004252:	3904      	subs	r1, #4
 8004254:	f853 2b04 	ldr.w	r2, [r3], #4
 8004258:	f841 2f04 	str.w	r2, [r1, #4]!
 800425c:	459c      	cmp	ip, r3
 800425e:	d8f9      	bhi.n	8004254 <__lshift+0xc0>
 8004260:	e7ea      	b.n	8004238 <__lshift+0xa4>
 8004262:	bf00      	nop
 8004264:	08004b27 	.word	0x08004b27
 8004268:	08004b98 	.word	0x08004b98

0800426c <__mcmp>:
 800426c:	690a      	ldr	r2, [r1, #16]
 800426e:	4603      	mov	r3, r0
 8004270:	6900      	ldr	r0, [r0, #16]
 8004272:	1a80      	subs	r0, r0, r2
 8004274:	b530      	push	{r4, r5, lr}
 8004276:	d10d      	bne.n	8004294 <__mcmp+0x28>
 8004278:	3314      	adds	r3, #20
 800427a:	3114      	adds	r1, #20
 800427c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8004280:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004284:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004288:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800428c:	4295      	cmp	r5, r2
 800428e:	d002      	beq.n	8004296 <__mcmp+0x2a>
 8004290:	d304      	bcc.n	800429c <__mcmp+0x30>
 8004292:	2001      	movs	r0, #1
 8004294:	bd30      	pop	{r4, r5, pc}
 8004296:	42a3      	cmp	r3, r4
 8004298:	d3f4      	bcc.n	8004284 <__mcmp+0x18>
 800429a:	e7fb      	b.n	8004294 <__mcmp+0x28>
 800429c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80042a0:	e7f8      	b.n	8004294 <__mcmp+0x28>
	...

080042a4 <__mdiff>:
 80042a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042a8:	460c      	mov	r4, r1
 80042aa:	4606      	mov	r6, r0
 80042ac:	4611      	mov	r1, r2
 80042ae:	4620      	mov	r0, r4
 80042b0:	4617      	mov	r7, r2
 80042b2:	f7ff ffdb 	bl	800426c <__mcmp>
 80042b6:	1e05      	subs	r5, r0, #0
 80042b8:	d111      	bne.n	80042de <__mdiff+0x3a>
 80042ba:	4629      	mov	r1, r5
 80042bc:	4630      	mov	r0, r6
 80042be:	f7ff fd59 	bl	8003d74 <_Balloc>
 80042c2:	4602      	mov	r2, r0
 80042c4:	b928      	cbnz	r0, 80042d2 <__mdiff+0x2e>
 80042c6:	4b3a      	ldr	r3, [pc, #232]	; (80043b0 <__mdiff+0x10c>)
 80042c8:	f240 2132 	movw	r1, #562	; 0x232
 80042cc:	4839      	ldr	r0, [pc, #228]	; (80043b4 <__mdiff+0x110>)
 80042ce:	f7fe fc69 	bl	8002ba4 <__assert_func>
 80042d2:	2301      	movs	r3, #1
 80042d4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80042d8:	4610      	mov	r0, r2
 80042da:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042de:	bfa4      	itt	ge
 80042e0:	463b      	movge	r3, r7
 80042e2:	4627      	movge	r7, r4
 80042e4:	4630      	mov	r0, r6
 80042e6:	6879      	ldr	r1, [r7, #4]
 80042e8:	bfa6      	itte	ge
 80042ea:	461c      	movge	r4, r3
 80042ec:	2500      	movge	r5, #0
 80042ee:	2501      	movlt	r5, #1
 80042f0:	f7ff fd40 	bl	8003d74 <_Balloc>
 80042f4:	4602      	mov	r2, r0
 80042f6:	b918      	cbnz	r0, 8004300 <__mdiff+0x5c>
 80042f8:	4b2d      	ldr	r3, [pc, #180]	; (80043b0 <__mdiff+0x10c>)
 80042fa:	f44f 7110 	mov.w	r1, #576	; 0x240
 80042fe:	e7e5      	b.n	80042cc <__mdiff+0x28>
 8004300:	693e      	ldr	r6, [r7, #16]
 8004302:	60c5      	str	r5, [r0, #12]
 8004304:	6925      	ldr	r5, [r4, #16]
 8004306:	f107 0114 	add.w	r1, r7, #20
 800430a:	f100 0e14 	add.w	lr, r0, #20
 800430e:	f104 0914 	add.w	r9, r4, #20
 8004312:	f107 0010 	add.w	r0, r7, #16
 8004316:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 800431a:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 800431e:	46f2      	mov	sl, lr
 8004320:	2700      	movs	r7, #0
 8004322:	f859 3b04 	ldr.w	r3, [r9], #4
 8004326:	f850 bf04 	ldr.w	fp, [r0, #4]!
 800432a:	fa1f f883 	uxth.w	r8, r3
 800432e:	fa17 f78b 	uxtah	r7, r7, fp
 8004332:	0c1b      	lsrs	r3, r3, #16
 8004334:	eba7 0808 	sub.w	r8, r7, r8
 8004338:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800433c:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8004340:	fa1f f888 	uxth.w	r8, r8
 8004344:	141f      	asrs	r7, r3, #16
 8004346:	454d      	cmp	r5, r9
 8004348:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800434c:	f84a 3b04 	str.w	r3, [sl], #4
 8004350:	d8e7      	bhi.n	8004322 <__mdiff+0x7e>
 8004352:	1b2b      	subs	r3, r5, r4
 8004354:	3b15      	subs	r3, #21
 8004356:	f023 0303 	bic.w	r3, r3, #3
 800435a:	3304      	adds	r3, #4
 800435c:	3415      	adds	r4, #21
 800435e:	42a5      	cmp	r5, r4
 8004360:	bf38      	it	cc
 8004362:	2304      	movcc	r3, #4
 8004364:	4419      	add	r1, r3
 8004366:	4473      	add	r3, lr
 8004368:	469e      	mov	lr, r3
 800436a:	460d      	mov	r5, r1
 800436c:	4565      	cmp	r5, ip
 800436e:	d30e      	bcc.n	800438e <__mdiff+0xea>
 8004370:	f10c 0003 	add.w	r0, ip, #3
 8004374:	1a40      	subs	r0, r0, r1
 8004376:	f020 0003 	bic.w	r0, r0, #3
 800437a:	3903      	subs	r1, #3
 800437c:	458c      	cmp	ip, r1
 800437e:	bf38      	it	cc
 8004380:	2000      	movcc	r0, #0
 8004382:	4418      	add	r0, r3
 8004384:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8004388:	b17b      	cbz	r3, 80043aa <__mdiff+0x106>
 800438a:	6116      	str	r6, [r2, #16]
 800438c:	e7a4      	b.n	80042d8 <__mdiff+0x34>
 800438e:	f855 8b04 	ldr.w	r8, [r5], #4
 8004392:	fa17 f488 	uxtah	r4, r7, r8
 8004396:	1420      	asrs	r0, r4, #16
 8004398:	eb00 4018 	add.w	r0, r0, r8, lsr #16
 800439c:	b2a4      	uxth	r4, r4
 800439e:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
 80043a2:	f84e 4b04 	str.w	r4, [lr], #4
 80043a6:	1407      	asrs	r7, r0, #16
 80043a8:	e7e0      	b.n	800436c <__mdiff+0xc8>
 80043aa:	3e01      	subs	r6, #1
 80043ac:	e7ea      	b.n	8004384 <__mdiff+0xe0>
 80043ae:	bf00      	nop
 80043b0:	08004b27 	.word	0x08004b27
 80043b4:	08004b98 	.word	0x08004b98

080043b8 <__d2b>:
 80043b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80043bc:	2101      	movs	r1, #1
 80043be:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 80043c2:	4690      	mov	r8, r2
 80043c4:	461d      	mov	r5, r3
 80043c6:	f7ff fcd5 	bl	8003d74 <_Balloc>
 80043ca:	4604      	mov	r4, r0
 80043cc:	b930      	cbnz	r0, 80043dc <__d2b+0x24>
 80043ce:	4602      	mov	r2, r0
 80043d0:	4b25      	ldr	r3, [pc, #148]	; (8004468 <__d2b+0xb0>)
 80043d2:	4826      	ldr	r0, [pc, #152]	; (800446c <__d2b+0xb4>)
 80043d4:	f240 310a 	movw	r1, #778	; 0x30a
 80043d8:	f7fe fbe4 	bl	8002ba4 <__assert_func>
 80043dc:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80043e0:	f3c5 550a 	ubfx	r5, r5, #20, #11
 80043e4:	bb2d      	cbnz	r5, 8004432 <__d2b+0x7a>
 80043e6:	9301      	str	r3, [sp, #4]
 80043e8:	f1b8 0300 	subs.w	r3, r8, #0
 80043ec:	d026      	beq.n	800443c <__d2b+0x84>
 80043ee:	4668      	mov	r0, sp
 80043f0:	9300      	str	r3, [sp, #0]
 80043f2:	f7ff fd8b 	bl	8003f0c <__lo0bits>
 80043f6:	9900      	ldr	r1, [sp, #0]
 80043f8:	b1f0      	cbz	r0, 8004438 <__d2b+0x80>
 80043fa:	9a01      	ldr	r2, [sp, #4]
 80043fc:	f1c0 0320 	rsb	r3, r0, #32
 8004400:	fa02 f303 	lsl.w	r3, r2, r3
 8004404:	430b      	orrs	r3, r1
 8004406:	40c2      	lsrs	r2, r0
 8004408:	6163      	str	r3, [r4, #20]
 800440a:	9201      	str	r2, [sp, #4]
 800440c:	9b01      	ldr	r3, [sp, #4]
 800440e:	61a3      	str	r3, [r4, #24]
 8004410:	2b00      	cmp	r3, #0
 8004412:	bf14      	ite	ne
 8004414:	2102      	movne	r1, #2
 8004416:	2101      	moveq	r1, #1
 8004418:	6121      	str	r1, [r4, #16]
 800441a:	b1c5      	cbz	r5, 800444e <__d2b+0x96>
 800441c:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8004420:	4405      	add	r5, r0
 8004422:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004426:	603d      	str	r5, [r7, #0]
 8004428:	6030      	str	r0, [r6, #0]
 800442a:	4620      	mov	r0, r4
 800442c:	b002      	add	sp, #8
 800442e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004432:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004436:	e7d6      	b.n	80043e6 <__d2b+0x2e>
 8004438:	6161      	str	r1, [r4, #20]
 800443a:	e7e7      	b.n	800440c <__d2b+0x54>
 800443c:	a801      	add	r0, sp, #4
 800443e:	f7ff fd65 	bl	8003f0c <__lo0bits>
 8004442:	9b01      	ldr	r3, [sp, #4]
 8004444:	6163      	str	r3, [r4, #20]
 8004446:	2101      	movs	r1, #1
 8004448:	6121      	str	r1, [r4, #16]
 800444a:	3020      	adds	r0, #32
 800444c:	e7e5      	b.n	800441a <__d2b+0x62>
 800444e:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8004452:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004456:	6038      	str	r0, [r7, #0]
 8004458:	6918      	ldr	r0, [r3, #16]
 800445a:	f7ff fd37 	bl	8003ecc <__hi0bits>
 800445e:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8004462:	6031      	str	r1, [r6, #0]
 8004464:	e7e1      	b.n	800442a <__d2b+0x72>
 8004466:	bf00      	nop
 8004468:	08004b27 	.word	0x08004b27
 800446c:	08004b98 	.word	0x08004b98

08004470 <_calloc_r>:
 8004470:	b538      	push	{r3, r4, r5, lr}
 8004472:	fb02 f501 	mul.w	r5, r2, r1
 8004476:	4629      	mov	r1, r5
 8004478:	f7fd fd98 	bl	8001fac <_malloc_r>
 800447c:	4604      	mov	r4, r0
 800447e:	b118      	cbz	r0, 8004488 <_calloc_r+0x18>
 8004480:	462a      	mov	r2, r5
 8004482:	2100      	movs	r1, #0
 8004484:	f7fd fd3c 	bl	8001f00 <memset>
 8004488:	4620      	mov	r0, r4
 800448a:	bd38      	pop	{r3, r4, r5, pc}

0800448c <__sfputc_r>:
 800448c:	6893      	ldr	r3, [r2, #8]
 800448e:	3b01      	subs	r3, #1
 8004490:	2b00      	cmp	r3, #0
 8004492:	b410      	push	{r4}
 8004494:	6093      	str	r3, [r2, #8]
 8004496:	da07      	bge.n	80044a8 <__sfputc_r+0x1c>
 8004498:	6994      	ldr	r4, [r2, #24]
 800449a:	42a3      	cmp	r3, r4
 800449c:	db01      	blt.n	80044a2 <__sfputc_r+0x16>
 800449e:	290a      	cmp	r1, #10
 80044a0:	d102      	bne.n	80044a8 <__sfputc_r+0x1c>
 80044a2:	bc10      	pop	{r4}
 80044a4:	f7fe babe 	b.w	8002a24 <__swbuf_r>
 80044a8:	6813      	ldr	r3, [r2, #0]
 80044aa:	1c58      	adds	r0, r3, #1
 80044ac:	6010      	str	r0, [r2, #0]
 80044ae:	7019      	strb	r1, [r3, #0]
 80044b0:	4608      	mov	r0, r1
 80044b2:	bc10      	pop	{r4}
 80044b4:	4770      	bx	lr

080044b6 <__sfputs_r>:
 80044b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044b8:	4606      	mov	r6, r0
 80044ba:	460f      	mov	r7, r1
 80044bc:	4614      	mov	r4, r2
 80044be:	18d5      	adds	r5, r2, r3
 80044c0:	42ac      	cmp	r4, r5
 80044c2:	d101      	bne.n	80044c8 <__sfputs_r+0x12>
 80044c4:	2000      	movs	r0, #0
 80044c6:	e007      	b.n	80044d8 <__sfputs_r+0x22>
 80044c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80044cc:	463a      	mov	r2, r7
 80044ce:	4630      	mov	r0, r6
 80044d0:	f7ff ffdc 	bl	800448c <__sfputc_r>
 80044d4:	1c43      	adds	r3, r0, #1
 80044d6:	d1f3      	bne.n	80044c0 <__sfputs_r+0xa>
 80044d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080044dc <_vfiprintf_r>:
 80044dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044e0:	460d      	mov	r5, r1
 80044e2:	b09d      	sub	sp, #116	; 0x74
 80044e4:	4614      	mov	r4, r2
 80044e6:	4698      	mov	r8, r3
 80044e8:	4606      	mov	r6, r0
 80044ea:	b118      	cbz	r0, 80044f4 <_vfiprintf_r+0x18>
 80044ec:	6983      	ldr	r3, [r0, #24]
 80044ee:	b90b      	cbnz	r3, 80044f4 <_vfiprintf_r+0x18>
 80044f0:	f7ff fb0a 	bl	8003b08 <__sinit>
 80044f4:	4b89      	ldr	r3, [pc, #548]	; (800471c <_vfiprintf_r+0x240>)
 80044f6:	429d      	cmp	r5, r3
 80044f8:	d11b      	bne.n	8004532 <_vfiprintf_r+0x56>
 80044fa:	6875      	ldr	r5, [r6, #4]
 80044fc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80044fe:	07d9      	lsls	r1, r3, #31
 8004500:	d405      	bmi.n	800450e <_vfiprintf_r+0x32>
 8004502:	89ab      	ldrh	r3, [r5, #12]
 8004504:	059a      	lsls	r2, r3, #22
 8004506:	d402      	bmi.n	800450e <_vfiprintf_r+0x32>
 8004508:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800450a:	f7ff fbb2 	bl	8003c72 <__retarget_lock_acquire_recursive>
 800450e:	89ab      	ldrh	r3, [r5, #12]
 8004510:	071b      	lsls	r3, r3, #28
 8004512:	d501      	bpl.n	8004518 <_vfiprintf_r+0x3c>
 8004514:	692b      	ldr	r3, [r5, #16]
 8004516:	b9eb      	cbnz	r3, 8004554 <_vfiprintf_r+0x78>
 8004518:	4629      	mov	r1, r5
 800451a:	4630      	mov	r0, r6
 800451c:	f7fe fad4 	bl	8002ac8 <__swsetup_r>
 8004520:	b1c0      	cbz	r0, 8004554 <_vfiprintf_r+0x78>
 8004522:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004524:	07dc      	lsls	r4, r3, #31
 8004526:	d50e      	bpl.n	8004546 <_vfiprintf_r+0x6a>
 8004528:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800452c:	b01d      	add	sp, #116	; 0x74
 800452e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004532:	4b7b      	ldr	r3, [pc, #492]	; (8004720 <_vfiprintf_r+0x244>)
 8004534:	429d      	cmp	r5, r3
 8004536:	d101      	bne.n	800453c <_vfiprintf_r+0x60>
 8004538:	68b5      	ldr	r5, [r6, #8]
 800453a:	e7df      	b.n	80044fc <_vfiprintf_r+0x20>
 800453c:	4b79      	ldr	r3, [pc, #484]	; (8004724 <_vfiprintf_r+0x248>)
 800453e:	429d      	cmp	r5, r3
 8004540:	bf08      	it	eq
 8004542:	68f5      	ldreq	r5, [r6, #12]
 8004544:	e7da      	b.n	80044fc <_vfiprintf_r+0x20>
 8004546:	89ab      	ldrh	r3, [r5, #12]
 8004548:	0598      	lsls	r0, r3, #22
 800454a:	d4ed      	bmi.n	8004528 <_vfiprintf_r+0x4c>
 800454c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800454e:	f7ff fb91 	bl	8003c74 <__retarget_lock_release_recursive>
 8004552:	e7e9      	b.n	8004528 <_vfiprintf_r+0x4c>
 8004554:	2300      	movs	r3, #0
 8004556:	9309      	str	r3, [sp, #36]	; 0x24
 8004558:	2320      	movs	r3, #32
 800455a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800455e:	f8cd 800c 	str.w	r8, [sp, #12]
 8004562:	2330      	movs	r3, #48	; 0x30
 8004564:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8004728 <_vfiprintf_r+0x24c>
 8004568:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800456c:	f04f 0901 	mov.w	r9, #1
 8004570:	4623      	mov	r3, r4
 8004572:	469a      	mov	sl, r3
 8004574:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004578:	b10a      	cbz	r2, 800457e <_vfiprintf_r+0xa2>
 800457a:	2a25      	cmp	r2, #37	; 0x25
 800457c:	d1f9      	bne.n	8004572 <_vfiprintf_r+0x96>
 800457e:	ebba 0b04 	subs.w	fp, sl, r4
 8004582:	d00b      	beq.n	800459c <_vfiprintf_r+0xc0>
 8004584:	465b      	mov	r3, fp
 8004586:	4622      	mov	r2, r4
 8004588:	4629      	mov	r1, r5
 800458a:	4630      	mov	r0, r6
 800458c:	f7ff ff93 	bl	80044b6 <__sfputs_r>
 8004590:	3001      	adds	r0, #1
 8004592:	f000 80aa 	beq.w	80046ea <_vfiprintf_r+0x20e>
 8004596:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004598:	445a      	add	r2, fp
 800459a:	9209      	str	r2, [sp, #36]	; 0x24
 800459c:	f89a 3000 	ldrb.w	r3, [sl]
 80045a0:	2b00      	cmp	r3, #0
 80045a2:	f000 80a2 	beq.w	80046ea <_vfiprintf_r+0x20e>
 80045a6:	2300      	movs	r3, #0
 80045a8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80045ac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80045b0:	f10a 0a01 	add.w	sl, sl, #1
 80045b4:	9304      	str	r3, [sp, #16]
 80045b6:	9307      	str	r3, [sp, #28]
 80045b8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80045bc:	931a      	str	r3, [sp, #104]	; 0x68
 80045be:	4654      	mov	r4, sl
 80045c0:	2205      	movs	r2, #5
 80045c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045c6:	4858      	ldr	r0, [pc, #352]	; (8004728 <_vfiprintf_r+0x24c>)
 80045c8:	f7fb fe12 	bl	80001f0 <memchr>
 80045cc:	9a04      	ldr	r2, [sp, #16]
 80045ce:	b9d8      	cbnz	r0, 8004608 <_vfiprintf_r+0x12c>
 80045d0:	06d1      	lsls	r1, r2, #27
 80045d2:	bf44      	itt	mi
 80045d4:	2320      	movmi	r3, #32
 80045d6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80045da:	0713      	lsls	r3, r2, #28
 80045dc:	bf44      	itt	mi
 80045de:	232b      	movmi	r3, #43	; 0x2b
 80045e0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80045e4:	f89a 3000 	ldrb.w	r3, [sl]
 80045e8:	2b2a      	cmp	r3, #42	; 0x2a
 80045ea:	d015      	beq.n	8004618 <_vfiprintf_r+0x13c>
 80045ec:	9a07      	ldr	r2, [sp, #28]
 80045ee:	4654      	mov	r4, sl
 80045f0:	2000      	movs	r0, #0
 80045f2:	f04f 0c0a 	mov.w	ip, #10
 80045f6:	4621      	mov	r1, r4
 80045f8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80045fc:	3b30      	subs	r3, #48	; 0x30
 80045fe:	2b09      	cmp	r3, #9
 8004600:	d94e      	bls.n	80046a0 <_vfiprintf_r+0x1c4>
 8004602:	b1b0      	cbz	r0, 8004632 <_vfiprintf_r+0x156>
 8004604:	9207      	str	r2, [sp, #28]
 8004606:	e014      	b.n	8004632 <_vfiprintf_r+0x156>
 8004608:	eba0 0308 	sub.w	r3, r0, r8
 800460c:	fa09 f303 	lsl.w	r3, r9, r3
 8004610:	4313      	orrs	r3, r2
 8004612:	9304      	str	r3, [sp, #16]
 8004614:	46a2      	mov	sl, r4
 8004616:	e7d2      	b.n	80045be <_vfiprintf_r+0xe2>
 8004618:	9b03      	ldr	r3, [sp, #12]
 800461a:	1d19      	adds	r1, r3, #4
 800461c:	681b      	ldr	r3, [r3, #0]
 800461e:	9103      	str	r1, [sp, #12]
 8004620:	2b00      	cmp	r3, #0
 8004622:	bfbb      	ittet	lt
 8004624:	425b      	neglt	r3, r3
 8004626:	f042 0202 	orrlt.w	r2, r2, #2
 800462a:	9307      	strge	r3, [sp, #28]
 800462c:	9307      	strlt	r3, [sp, #28]
 800462e:	bfb8      	it	lt
 8004630:	9204      	strlt	r2, [sp, #16]
 8004632:	7823      	ldrb	r3, [r4, #0]
 8004634:	2b2e      	cmp	r3, #46	; 0x2e
 8004636:	d10c      	bne.n	8004652 <_vfiprintf_r+0x176>
 8004638:	7863      	ldrb	r3, [r4, #1]
 800463a:	2b2a      	cmp	r3, #42	; 0x2a
 800463c:	d135      	bne.n	80046aa <_vfiprintf_r+0x1ce>
 800463e:	9b03      	ldr	r3, [sp, #12]
 8004640:	1d1a      	adds	r2, r3, #4
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	9203      	str	r2, [sp, #12]
 8004646:	2b00      	cmp	r3, #0
 8004648:	bfb8      	it	lt
 800464a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800464e:	3402      	adds	r4, #2
 8004650:	9305      	str	r3, [sp, #20]
 8004652:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8004738 <_vfiprintf_r+0x25c>
 8004656:	7821      	ldrb	r1, [r4, #0]
 8004658:	2203      	movs	r2, #3
 800465a:	4650      	mov	r0, sl
 800465c:	f7fb fdc8 	bl	80001f0 <memchr>
 8004660:	b140      	cbz	r0, 8004674 <_vfiprintf_r+0x198>
 8004662:	2340      	movs	r3, #64	; 0x40
 8004664:	eba0 000a 	sub.w	r0, r0, sl
 8004668:	fa03 f000 	lsl.w	r0, r3, r0
 800466c:	9b04      	ldr	r3, [sp, #16]
 800466e:	4303      	orrs	r3, r0
 8004670:	3401      	adds	r4, #1
 8004672:	9304      	str	r3, [sp, #16]
 8004674:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004678:	482c      	ldr	r0, [pc, #176]	; (800472c <_vfiprintf_r+0x250>)
 800467a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800467e:	2206      	movs	r2, #6
 8004680:	f7fb fdb6 	bl	80001f0 <memchr>
 8004684:	2800      	cmp	r0, #0
 8004686:	d03f      	beq.n	8004708 <_vfiprintf_r+0x22c>
 8004688:	4b29      	ldr	r3, [pc, #164]	; (8004730 <_vfiprintf_r+0x254>)
 800468a:	bb1b      	cbnz	r3, 80046d4 <_vfiprintf_r+0x1f8>
 800468c:	9b03      	ldr	r3, [sp, #12]
 800468e:	3307      	adds	r3, #7
 8004690:	f023 0307 	bic.w	r3, r3, #7
 8004694:	3308      	adds	r3, #8
 8004696:	9303      	str	r3, [sp, #12]
 8004698:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800469a:	443b      	add	r3, r7
 800469c:	9309      	str	r3, [sp, #36]	; 0x24
 800469e:	e767      	b.n	8004570 <_vfiprintf_r+0x94>
 80046a0:	fb0c 3202 	mla	r2, ip, r2, r3
 80046a4:	460c      	mov	r4, r1
 80046a6:	2001      	movs	r0, #1
 80046a8:	e7a5      	b.n	80045f6 <_vfiprintf_r+0x11a>
 80046aa:	2300      	movs	r3, #0
 80046ac:	3401      	adds	r4, #1
 80046ae:	9305      	str	r3, [sp, #20]
 80046b0:	4619      	mov	r1, r3
 80046b2:	f04f 0c0a 	mov.w	ip, #10
 80046b6:	4620      	mov	r0, r4
 80046b8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80046bc:	3a30      	subs	r2, #48	; 0x30
 80046be:	2a09      	cmp	r2, #9
 80046c0:	d903      	bls.n	80046ca <_vfiprintf_r+0x1ee>
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	d0c5      	beq.n	8004652 <_vfiprintf_r+0x176>
 80046c6:	9105      	str	r1, [sp, #20]
 80046c8:	e7c3      	b.n	8004652 <_vfiprintf_r+0x176>
 80046ca:	fb0c 2101 	mla	r1, ip, r1, r2
 80046ce:	4604      	mov	r4, r0
 80046d0:	2301      	movs	r3, #1
 80046d2:	e7f0      	b.n	80046b6 <_vfiprintf_r+0x1da>
 80046d4:	ab03      	add	r3, sp, #12
 80046d6:	9300      	str	r3, [sp, #0]
 80046d8:	462a      	mov	r2, r5
 80046da:	4b16      	ldr	r3, [pc, #88]	; (8004734 <_vfiprintf_r+0x258>)
 80046dc:	a904      	add	r1, sp, #16
 80046de:	4630      	mov	r0, r6
 80046e0:	f7fd fd5c 	bl	800219c <_printf_float>
 80046e4:	4607      	mov	r7, r0
 80046e6:	1c78      	adds	r0, r7, #1
 80046e8:	d1d6      	bne.n	8004698 <_vfiprintf_r+0x1bc>
 80046ea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80046ec:	07d9      	lsls	r1, r3, #31
 80046ee:	d405      	bmi.n	80046fc <_vfiprintf_r+0x220>
 80046f0:	89ab      	ldrh	r3, [r5, #12]
 80046f2:	059a      	lsls	r2, r3, #22
 80046f4:	d402      	bmi.n	80046fc <_vfiprintf_r+0x220>
 80046f6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80046f8:	f7ff fabc 	bl	8003c74 <__retarget_lock_release_recursive>
 80046fc:	89ab      	ldrh	r3, [r5, #12]
 80046fe:	065b      	lsls	r3, r3, #25
 8004700:	f53f af12 	bmi.w	8004528 <_vfiprintf_r+0x4c>
 8004704:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004706:	e711      	b.n	800452c <_vfiprintf_r+0x50>
 8004708:	ab03      	add	r3, sp, #12
 800470a:	9300      	str	r3, [sp, #0]
 800470c:	462a      	mov	r2, r5
 800470e:	4b09      	ldr	r3, [pc, #36]	; (8004734 <_vfiprintf_r+0x258>)
 8004710:	a904      	add	r1, sp, #16
 8004712:	4630      	mov	r0, r6
 8004714:	f7fd ffda 	bl	80026cc <_printf_i>
 8004718:	e7e4      	b.n	80046e4 <_vfiprintf_r+0x208>
 800471a:	bf00      	nop
 800471c:	08004b58 	.word	0x08004b58
 8004720:	08004b78 	.word	0x08004b78
 8004724:	08004b38 	.word	0x08004b38
 8004728:	08004cf4 	.word	0x08004cf4
 800472c:	08004cfe 	.word	0x08004cfe
 8004730:	0800219d 	.word	0x0800219d
 8004734:	080044b7 	.word	0x080044b7
 8004738:	08004cfa 	.word	0x08004cfa

0800473c <__sread>:
 800473c:	b510      	push	{r4, lr}
 800473e:	460c      	mov	r4, r1
 8004740:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004744:	f000 f8ae 	bl	80048a4 <_read_r>
 8004748:	2800      	cmp	r0, #0
 800474a:	bfab      	itete	ge
 800474c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800474e:	89a3      	ldrhlt	r3, [r4, #12]
 8004750:	181b      	addge	r3, r3, r0
 8004752:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8004756:	bfac      	ite	ge
 8004758:	6563      	strge	r3, [r4, #84]	; 0x54
 800475a:	81a3      	strhlt	r3, [r4, #12]
 800475c:	bd10      	pop	{r4, pc}

0800475e <__swrite>:
 800475e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004762:	461f      	mov	r7, r3
 8004764:	898b      	ldrh	r3, [r1, #12]
 8004766:	05db      	lsls	r3, r3, #23
 8004768:	4605      	mov	r5, r0
 800476a:	460c      	mov	r4, r1
 800476c:	4616      	mov	r6, r2
 800476e:	d505      	bpl.n	800477c <__swrite+0x1e>
 8004770:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004774:	2302      	movs	r3, #2
 8004776:	2200      	movs	r2, #0
 8004778:	f000 f870 	bl	800485c <_lseek_r>
 800477c:	89a3      	ldrh	r3, [r4, #12]
 800477e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004782:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004786:	81a3      	strh	r3, [r4, #12]
 8004788:	4632      	mov	r2, r6
 800478a:	463b      	mov	r3, r7
 800478c:	4628      	mov	r0, r5
 800478e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004792:	f000 b817 	b.w	80047c4 <_write_r>

08004796 <__sseek>:
 8004796:	b510      	push	{r4, lr}
 8004798:	460c      	mov	r4, r1
 800479a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800479e:	f000 f85d 	bl	800485c <_lseek_r>
 80047a2:	1c43      	adds	r3, r0, #1
 80047a4:	89a3      	ldrh	r3, [r4, #12]
 80047a6:	bf15      	itete	ne
 80047a8:	6560      	strne	r0, [r4, #84]	; 0x54
 80047aa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80047ae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80047b2:	81a3      	strheq	r3, [r4, #12]
 80047b4:	bf18      	it	ne
 80047b6:	81a3      	strhne	r3, [r4, #12]
 80047b8:	bd10      	pop	{r4, pc}

080047ba <__sclose>:
 80047ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80047be:	f000 b81b 	b.w	80047f8 <_close_r>
	...

080047c4 <_write_r>:
 80047c4:	b538      	push	{r3, r4, r5, lr}
 80047c6:	4d07      	ldr	r5, [pc, #28]	; (80047e4 <_write_r+0x20>)
 80047c8:	4604      	mov	r4, r0
 80047ca:	4608      	mov	r0, r1
 80047cc:	4611      	mov	r1, r2
 80047ce:	2200      	movs	r2, #0
 80047d0:	602a      	str	r2, [r5, #0]
 80047d2:	461a      	mov	r2, r3
 80047d4:	f7fc fb71 	bl	8000eba <_write>
 80047d8:	1c43      	adds	r3, r0, #1
 80047da:	d102      	bne.n	80047e2 <_write_r+0x1e>
 80047dc:	682b      	ldr	r3, [r5, #0]
 80047de:	b103      	cbz	r3, 80047e2 <_write_r+0x1e>
 80047e0:	6023      	str	r3, [r4, #0]
 80047e2:	bd38      	pop	{r3, r4, r5, pc}
 80047e4:	20000210 	.word	0x20000210

080047e8 <abort>:
 80047e8:	b508      	push	{r3, lr}
 80047ea:	2006      	movs	r0, #6
 80047ec:	f000 f894 	bl	8004918 <raise>
 80047f0:	2001      	movs	r0, #1
 80047f2:	f000 f901 	bl	80049f8 <_exit>
	...

080047f8 <_close_r>:
 80047f8:	b538      	push	{r3, r4, r5, lr}
 80047fa:	4d06      	ldr	r5, [pc, #24]	; (8004814 <_close_r+0x1c>)
 80047fc:	2300      	movs	r3, #0
 80047fe:	4604      	mov	r4, r0
 8004800:	4608      	mov	r0, r1
 8004802:	602b      	str	r3, [r5, #0]
 8004804:	f000 f8b2 	bl	800496c <_close>
 8004808:	1c43      	adds	r3, r0, #1
 800480a:	d102      	bne.n	8004812 <_close_r+0x1a>
 800480c:	682b      	ldr	r3, [r5, #0]
 800480e:	b103      	cbz	r3, 8004812 <_close_r+0x1a>
 8004810:	6023      	str	r3, [r4, #0]
 8004812:	bd38      	pop	{r3, r4, r5, pc}
 8004814:	20000210 	.word	0x20000210

08004818 <_fstat_r>:
 8004818:	b538      	push	{r3, r4, r5, lr}
 800481a:	4d07      	ldr	r5, [pc, #28]	; (8004838 <_fstat_r+0x20>)
 800481c:	2300      	movs	r3, #0
 800481e:	4604      	mov	r4, r0
 8004820:	4608      	mov	r0, r1
 8004822:	4611      	mov	r1, r2
 8004824:	602b      	str	r3, [r5, #0]
 8004826:	f000 f8a9 	bl	800497c <_fstat>
 800482a:	1c43      	adds	r3, r0, #1
 800482c:	d102      	bne.n	8004834 <_fstat_r+0x1c>
 800482e:	682b      	ldr	r3, [r5, #0]
 8004830:	b103      	cbz	r3, 8004834 <_fstat_r+0x1c>
 8004832:	6023      	str	r3, [r4, #0]
 8004834:	bd38      	pop	{r3, r4, r5, pc}
 8004836:	bf00      	nop
 8004838:	20000210 	.word	0x20000210

0800483c <_isatty_r>:
 800483c:	b538      	push	{r3, r4, r5, lr}
 800483e:	4d06      	ldr	r5, [pc, #24]	; (8004858 <_isatty_r+0x1c>)
 8004840:	2300      	movs	r3, #0
 8004842:	4604      	mov	r4, r0
 8004844:	4608      	mov	r0, r1
 8004846:	602b      	str	r3, [r5, #0]
 8004848:	f000 f8a8 	bl	800499c <_isatty>
 800484c:	1c43      	adds	r3, r0, #1
 800484e:	d102      	bne.n	8004856 <_isatty_r+0x1a>
 8004850:	682b      	ldr	r3, [r5, #0]
 8004852:	b103      	cbz	r3, 8004856 <_isatty_r+0x1a>
 8004854:	6023      	str	r3, [r4, #0]
 8004856:	bd38      	pop	{r3, r4, r5, pc}
 8004858:	20000210 	.word	0x20000210

0800485c <_lseek_r>:
 800485c:	b538      	push	{r3, r4, r5, lr}
 800485e:	4d07      	ldr	r5, [pc, #28]	; (800487c <_lseek_r+0x20>)
 8004860:	4604      	mov	r4, r0
 8004862:	4608      	mov	r0, r1
 8004864:	4611      	mov	r1, r2
 8004866:	2200      	movs	r2, #0
 8004868:	602a      	str	r2, [r5, #0]
 800486a:	461a      	mov	r2, r3
 800486c:	f000 f8a6 	bl	80049bc <_lseek>
 8004870:	1c43      	adds	r3, r0, #1
 8004872:	d102      	bne.n	800487a <_lseek_r+0x1e>
 8004874:	682b      	ldr	r3, [r5, #0]
 8004876:	b103      	cbz	r3, 800487a <_lseek_r+0x1e>
 8004878:	6023      	str	r3, [r4, #0]
 800487a:	bd38      	pop	{r3, r4, r5, pc}
 800487c:	20000210 	.word	0x20000210

08004880 <__ascii_mbtowc>:
 8004880:	b082      	sub	sp, #8
 8004882:	b901      	cbnz	r1, 8004886 <__ascii_mbtowc+0x6>
 8004884:	a901      	add	r1, sp, #4
 8004886:	b142      	cbz	r2, 800489a <__ascii_mbtowc+0x1a>
 8004888:	b14b      	cbz	r3, 800489e <__ascii_mbtowc+0x1e>
 800488a:	7813      	ldrb	r3, [r2, #0]
 800488c:	600b      	str	r3, [r1, #0]
 800488e:	7812      	ldrb	r2, [r2, #0]
 8004890:	1e10      	subs	r0, r2, #0
 8004892:	bf18      	it	ne
 8004894:	2001      	movne	r0, #1
 8004896:	b002      	add	sp, #8
 8004898:	4770      	bx	lr
 800489a:	4610      	mov	r0, r2
 800489c:	e7fb      	b.n	8004896 <__ascii_mbtowc+0x16>
 800489e:	f06f 0001 	mvn.w	r0, #1
 80048a2:	e7f8      	b.n	8004896 <__ascii_mbtowc+0x16>

080048a4 <_read_r>:
 80048a4:	b538      	push	{r3, r4, r5, lr}
 80048a6:	4d07      	ldr	r5, [pc, #28]	; (80048c4 <_read_r+0x20>)
 80048a8:	4604      	mov	r4, r0
 80048aa:	4608      	mov	r0, r1
 80048ac:	4611      	mov	r1, r2
 80048ae:	2200      	movs	r2, #0
 80048b0:	602a      	str	r2, [r5, #0]
 80048b2:	461a      	mov	r2, r3
 80048b4:	f000 f88a 	bl	80049cc <_read>
 80048b8:	1c43      	adds	r3, r0, #1
 80048ba:	d102      	bne.n	80048c2 <_read_r+0x1e>
 80048bc:	682b      	ldr	r3, [r5, #0]
 80048be:	b103      	cbz	r3, 80048c2 <_read_r+0x1e>
 80048c0:	6023      	str	r3, [r4, #0]
 80048c2:	bd38      	pop	{r3, r4, r5, pc}
 80048c4:	20000210 	.word	0x20000210

080048c8 <_raise_r>:
 80048c8:	291f      	cmp	r1, #31
 80048ca:	b538      	push	{r3, r4, r5, lr}
 80048cc:	4604      	mov	r4, r0
 80048ce:	460d      	mov	r5, r1
 80048d0:	d904      	bls.n	80048dc <_raise_r+0x14>
 80048d2:	2316      	movs	r3, #22
 80048d4:	6003      	str	r3, [r0, #0]
 80048d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80048da:	bd38      	pop	{r3, r4, r5, pc}
 80048dc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80048de:	b112      	cbz	r2, 80048e6 <_raise_r+0x1e>
 80048e0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80048e4:	b94b      	cbnz	r3, 80048fa <_raise_r+0x32>
 80048e6:	4620      	mov	r0, r4
 80048e8:	f000 f830 	bl	800494c <_getpid_r>
 80048ec:	462a      	mov	r2, r5
 80048ee:	4601      	mov	r1, r0
 80048f0:	4620      	mov	r0, r4
 80048f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80048f6:	f000 b817 	b.w	8004928 <_kill_r>
 80048fa:	2b01      	cmp	r3, #1
 80048fc:	d00a      	beq.n	8004914 <_raise_r+0x4c>
 80048fe:	1c59      	adds	r1, r3, #1
 8004900:	d103      	bne.n	800490a <_raise_r+0x42>
 8004902:	2316      	movs	r3, #22
 8004904:	6003      	str	r3, [r0, #0]
 8004906:	2001      	movs	r0, #1
 8004908:	e7e7      	b.n	80048da <_raise_r+0x12>
 800490a:	2400      	movs	r4, #0
 800490c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004910:	4628      	mov	r0, r5
 8004912:	4798      	blx	r3
 8004914:	2000      	movs	r0, #0
 8004916:	e7e0      	b.n	80048da <_raise_r+0x12>

08004918 <raise>:
 8004918:	4b02      	ldr	r3, [pc, #8]	; (8004924 <raise+0xc>)
 800491a:	4601      	mov	r1, r0
 800491c:	6818      	ldr	r0, [r3, #0]
 800491e:	f7ff bfd3 	b.w	80048c8 <_raise_r>
 8004922:	bf00      	nop
 8004924:	20000000 	.word	0x20000000

08004928 <_kill_r>:
 8004928:	b538      	push	{r3, r4, r5, lr}
 800492a:	4d07      	ldr	r5, [pc, #28]	; (8004948 <_kill_r+0x20>)
 800492c:	2300      	movs	r3, #0
 800492e:	4604      	mov	r4, r0
 8004930:	4608      	mov	r0, r1
 8004932:	4611      	mov	r1, r2
 8004934:	602b      	str	r3, [r5, #0]
 8004936:	f000 f839 	bl	80049ac <_kill>
 800493a:	1c43      	adds	r3, r0, #1
 800493c:	d102      	bne.n	8004944 <_kill_r+0x1c>
 800493e:	682b      	ldr	r3, [r5, #0]
 8004940:	b103      	cbz	r3, 8004944 <_kill_r+0x1c>
 8004942:	6023      	str	r3, [r4, #0]
 8004944:	bd38      	pop	{r3, r4, r5, pc}
 8004946:	bf00      	nop
 8004948:	20000210 	.word	0x20000210

0800494c <_getpid_r>:
 800494c:	f000 b81e 	b.w	800498c <_getpid>

08004950 <__ascii_wctomb>:
 8004950:	4603      	mov	r3, r0
 8004952:	4608      	mov	r0, r1
 8004954:	b141      	cbz	r1, 8004968 <__ascii_wctomb+0x18>
 8004956:	2aff      	cmp	r2, #255	; 0xff
 8004958:	d904      	bls.n	8004964 <__ascii_wctomb+0x14>
 800495a:	228a      	movs	r2, #138	; 0x8a
 800495c:	601a      	str	r2, [r3, #0]
 800495e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004962:	4770      	bx	lr
 8004964:	700a      	strb	r2, [r1, #0]
 8004966:	2001      	movs	r0, #1
 8004968:	4770      	bx	lr
	...

0800496c <_close>:
 800496c:	4b02      	ldr	r3, [pc, #8]	; (8004978 <_close+0xc>)
 800496e:	2258      	movs	r2, #88	; 0x58
 8004970:	601a      	str	r2, [r3, #0]
 8004972:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004976:	4770      	bx	lr
 8004978:	20000210 	.word	0x20000210

0800497c <_fstat>:
 800497c:	4b02      	ldr	r3, [pc, #8]	; (8004988 <_fstat+0xc>)
 800497e:	2258      	movs	r2, #88	; 0x58
 8004980:	601a      	str	r2, [r3, #0]
 8004982:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004986:	4770      	bx	lr
 8004988:	20000210 	.word	0x20000210

0800498c <_getpid>:
 800498c:	4b02      	ldr	r3, [pc, #8]	; (8004998 <_getpid+0xc>)
 800498e:	2258      	movs	r2, #88	; 0x58
 8004990:	601a      	str	r2, [r3, #0]
 8004992:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004996:	4770      	bx	lr
 8004998:	20000210 	.word	0x20000210

0800499c <_isatty>:
 800499c:	4b02      	ldr	r3, [pc, #8]	; (80049a8 <_isatty+0xc>)
 800499e:	2258      	movs	r2, #88	; 0x58
 80049a0:	601a      	str	r2, [r3, #0]
 80049a2:	2000      	movs	r0, #0
 80049a4:	4770      	bx	lr
 80049a6:	bf00      	nop
 80049a8:	20000210 	.word	0x20000210

080049ac <_kill>:
 80049ac:	4b02      	ldr	r3, [pc, #8]	; (80049b8 <_kill+0xc>)
 80049ae:	2258      	movs	r2, #88	; 0x58
 80049b0:	601a      	str	r2, [r3, #0]
 80049b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80049b6:	4770      	bx	lr
 80049b8:	20000210 	.word	0x20000210

080049bc <_lseek>:
 80049bc:	4b02      	ldr	r3, [pc, #8]	; (80049c8 <_lseek+0xc>)
 80049be:	2258      	movs	r2, #88	; 0x58
 80049c0:	601a      	str	r2, [r3, #0]
 80049c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80049c6:	4770      	bx	lr
 80049c8:	20000210 	.word	0x20000210

080049cc <_read>:
 80049cc:	4b02      	ldr	r3, [pc, #8]	; (80049d8 <_read+0xc>)
 80049ce:	2258      	movs	r2, #88	; 0x58
 80049d0:	601a      	str	r2, [r3, #0]
 80049d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80049d6:	4770      	bx	lr
 80049d8:	20000210 	.word	0x20000210

080049dc <_sbrk>:
 80049dc:	4b04      	ldr	r3, [pc, #16]	; (80049f0 <_sbrk+0x14>)
 80049de:	6819      	ldr	r1, [r3, #0]
 80049e0:	4602      	mov	r2, r0
 80049e2:	b909      	cbnz	r1, 80049e8 <_sbrk+0xc>
 80049e4:	4903      	ldr	r1, [pc, #12]	; (80049f4 <_sbrk+0x18>)
 80049e6:	6019      	str	r1, [r3, #0]
 80049e8:	6818      	ldr	r0, [r3, #0]
 80049ea:	4402      	add	r2, r0
 80049ec:	601a      	str	r2, [r3, #0]
 80049ee:	4770      	bx	lr
 80049f0:	20000200 	.word	0x20000200
 80049f4:	20000218 	.word	0x20000218

080049f8 <_exit>:
 80049f8:	e7fe      	b.n	80049f8 <_exit>
	...

080049fc <_init>:
 80049fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049fe:	bf00      	nop
 8004a00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004a02:	bc08      	pop	{r3}
 8004a04:	469e      	mov	lr, r3
 8004a06:	4770      	bx	lr

08004a08 <_fini>:
 8004a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a0a:	bf00      	nop
 8004a0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004a0e:	bc08      	pop	{r3}
 8004a10:	469e      	mov	lr, r3
 8004a12:	4770      	bx	lr
